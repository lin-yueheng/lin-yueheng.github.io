{
    "version": "https://jsonfeed.org/version/1",
    "title": "диво",
    "description": "在努力提升你喜欢我的概率，即使是从0开始！~~（@ @）~~",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/%E4%B9%A6%E7%B1%8D-space-1/",
            "url": "http://example.com/%E4%B9%A6%E7%B1%8D-space-1/",
            "title": "书籍-space-1",
            "date_published": "2023-01-20T10:16:05.000Z",
            "content_html": "<h1 align=\"center\">推荐阅读书籍</h1>\n<ol>\n<li>\n<pre><code>1. 三体\n2. 白夜行\n3. 人类简史\n4. 万历十五年\n5. 未来简史\n6. 时间简史\n7. 理想国\n8. 小王子\n9. 从一到无穷大\n10. 艺术的故事\n</code></pre>\n</li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "http://example.com/miniprogram_master/",
            "url": "http://example.com/miniprogram_master/",
            "title": "miniprogram_master",
            "date_published": "2023-01-20T10:15:50.000Z",
            "content_html": "<h1 id=\"miniprogram_master\"><a class=\"markdownIt-Anchor\" href=\"#miniprogram_master\">#</a> miniprogram_master</h1>\n<h2 id=\"组别验证码\"><a class=\"markdownIt-Anchor\" href=\"#组别验证码\">#</a> 组别验证码</h2>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230118224004953.png\" alt=\"image-20230118224004953\" style=\"zoom: 50%;\" />\n<h2 id=\"实现接口学习前端代码\"><a class=\"markdownIt-Anchor\" href=\"#实现接口学习前端代码\">#</a> 实现接口 (学习前端代码)</h2>\n<p>我自己还要写很多的前端代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">getApp</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> defaultAvatarUrl = <span class=\"string\">&#x27;https://mmbiz.qpic.cn/mmbiz/icTdbqWNOwNRna42FI242Lcia07jQodd2FJGIYQfG0LAJGFxM4FbnQP6yfMxBgJ0F3YRqJCJ1aPAK2dQagdusBZg/0&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Page</span>(&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  getPhoneNumber (e) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e.<span class=\"property\">detail</span>.<span class=\"property\">code</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">data</span>: &#123;</span><br><span class=\"line\"><span class=\"comment\">// 图片地址</span></span><br><span class=\"line\">    <span class=\"attr\">avatarUrl</span>: <span class=\"string\">&quot;https://lin-yueheng.oss-cn-shanghai.aliyuncs.com/img_for_typora/202301191901415.png&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">username</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">password</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">mobphone</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">check</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">wolfList</span>: [&#123;&#125;],</span><br><span class=\"line\">    <span class=\"attr\">theme</span>: wx.<span class=\"title function_\">getSystemInfoSync</span>().<span class=\"property\">theme</span>,</span><br><span class=\"line\">     <span class=\"comment\">//是否为密码框</span></span><br><span class=\"line\">     <span class=\"attr\">passwordType</span>:<span class=\"literal\">true</span>,</span><br><span class=\"line\">     <span class=\"comment\">// 是否显示密码</span></span><br><span class=\"line\">     <span class=\"attr\">show_pass</span>:<span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*我写的</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  //获取app.js中的数据</span></span><br><span class=\"line\"><span class=\"comment\">  getAppData()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">    var arr=getApp();</span></span><br><span class=\"line\"><span class=\"comment\">    this.data=getApp().data;</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;,</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    //提交表单注册</span></span><br><span class=\"line\"><span class=\"comment\">getData1:function () &#123;</span></span><br><span class=\"line\"><span class=\"comment\">  wx.request(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">    // url: &#x27;http://localhost:8080/logins/check&#x27;,  //测试</span></span><br><span class=\"line\"><span class=\"comment\">    url: &#x27;https://person.hr16.top/logins/check&#x27;,  //部署</span></span><br><span class=\"line\"><span class=\"comment\">    method:&quot;POST&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">    data:&#123;</span></span><br><span class=\"line\"><span class=\"comment\">      name:this.data.username,</span></span><br><span class=\"line\"><span class=\"comment\">      code:this.data.check,</span></span><br><span class=\"line\"><span class=\"comment\">      mobile:this.data.mobphone,</span></span><br><span class=\"line\"><span class=\"comment\">      password:this.data.password</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">    //调试中</span></span><br><span class=\"line\"><span class=\"comment\">    success: (res)=&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">      console.log(this.data.username)</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">      fail: (res) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        console.log(this.data.username)</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">&#125;,</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">  //判断用户输入的数据是否配对</span></span><br><span class=\"line\"><span class=\"comment\">  getData2(that)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">    wx.request(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">      // url: &#x27;http://localhost:8080/logins/goin&#x27;, //测试</span></span><br><span class=\"line\"><span class=\"comment\">      url: &#x27;https://person.hr16.top/logins/goin&#x27;,  //部署</span></span><br><span class=\"line\"><span class=\"comment\">      method: &quot;GET&quot;,</span></span><br><span class=\"line\"><span class=\"comment\">      success(res)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        that.setData(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        wolfList: res.data</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;,</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">     //点击注册，判断用户输入的名称以及组别验证码是否正确,true-&gt;跳转页面</span></span><br><span class=\"line\"><span class=\"comment\">  onRegister: function()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">      this.getData1();</span></span><br><span class=\"line\"><span class=\"comment\">      let u=false;      //用来判断该成员是否为野狼队的</span></span><br><span class=\"line\"><span class=\"comment\">      for (let i = 0; i &lt; this.data.wolfList.length; ++i) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">      if(this.data.username==this.data.wolfList[i].username&amp;&amp;this.data.check==this.data.wolfList[i].code)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        u=true;       </span></span><br><span class=\"line\"><span class=\"comment\">        this.pageRouter.navigateTo(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">      // 错误写法：&quot;/pages/homePage/homePage&quot;</span></span><br><span class=\"line\"><span class=\"comment\">      url: &#x27;../homePage/homePage&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">      //false-&gt;</span></span><br><span class=\"line\"><span class=\"comment\">      if(!u)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        wx.showModal(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">          title: &#x27;野狼成员专属&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">          content: &#x27;请等程序猿优化以后再来登录！&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">          success: function (res) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            if (res.confirm) &#123;//这里是点击了确定以后</span></span><br><span class=\"line\"><span class=\"comment\">              console.log(&#x27;用户点击确定&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            &#125; else &#123;//这里是点击了取消以后</span></span><br><span class=\"line\"><span class=\"comment\">              console.log(&#x27;用户点击取消&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;</span></span><br><span class=\"line\"><span class=\"comment\">          &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;,</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    //获取用户输入的名称，并传给data中的username</span></span><br><span class=\"line\"><span class=\"comment\">    username: function(res)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">      this.setData(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        username: res.detail.value</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;,</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    //同上</span></span><br><span class=\"line\"><span class=\"comment\">    password: function(res)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">      this.setData(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        password: res.detail.value</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;,</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    //同上</span></span><br><span class=\"line\"><span class=\"comment\">    mobphone: function(res)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">      this.setData(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        mobphone: res.detail.value</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;,</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    //同上</span></span><br><span class=\"line\"><span class=\"comment\">    check: function(res)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">      this.setData(&#123;</span></span><br><span class=\"line\"><span class=\"comment\">        check: res.detail.value</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;)</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">    </span></span><br><span class=\"line\"><span class=\"comment\">    到这里</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// onChooseAvatar(e) &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//   const &#123; avatarUrl &#125; = e.detail </span></span><br><span class=\"line\">  <span class=\"comment\">//   this.setData(&#123;</span></span><br><span class=\"line\">  <span class=\"comment\">//     avatarUrl,</span></span><br><span class=\"line\">  <span class=\"comment\">//   &#125;)</span></span><br><span class=\"line\">  <span class=\"comment\">// &#125;,</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">seeTap</span>:<span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 经常会在接口的sucess函数里边重置data&#123;&#125;数据，但是直接this.setData是不行的；须写成var that=this;</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span>; </span><br><span class=\"line\">    that.<span class=\"title function_\">setData</span>(&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 切换图标</span></span><br><span class=\"line\">      <span class=\"attr\">show_pass</span>:!that.<span class=\"property\">data</span>.<span class=\"property\">show_pass</span>,</span><br><span class=\"line\">      <span class=\"comment\">// 切换是否密码框</span></span><br><span class=\"line\">      <span class=\"attr\">passwordType</span>:!that.<span class=\"property\">data</span>.<span class=\"property\">passwordType</span>,</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 获取页面输入为定义的username赋值</span></span><br><span class=\"line\">  <span class=\"title function_\">getUserName</span>(<span class=\"params\">username</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"variable language_\">this</span>; </span><br><span class=\"line\">    that.<span class=\"title function_\">setData</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>:that.<span class=\"property\">username</span>.<span class=\"property\">detail</span>.<span class=\"property\">value</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// form 组件可以识别这些自定义组件，并在 submit 事件中返回组件的字段名及其对应字段值</span></span><br><span class=\"line\">  <span class=\"comment\">// e.detail.value.各组件的name属性</span></span><br><span class=\"line\">  <span class=\"title function_\">formSubmit</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setData</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>:e.<span class=\"property\">detail</span>.<span class=\"property\">value</span>.<span class=\"property\">username</span>,</span><br><span class=\"line\">      <span class=\"attr\">password</span>:e.<span class=\"property\">detail</span>.<span class=\"property\">value</span>.<span class=\"property\">password</span>,</span><br><span class=\"line\">      <span class=\"attr\">mobphone</span>:e.<span class=\"property\">detail</span>.<span class=\"property\">value</span>.<span class=\"property\">mobphone</span>,</span><br><span class=\"line\">      <span class=\"attr\">check</span>:e.<span class=\"property\">detail</span>.<span class=\"property\">value</span>.<span class=\"property\">check</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 检验数据是否传递成功的输出语句</span></span><br><span class=\"line\">    <span class=\"comment\">// console.log(this.data.username);</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">onLoad</span>(<span class=\"params\">option</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">getAppData</span>()</span><br><span class=\"line\">       wx.<span class=\"title function_\">showToast</span>(&#123;</span><br><span class=\"line\">         <span class=\"attr\">title</span>: <span class=\"string\">&#x27;首次登录默认注册&#x27;</span>,</span><br><span class=\"line\">         <span class=\"attr\">icon</span>: <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">         <span class=\"attr\">duration</span>: <span class=\"number\">1500</span><span class=\"comment\">//持续的时间</span></span><br><span class=\"line\">       &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> that=<span class=\"variable language_\">this</span>;</span><br><span class=\"line\">    <span class=\"comment\">// this.getData(that);</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">getData2</span>(that);</span><br><span class=\"line\">    wx.<span class=\"title function_\">onThemeChange</span>(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">setData</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">theme</span>: result.<span class=\"property\">theme</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>学习：</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230118155034334.png\" alt=\"image-20230118155034334\"></p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230115095409824.png\" alt=\"image-20230115095409824\"></p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230115100014492.png\" alt=\"image-20230115100014492\"></p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230115100041161.png\" alt=\"image-20230115100041161\"></p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230115103511046.png\" alt=\"image-20230115103511046\"></p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230115152156925.png\" alt=\"image-20230115152156925\"></p>\n<h3 id=\"常见错误描述\"><a class=\"markdownIt-Anchor\" href=\"#常见错误描述\">#</a> 常见错误描述</h3>\n<p>想传 JSON 数据，定义的 domain 类中成员变量不能含有下划线例，user_Name，是错误的！！！</p>\n<p>模仿：</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230118164512651.png\" alt=\"image-20230118164512651\"></p>\n<h3 id=\"post请求\"><a class=\"markdownIt-Anchor\" href=\"#post请求\">#</a> POST 请求</h3>\n<p>找了半天才找到一个正确的！</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">//提交表单注册</span></span><br><span class=\"line\"><span class=\"attr\">getData1</span>:<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  wx.<span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;https://person.hr16.top/logins/check&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>:<span class=\"string\">&quot;POST&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>:&#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>:<span class=\"variable language_\">this</span>.<span class=\"property\">data</span>.<span class=\"property\">username</span>,</span><br><span class=\"line\">      <span class=\"attr\">code</span>:<span class=\"variable language_\">this</span>.<span class=\"property\">data</span>.<span class=\"property\">check</span>,</span><br><span class=\"line\">      <span class=\"attr\">mobile</span>:<span class=\"variable language_\">this</span>.<span class=\"property\">data</span>.<span class=\"property\">mobphone</span>,</span><br><span class=\"line\">      <span class=\"attr\">password</span>:<span class=\"variable language_\">this</span>.<span class=\"property\">data</span>.<span class=\"property\">password</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//调试中</span></span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\">(<span class=\"params\">res</span>)=&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">data</span>.<span class=\"property\">username</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">      <span class=\"attr\">fail</span>: <span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">data</span>.<span class=\"property\">username</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据库设计\"><a class=\"markdownIt-Anchor\" href=\"#数据库设计\">#</a> 数据库设计</h2>\n<p>初步概要设计</p>\n<p>average 和 teamsrank 是一对多的关系</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230119155337840.png\" alt=\"image-20230119155337840\"></p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230119153229260.png\" alt=\"image-20230119153229260\"></p>\n<h3 id=\"约束\"><a class=\"markdownIt-Anchor\" href=\"#约束\">#</a> 约束</h3>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230119161429453.png\" alt=\"image-20230119161429453\"></p>\n<h3 id=\"视图\"><a class=\"markdownIt-Anchor\" href=\"#视图\">#</a> 视图</h3>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230119102951720.png\" alt=\"image-20230119102951720\"></p>\n<h3 id=\"设计说明\"><a class=\"markdownIt-Anchor\" href=\"#设计说明\">#</a> @设计说明</h3>\n<h4 id=\"teamsrank-10\"><a class=\"markdownIt-Anchor\" href=\"#teamsrank-10\">#</a> teamsrank-&gt;1.0</h4>\n<p>由于用户在初次注册的时候，在相应的数据库中并没有相应的数据，因此在导出 excel 数据到 teamsrank 表的时候就必须先产生 code 验证码，队员输入相应的验证码以及相应的队员名称才能够注册登录。</p>\n<h3 id=\"前提概要\"><a class=\"markdownIt-Anchor\" href=\"#前提概要\">#</a> 前提概要</h3>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117133751374.png\" alt=\"image-20230117133751374\"></p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117133933043.png\" alt=\"image-20230117133933043\"></p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117134056113.png\" alt=\"image-20230117134056113\"></p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117134522180.png\" alt=\"image-20230117134522180\"></p>\n<h3 id=\"登录\"><a class=\"markdownIt-Anchor\" href=\"#登录\">#</a> 登录</h3>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117104355478.png\" alt=\"image-20230117104355478\" style=\"zoom:25%;\" />\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/202301192254166.png\" alt=\"image-20230119225452075\"></p>\n<h3 id=\"任务列表\"><a class=\"markdownIt-Anchor\" href=\"#任务列表\">#</a> 任务列表</h3>\n<p>首先先拿到用户的姓名，通过姓名查询到自己的 id，再将用户输入的内容 insert 到属于自己的个人任务中，也就是通过给定的 user_id 来确定是谁的任务。</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117104545409.png\" alt=\"image-20230117104545409\" style=\"zoom:25%;\" />\n<p><img data-src=\"https://lin-yueheng.oss-cn-shanghai.aliyuncs.com/img_for_typora/202301192254166.png\" alt=\"image-20230119225452075\"></p>\n<h4 id=\"修改任务的信息\"><a class=\"markdownIt-Anchor\" href=\"#修改任务的信息\">#</a> 修改任务的信息</h4>\n<p><img data-src=\"https://lin-yueheng.oss-cn-shanghai.aliyuncs.com/img_for_typora/202301192032696.png\" alt=\"image-20230119203224606\"></p>\n<h3 id=\"测试数据\"><a class=\"markdownIt-Anchor\" href=\"#测试数据\">#</a> 测试数据</h3>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117104737869.png\" alt=\"image-20230117104737869\" style=\"zoom:25%;\" />\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117125449843.png\" alt=\"image-20230117125449843\"></p>\n<h3 id=\"每周排行\"><a class=\"markdownIt-Anchor\" href=\"#每周排行\">#</a> 每周排行</h3>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117105001722.png\" alt=\"image-20230117105001722\" style=\"zoom:25%;\" />\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117104630605.png\" alt=\"image-20230117104630605\"></p>\n<h3 id=\"我的时长统计\"><a class=\"markdownIt-Anchor\" href=\"#我的时长统计\">#</a> <s>我的时长统计</s></h3>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117110007766.png\" alt=\"image-20230117110007766\" style=\"zoom:25%;\" />\n<h3 id=\"我的完成记录\"><a class=\"markdownIt-Anchor\" href=\"#我的完成记录\">#</a> <s>我的完成记录</s></h3>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230117110216878.png\" alt=\"image-20230117110216878\" style=\"zoom:25%;\" />\n<h3 id=\"数据表测试\"><a class=\"markdownIt-Anchor\" href=\"#数据表测试\">#</a> 数据表测试</h3>\n<h4 id=\"teamsrank\"><a class=\"markdownIt-Anchor\" href=\"#teamsrank\">#</a> teamsrank</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> Navicat Premium Data Transfer</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"> Source Server         : cuteness</span></span><br><span class=\"line\"><span class=\"comment\"> Source Server Type    : MySQL</span></span><br><span class=\"line\"><span class=\"comment\"> Source Server Version : 50724</span></span><br><span class=\"line\"><span class=\"comment\"> Source Host           : localhost:3306</span></span><br><span class=\"line\"><span class=\"comment\"> Source Schema         : software</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"> Target Server Type    : MySQL</span></span><br><span class=\"line\"><span class=\"comment\"> Target Server Version : 50724</span></span><br><span class=\"line\"><span class=\"comment\"> File Encoding         : 65001</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"> Date: 18/01/2023 14:10:22</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> NAMES utf8mb4;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> FOREIGN_KEY_CHECKS <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ----------------------------</span></span><br><span class=\"line\"><span class=\"comment\">-- Table structure for teamsrank</span></span><br><span class=\"line\"><span class=\"comment\">-- ----------------------------</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> `teamsrank`;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `teamsrank`  (</span><br><span class=\"line\">  `username` <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8 <span class=\"keyword\">COLLATE</span> utf8_general_ci <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `groupname` <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8 <span class=\"keyword\">COLLATE</span> utf8_general_ci <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `minstime` <span class=\"type\">float</span>(<span class=\"number\">100</span>, <span class=\"number\">2</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `users_id` <span class=\"type\">int</span>(<span class=\"number\">20</span>) <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `id` <span class=\"type\">int</span>(<span class=\"number\">10</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`) <span class=\"keyword\">USING</span> BTREE</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> InnoDB AUTO_INCREMENT <span class=\"operator\">=</span> <span class=\"number\">112</span> <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"operator\">=</span> utf8 <span class=\"keyword\">COLLATE</span> <span class=\"operator\">=</span> utf8_general_ci ROW_FORMAT <span class=\"operator\">=</span> <span class=\"keyword\">Dynamic</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"users\"><a class=\"markdownIt-Anchor\" href=\"#users\">#</a> users</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> Navicat Premium Data Transfer</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"> Source Server         : cuteness</span></span><br><span class=\"line\"><span class=\"comment\"> Source Server Type    : MySQL</span></span><br><span class=\"line\"><span class=\"comment\"> Source Server Version : 50724</span></span><br><span class=\"line\"><span class=\"comment\"> Source Host           : localhost:3306</span></span><br><span class=\"line\"><span class=\"comment\"> Source Schema         : software</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"> Target Server Type    : MySQL</span></span><br><span class=\"line\"><span class=\"comment\"> Target Server Version : 50724</span></span><br><span class=\"line\"><span class=\"comment\"> File Encoding         : 65001</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"> Date: 18/01/2023 14:06:47</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> NAMES utf8mb4;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> FOREIGN_KEY_CHECKS <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ----------------------------</span></span><br><span class=\"line\"><span class=\"comment\">-- Table structure for users_copy1</span></span><br><span class=\"line\"><span class=\"comment\">-- ----------------------------</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> `users`;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `users`  (</span><br><span class=\"line\">  `name` <span class=\"type\">varchar</span>(<span class=\"number\">10</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8 <span class=\"keyword\">COLLATE</span> utf8_general_ci <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `password` <span class=\"type\">varchar</span>(<span class=\"number\">40</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8 <span class=\"keyword\">COLLATE</span> utf8_general_ci <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `mobile` <span class=\"type\">bigint</span>(<span class=\"number\">15</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `code` <span class=\"type\">varchar</span>(<span class=\"number\">40</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8 <span class=\"keyword\">COLLATE</span> utf8_general_ci <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `id` <span class=\"type\">int</span>(<span class=\"number\">10</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `url` <span class=\"type\">varchar</span>(<span class=\"number\">255</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8 <span class=\"keyword\">COLLATE</span> utf8_general_ci <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`, `mobile`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `mobile`(`mobile`) <span class=\"keyword\">USING</span> BTREE</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> InnoDB <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"operator\">=</span> utf8 <span class=\"keyword\">COLLATE</span> <span class=\"operator\">=</span> utf8_general_ci ROW_FORMAT <span class=\"operator\">=</span> <span class=\"keyword\">Dynamic</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"problem\"><a class=\"markdownIt-Anchor\" href=\"#problem\">#</a> problem</h4>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230118150422537.png\" alt=\"image-20230118150422537\"></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/excel-space/",
            "url": "http://example.com/excel-space/",
            "title": "excel-space",
            "date_published": "2023-01-20T10:15:34.000Z",
            "content_html": "<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.ityueheng.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.ityueheng.pojo.Student;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.Font;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.HorizontalAlignment;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.ss.usermodel.VerticalAlignment;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.xssf.usermodel.XSSFCellStyle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.xssf.usermodel.XSSFRow;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.xssf.usermodel.XSSFSheet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.poi.xssf.usermodel.XSSFWorkbook;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.sql.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DB_Excel</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        setDb_Excel();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setDb_Excel</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">path</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;D:\\\\IDEA-Javaweb\\\\202110098141\\\\grade.xlsx&quot;</span>;</span><br><span class=\"line\">        List&lt;Student&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;Student&gt;();</span><br><span class=\"line\">        <span class=\"comment\">//把数据传到集合中去，数据库区</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Class.forName(<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;jdbc:mysql://localhost:3306/db1?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8&amp;allowPublicKeyRetrieval=true&quot;</span>;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;root&quot;</span>;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;123456&quot;</span>;</span><br><span class=\"line\">            <span class=\"type\">Connection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> DriverManager.getConnection(url, username, password);</span><br><span class=\"line\">            <span class=\"type\">Statement</span> <span class=\"variable\">statement</span> <span class=\"operator\">=</span> connection.createStatement();</span><br><span class=\"line\">            <span class=\"type\">ResultSet</span> <span class=\"variable\">resultSet</span> <span class=\"operator\">=</span> statement.executeQuery(<span class=\"string\">&quot;select * from student&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (resultSet.next()) &#123;</span><br><span class=\"line\">                <span class=\"type\">Student</span> <span class=\"variable\">student</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">                student.setStu_name(resultSet.getString(<span class=\"number\">1</span>));</span><br><span class=\"line\">                student.setStu_number(resultSet.getString(<span class=\"number\">2</span>));</span><br><span class=\"line\">                student.setStu_grade(resultSet.getString(<span class=\"number\">3</span>));</span><br><span class=\"line\">                student.setProcessing_num(resultSet.getString(<span class=\"number\">4</span>));</span><br><span class=\"line\">                list.add(student);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (</span><br><span class=\"line\">                SQLException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//传到excel区</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//输入流，先读取文件里面的数据</span></span><br><span class=\"line\">            <span class=\"type\">FileInputStream</span> <span class=\"variable\">fileInputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(path);</span><br><span class=\"line\">            <span class=\"comment\">//向一个工作簿中传入数据</span></span><br><span class=\"line\">            <span class=\"type\">XSSFWorkbook</span> <span class=\"variable\">workbook</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">XSSFWorkbook</span>(fileInputStream);</span><br><span class=\"line\">            <span class=\"comment\">//第一个工作表</span></span><br><span class=\"line\">            <span class=\"type\">XSSFSheet</span> <span class=\"variable\">xssfSheet</span> <span class=\"operator\">=</span> workbook.getSheetAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"type\">XSSFRow</span> <span class=\"variable\">xssfRow</span> <span class=\"operator\">=</span> xssfSheet.createRow(<span class=\"number\">5</span>);</span><br><span class=\"line\">            <span class=\"type\">FileOutputStream</span> <span class=\"variable\">fileOutputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(path);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//读取颜色</span></span><br><span class=\"line\">            <span class=\"type\">XSSFCellStyle</span> <span class=\"variable\">style</span> <span class=\"operator\">=</span> workbook.createCellStyle();   <span class=\"comment\">//红色样式</span></span><br><span class=\"line\">            <span class=\"type\">XSSFCellStyle</span> <span class=\"variable\">style2</span> <span class=\"operator\">=</span> workbook.createCellStyle();  <span class=\"comment\">//绿色样式</span></span><br><span class=\"line\">            <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">             * 水平垂直居中</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            style.setAlignment(HorizontalAlignment.CENTER);</span><br><span class=\"line\">            style.setVerticalAlignment(VerticalAlignment.CENTER);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//写进去序号、学生的姓名以及学号</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//字体颜色为红色</span></span><br><span class=\"line\">            <span class=\"type\">Font</span> <span class=\"variable\">font</span> <span class=\"operator\">=</span> workbook.createFont();</span><br><span class=\"line\">            font.setColor((<span class=\"type\">short</span>) <span class=\"number\">2</span>);</span><br><span class=\"line\">            style.setFont(font);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//字体颜色为绿色</span></span><br><span class=\"line\">            <span class=\"type\">Font</span> <span class=\"variable\">fontG</span> <span class=\"operator\">=</span> workbook.createFont();</span><br><span class=\"line\">            fontG.setColor((<span class=\"type\">short</span>) <span class=\"number\">11</span>);</span><br><span class=\"line\">            style2.setFont(fontG);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//循环遍历数据库中的数据</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Student student : list) &#123;</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">stu_name</span> <span class=\"operator\">=</span> student.getStu_name();</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">stu_number</span> <span class=\"operator\">=</span> student.getStu_number();</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">stu_grade</span> <span class=\"operator\">=</span> student.getStu_grade();</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">processing_num</span> <span class=\"operator\">=</span> student.getProcessing_num();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//测试</span></span><br><span class=\"line\">                System.out.println(stu_number);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;     <span class=\"comment\">//判断if语句是否执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//匹配excel中的学号，从而把对应的实验几的成绩录进去</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">6</span>; j &lt;= xssfSheet.getLastRowNum(); j++) &#123;</span><br><span class=\"line\">                    xssfRow = xssfSheet.getRow(j);</span><br><span class=\"line\">                    <span class=\"comment\">//根据数据库中的学生学号来写入相对应的实验成绩</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (stu_number.equals(xssfRow.getCell(<span class=\"number\">2</span>).getStringCellValue())) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">//测试</span></span><br><span class=\"line\">                        System.out.println(<span class=\"string\">&quot;这个是学号哇！！！！！！！！！！！！！！！！！！！！！！！！！！！&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">switch</span> (processing_num) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验一&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">3</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                            <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验二&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">4</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                            <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验三&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">5</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                            <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验四&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">6</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                            <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验五&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">7</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                            <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验六&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">8</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                            <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验七&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">9</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                            <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验八&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">10</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                            <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验九&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">11</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">//实验成绩不足60，标红</span></span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>; k &lt; <span class=\"number\">12</span>; k++) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (xssfRow.getCell(k) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                                <span class=\"type\">int</span> <span class=\"variable\">grade</span> <span class=\"operator\">=</span> Integer.parseInt(xssfRow.getCell(k).getStringCellValue());</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (grade &lt; <span class=\"number\">60</span>) &#123;</span><br><span class=\"line\">                                    xssfRow.getCell(k).setCellStyle(style);</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">//实验成绩大于80分，标绿优秀</span></span><br><span class=\"line\">                        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>; k &lt; <span class=\"number\">12</span>; k++) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (xssfRow.getCell(k) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                                <span class=\"type\">int</span> <span class=\"variable\">grade</span> <span class=\"operator\">=</span> Integer.parseInt(xssfRow.getCell(k).getStringCellValue());</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (grade &gt; <span class=\"number\">80</span>) &#123;</span><br><span class=\"line\">                                    xssfRow.getCell(k).setCellStyle(style2);</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                        flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">6</span>; j &lt;= xssfSheet.getLastRowNum(); j++) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (!stu_number.equals(xssfRow.getCell(<span class=\"number\">2</span>).getStringCellValue())) &#123;</span><br><span class=\"line\">                            <span class=\"comment\">//excel表中没有对应的学号，则把该学生的信息在尾部录进去</span></span><br><span class=\"line\">                            xssfRow = xssfSheet.getRow(xssfSheet.getLastRowNum() + p);</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (xssfRow == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                                <span class=\"type\">int</span> <span class=\"variable\">i1</span> <span class=\"operator\">=</span> xssfSheet.getLastRowNum() + p - <span class=\"number\">7</span>;</span><br><span class=\"line\">                                xssfRow = xssfSheet.createRow(xssfSheet.getLastRowNum() + p);</span><br><span class=\"line\">                                xssfRow.createCell(<span class=\"number\">0</span>).setCellValue(++i1);</span><br><span class=\"line\">                                xssfRow.createCell(<span class=\"number\">1</span>).setCellValue(stu_name);</span><br><span class=\"line\">                                xssfRow.createCell(<span class=\"number\">2</span>).setCellValue(stu_number);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                                <span class=\"keyword\">switch</span> (processing_num) &#123;</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验一&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">3</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验二&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">4</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验三&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">5</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验四&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">6</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验五&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">7</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验六&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">8</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验七&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">9</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验八&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">10</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                                    <span class=\"keyword\">case</span> <span class=\"string\">&quot;实验九&quot;</span> -&gt; xssfRow.createCell(<span class=\"number\">11</span>).setCellValue(stu_grade);</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                                <span class=\"comment\">//实验成绩小于60分，标红</span></span><br><span class=\"line\">                                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>; k &lt; <span class=\"number\">12</span>; k++) &#123;</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (xssfRow.getCell(k) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                                        <span class=\"type\">int</span> <span class=\"variable\">grade</span> <span class=\"operator\">=</span> Integer.parseInt(xssfRow.getCell(k).getStringCellValue());</span><br><span class=\"line\">                                        <span class=\"keyword\">if</span> (grade &lt; <span class=\"number\">60</span>) &#123;</span><br><span class=\"line\">                                            xssfRow.getCell(k).setCellStyle(style);</span><br><span class=\"line\">                                        &#125;</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                                <span class=\"comment\">//实验成绩大于80分，标绿优秀</span></span><br><span class=\"line\">                                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>; k &lt; <span class=\"number\">12</span>; k++) &#123;</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (xssfRow.getCell(k) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                                        <span class=\"type\">int</span> <span class=\"variable\">grade</span> <span class=\"operator\">=</span> Integer.parseInt(xssfRow.getCell(k).getStringCellValue());</span><br><span class=\"line\">                                        <span class=\"keyword\">if</span> (grade &gt; <span class=\"number\">80</span>) &#123;</span><br><span class=\"line\">                                            xssfRow.getCell(k).setCellStyle(style2);</span><br><span class=\"line\">                                        &#125;</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//成绩总评</span></span><br><span class=\"line\"><span class=\"comment\">//            获取每一行的总分数，然后相加起来</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">6</span>; j &lt; xssfSheet.getLastRowNum() + <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">                xssfRow = xssfSheet.getRow(j);</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>; k &lt; <span class=\"number\">12</span>; k++) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (xssfRow.getCell(k) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                        count += Integer.parseInt(xssfRow.getCell(k).getStringCellValue());</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                xssfRow.createCell(<span class=\"number\">12</span>).setCellValue(count);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//将老师的个人签名读取并放到excel中</span></span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;成功向Excel表中传入&quot; + xssfRow.getPhysicalNumberOfCells() + &quot;行数据！！！&quot;);</span></span><br><span class=\"line\">            fileOutputStream.flush();</span><br><span class=\"line\">            workbook.write(fileOutputStream);</span><br><span class=\"line\">            fileOutputStream.close();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (</span><br><span class=\"line\">                IOException s) &#123;</span><br><span class=\"line\">            System.out.println(s);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/miniProgram/",
            "url": "http://example.com/miniProgram/",
            "title": "miniProgram",
            "date_published": "2023-01-20T10:15:21.000Z",
            "content_html": "<h2 align=\"center\">微信小程序每周排行Controlle参考</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.software.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.software.dao.GroupDao;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.software.dao.PersonDao;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.software.dao.wolfDao;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.software.domain.tb_avg;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.software.domain.wolfTeam;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.software.service.allGroup_Excel_Service;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;groups&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GroupController</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    GroupDao groupDao;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    PersonDao personDao;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    wolfDao wolfDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//插入从所有组别的excel表中的获取到的值,放到allGroup野狼队</span></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;insert&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">saveGroup</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取从excel表中拿到的时间集合和名称集合</span></span><br><span class=\"line\">        allGroup_Excel_Service aes=<span class=\"keyword\">new</span> <span class=\"title class_\">allGroup_Excel_Service</span>();</span><br><span class=\"line\">        aes.ByExcelOfNameAndTime();</span><br><span class=\"line\">        ArrayList&lt;String&gt; listName=aes.listName;</span><br><span class=\"line\">        ArrayList&lt;String&gt; listTime=aes.listTime;</span><br><span class=\"line\">        ArrayList&lt;String&gt; listGroup=aes.listGroup;</span><br><span class=\"line\">        ArrayList&lt;Float&gt; floatArrayList=<span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String s : listTime) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;&quot;</span>)) &#123;</span><br><span class=\"line\">                floatArrayList.add(<span class=\"number\">0.00F</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                floatArrayList.add(Float.parseFloat(s));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//将获取到的值存到数据库中</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; listName.size(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (floatArrayList.get(i)&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"type\">wolfTeam</span> <span class=\"variable\">wolfTeam</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">wolfTeam</span>();</span><br><span class=\"line\">                wolfTeam.setName(listName.get(i));</span><br><span class=\"line\">                wolfTeam.setId(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">                wolfTeam.setMinstime(floatArrayList.get(i));</span><br><span class=\"line\">                wolfTeam.setGroupname(listGroup.get(i));</span><br><span class=\"line\">                wolfDao.insert(wolfTeam);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//查询数据库表里面的所有组别的数据</span></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;getAll&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;wolfTeam&gt; <span class=\"title function_\">getAll</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        QueryWrapper&lt;wolfTeam&gt; queryWrapper=<span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.orderByDesc(String.valueOf(<span class=\"number\">4</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> wolfDao.selectList(queryWrapper);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//查询野狼组别平均时长</span></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;getAllGroupAvg&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;tb_avg&gt; <span class=\"title function_\">getAllGroupAvg</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        QueryWrapper&lt;tb_avg&gt; queryWrapper=<span class=\"keyword\">new</span> <span class=\"title class_\">QueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.orderByDesc(String.valueOf(<span class=\"number\">3</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> groupDao.selectList(queryWrapper);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//视觉组(^_-)</span></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;vision&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">vision</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        LambdaQueryWrapper&lt;wolfTeam&gt; queryWrapper=<span class=\"keyword\">new</span> <span class=\"title class_\">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(wolfTeam::getGroupname,<span class=\"string\">&quot;视觉组(^_-)&quot;</span>);</span><br><span class=\"line\">        List&lt;wolfTeam&gt; wolfTeams = wolfDao.selectList(queryWrapper);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//将此组所有时长取平均值存放在avg表</span></span><br><span class=\"line\">        tb_avg tb_avg=<span class=\"keyword\">new</span> <span class=\"title class_\">tb_avg</span>();</span><br><span class=\"line\">        tb_avg.setGroupname1(wolfTeams.get(<span class=\"number\">3</span>).getGroupname());</span><br><span class=\"line\">        <span class=\"comment\">//循环取平均数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">avg</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (wolfTeam team : wolfTeams) &#123;</span><br><span class=\"line\">            avg += team.getMinstime();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tb_avg.setAvgtime1(avg/wolfTeams.size());</span><br><span class=\"line\">        groupDao.insert(tb_avg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//电控组(^_-)</span></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;electric&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">electric</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        LambdaQueryWrapper&lt;wolfTeam&gt; queryWrapper=<span class=\"keyword\">new</span> <span class=\"title class_\">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(wolfTeam::getGroupname,<span class=\"string\">&quot;电控组(^_-)&quot;</span>);</span><br><span class=\"line\">        List&lt;wolfTeam&gt; wolfTeams = wolfDao.selectList(queryWrapper);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//将此组所有时长取平均值存放在avg表</span></span><br><span class=\"line\">        tb_avg tb_avg=<span class=\"keyword\">new</span> <span class=\"title class_\">tb_avg</span>();</span><br><span class=\"line\">        tb_avg.setGroupname1(wolfTeams.get(<span class=\"number\">3</span>).getGroupname());</span><br><span class=\"line\">        <span class=\"comment\">//循环取平均数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">avg</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (wolfTeam team : wolfTeams) &#123;</span><br><span class=\"line\">            avg += team.getMinstime();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tb_avg.setAvgtime1(avg/wolfTeams.size());</span><br><span class=\"line\">        groupDao.insert(tb_avg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//机械组(^_-)</span></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;machine&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">machine</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        LambdaQueryWrapper&lt;wolfTeam&gt; queryWrapper=<span class=\"keyword\">new</span> <span class=\"title class_\">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(wolfTeam::getGroupname,<span class=\"string\">&quot;机械组(^_-)&quot;</span>);</span><br><span class=\"line\">        List&lt;wolfTeam&gt; wolfTeams = wolfDao.selectList(queryWrapper);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//将此组所有时长取平均值存放在avg表</span></span><br><span class=\"line\">        tb_avg tb_avg=<span class=\"keyword\">new</span> <span class=\"title class_\">tb_avg</span>();</span><br><span class=\"line\">        tb_avg.setGroupname1(wolfTeams.get(<span class=\"number\">3</span>).getGroupname());</span><br><span class=\"line\">        <span class=\"comment\">//循环取平均数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">avg</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (wolfTeam team : wolfTeams) &#123;</span><br><span class=\"line\">            avg += team.getMinstime();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tb_avg.setAvgtime1(avg/wolfTeams.size());</span><br><span class=\"line\">        groupDao.insert(tb_avg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//软件组(^_-)</span></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;software&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">software</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        LambdaQueryWrapper&lt;wolfTeam&gt; queryWrapper=<span class=\"keyword\">new</span> <span class=\"title class_\">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(wolfTeam::getGroupname,<span class=\"string\">&quot;软件组(^_-)&quot;</span>);</span><br><span class=\"line\">        List&lt;wolfTeam&gt; wolfTeams = wolfDao.selectList(queryWrapper);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//将此组所有时长取平均值存放在avg表</span></span><br><span class=\"line\">        tb_avg tb_avg=<span class=\"keyword\">new</span> <span class=\"title class_\">tb_avg</span>();</span><br><span class=\"line\">        tb_avg.setGroupname1(wolfTeams.get(<span class=\"number\">3</span>).getGroupname());</span><br><span class=\"line\">        <span class=\"comment\">//循环取平均数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">avg</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (wolfTeam team : wolfTeams) &#123;</span><br><span class=\"line\">            avg += team.getMinstime();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tb_avg.setAvgtime1(avg/wolfTeams.size());</span><br><span class=\"line\">        groupDao.insert(tb_avg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//硬件组(^_-)</span></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;hardware&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">hardware</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        LambdaQueryWrapper&lt;wolfTeam&gt; queryWrapper=<span class=\"keyword\">new</span> <span class=\"title class_\">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class=\"line\">        queryWrapper.eq(wolfTeam::getGroupname,<span class=\"string\">&quot;硬件组(^_-)&quot;</span>);</span><br><span class=\"line\">        List&lt;wolfTeam&gt; wolfTeams = wolfDao.selectList(queryWrapper);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//将此组所有时长取平均值存放在avg表</span></span><br><span class=\"line\">        tb_avg tb_avg=<span class=\"keyword\">new</span> <span class=\"title class_\">tb_avg</span>();</span><br><span class=\"line\">        tb_avg.setGroupname1(wolfTeams.get(<span class=\"number\">3</span>).getGroupname());</span><br><span class=\"line\">        <span class=\"comment\">//循环取平均数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">avg</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (wolfTeam team : wolfTeams) &#123;</span><br><span class=\"line\">            avg += team.getMinstime();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tb_avg.setAvgtime1(avg/wolfTeams.size());</span><br><span class=\"line\">        groupDao.insert(tb_avg);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/loveIkun-1/",
            "url": "http://example.com/loveIkun-1/",
            "title": "loveIkun-1",
            "date_published": "2023-01-20T10:15:02.000Z",
            "content_html": "<h1 align=\"center\">简介</h1>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230120231702224.png\" alt=\"image-20230120231702224\"></p>\n<h2 align=\"center\">坤哥照骗</h2>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20230120231724763.png\" alt=\"image-20230120231724763\"></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/CET4/",
            "url": "http://example.com/CET4/",
            "title": "CET4",
            "date_published": "2023-01-20T10:14:36.000Z",
            "content_html": "<h1 id=\"115start-everydayenglish\"><a class=\"markdownIt-Anchor\" href=\"#115start-everydayenglish\">#</a> 11.5start everyday.English</h1>\n<h2 id=\"asentence-section-1\"><a class=\"markdownIt-Anchor\" href=\"#asentence-section-1\">#</a> A/sentence section: 1</h2>\n<table>\n<thead>\n<tr>\n<th>ENGLISH</th>\n<th>CHINESE</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Trust is fundamental to life</td>\n<td>信任是生活的基础</td>\n</tr>\n<tr>\n<td>If you can not trust anything</td>\n<td>如果你不能相信任何东西</td>\n</tr>\n<tr>\n<td>Life is intolerable</td>\n<td>生活是难耐的</td>\n</tr>\n<tr>\n<td>You can not have relationships without trust</td>\n<td>没有信任就没有关系</td>\n</tr>\n<tr>\n<td>let alone good ones</td>\n<td>更不用说好的了</td>\n</tr>\n<tr>\n<td>credible</td>\n<td>可靠的</td>\n</tr>\n<tr>\n<td>constantly</td>\n<td>总是，经常</td>\n</tr>\n<tr>\n<td>essential</td>\n<td>必不可少的</td>\n</tr>\n<tr>\n<td>exploring</td>\n<td>探索，探测</td>\n</tr>\n<tr>\n<td>gather</td>\n<td>聚集</td>\n</tr>\n<tr>\n<td>An organization without trust will be of fear and pressure</td>\n<td>一个组织没有信任将会充满恐惧和压力</td>\n</tr>\n<tr>\n<td>load</td>\n<td>负载，加载</td>\n</tr>\n<tr>\n<td>miserable</td>\n<td>痛苦的</td>\n</tr>\n<tr>\n<td>pressure</td>\n<td>压力</td>\n</tr>\n<tr>\n<td>properly</td>\n<td>正确的</td>\n</tr>\n<tr>\n<td>records</td>\n<td>记录</td>\n</tr>\n<tr>\n<td>removed</td>\n<td>移去</td>\n</tr>\n<tr>\n<td>stacks</td>\n<td>堆叠</td>\n</tr>\n<tr>\n<td>suspiciou</td>\n<td>怀疑</td>\n</tr>\n<tr>\n<td>tracked</td>\n<td>跟踪</td>\n</tr>\n<tr>\n<td>watching</td>\n<td>观望</td>\n</tr>\n<tr>\n<td>If you work for a boss who doesn not trust their employees to do things right</td>\n<td>如果你的老板不能够信任员工做好工作</td>\n</tr>\n<tr>\n<td>You  will have a miserable</td>\n<td>你将会过得很痛苦</td>\n</tr>\n<tr>\n<td>They will be checking up all the time</td>\n<td>他们会一直检查你的</td>\n</tr>\n<tr>\n<td>Correcting “mistake” and records reminding you to do this or that</td>\n<td>纠正 “错误” 和记录，提醒你去做这个或者是那个</td>\n</tr>\n<tr>\n<td>Colleagues who do not   trust one another will need to spend more time suspiciou their backs than doing any useful work.</td>\n<td>互相不信任的同事将会花费更多的时间怀疑自己的背后，而不是做任何有用的工作</td>\n</tr>\n<tr>\n<td>organization are always trying to cut costs</td>\n<td>一个组织总是试图削减成本</td>\n</tr>\n<tr>\n<td>Think of all the additional tasks caused by lack of trust</td>\n<td>想想所有因为缺乏信任而造成的额外任务</td>\n</tr>\n<tr>\n<td>Audit departments only exist because of it</td>\n<td>审计部门的存在就是因为它</td>\n</tr>\n<tr>\n<td>Companies keep large volumes of becaused they don not trust suppliers，their contractors or their customers</td>\n<td>公司保留大量的库存，因为他们不相信供应商，承包商或者是客户</td>\n</tr>\n<tr>\n<td>Probably more than half of all administrative work is only there because of an ever-existing sense that “you can not trust anyone these day”</td>\n<td>大概一半以上的行政工作都是因为一种一直存在的感觉:“现在你不能够相信任何人”</td>\n</tr>\n<tr>\n<td>If even a small part of such valueless work could be, the  saving would run into millions of dollars</td>\n<td>即使是这种毫无价值的一小部分被节约了，也将会到达数百万美元</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"asentence-section-2\"><a class=\"markdownIt-Anchor\" href=\"#asentence-section-2\">#</a> A/sentence section: 2</h2>\n<table>\n<thead>\n<tr>\n<th>All this is extra we onto ourselves because we don not trust people the cheking</th>\n<th>所有的一切，都是我们强加给我们自己额外的工作，因为我们不相信检查的人</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Doing things ourselves because don not believe others will do them properly or at all</td>\n<td>自己去做，因为不相信其他人会把事情做好</td>\n</tr>\n<tr>\n<td>If we took all that away,how much extra time would we suddenly find in our life?how much of our work would disappear?</td>\n<td>如果我们把这些观念都拿走，我们会突然发现我们的生活会有多少额外的时间，我们的工作有多少会消失</td>\n</tr>\n<tr>\n<td>The place where the poor once thrived</td>\n<td>这里曾经是穷人兴旺发达的地方</td>\n</tr>\n<tr>\n<td>This is the land of opportunity</td>\n<td>这里是一片充满机遇的土地</td>\n</tr>\n<tr>\n<td>which is valued at $300 million</td>\n<td>哪一个价值 3 亿美元</td>\n</tr>\n<tr>\n<td>Indded,data suggests that is one of the best places to grow up poor in America</td>\n<td>事实上，数据显示这里是美国最适合成长的贫困地区之一</td>\n</tr>\n<tr>\n<td>A growing number of U.S. bike riders are attracted to electric bikes for convenience,health benefits and their fun factor.</td>\n<td>越来越多的骑自行车的美国人被电动自行车的便捷，健康和乐趣所吸引</td>\n</tr>\n<tr>\n<td>Although ebikes first appeard in the 90s, cheaper options and longer-lasting batteries are breathing new life into the concept</td>\n<td>尽管电动自行车首次出现在 90 年代，但更便宜的选择和更持久的电池正在为这一个概念注入新的活力</td>\n</tr>\n<tr>\n<td>Three children in every classroom have a diagnosable health mental condition</td>\n<td>每个教室有三个孩子被检测出来有心理健康问题</td>\n</tr>\n<tr>\n<td>Half of these are behavioural disorders,while one third are emotional disorders  such as stress, anxiely and depression,which often become outwardly apparent through self-harm</td>\n<td>其中一半是行为障碍，而三分之一是情绪障碍，例如压力，焦虑和抑郁，这些通常通过自我伤害表现出来</td>\n</tr>\n<tr>\n<td>These was an astonish 52 per cent jump in hospital amdission for children and young people who had harmed themselves between 2009 and 2015</td>\n<td>2009 年至 2015 期间，因伤害自己而入院的儿童和青年人数惊人的增长了 52%。</td>\n</tr>\n<tr>\n<td>Schools and teachers have consistenly reported the scale of the problem since 2009.</td>\n<td>自从 2009 年以来，学校和教室一只在报告这件问题的规模</td>\n</tr>\n<tr>\n<td>who fled Vietnam on a boat in 1986,showed up in san Jose with nothing,made it to MIT,and  the founded the food -delivery start-up Munchery,which is valued at $300 million</td>\n<td>1986 年，他乘船逃离越南。一文不名地出现在生何寨，成功进入了麻省理工学院，然后创立了外卖初创公司 Munchery，价值 3 亿美元</td>\n</tr>\n<tr>\n<td>That number–12.9 percent–may not seem remarkable,but it was:kids inSan Jose whose famillies fell in the bottom quintile of income nationally（全国性的） had the best shot in the country at reaching（到达） the top quintile（五分位数）</td>\n<td>这个 12% 数字可能看起来并不引人注目，但它在生何寨确实引人注目，家庭收入处于全国最低五分之一的孩子，在全国进入收入最高五分之一的可能性是最大的</td>\n</tr>\n<tr>\n<td>By contrast,just 4.4 percent of poor kids in Charlotte moved up to the top.</td>\n<td>相比之下，夏洛特市只有 4.4% 的贫困孩子能够进入排名靠前的家庭</td>\n</tr>\n<tr>\n<td>In Detroit the figure (数字) was 5.5 percent</td>\n<td>在底特律，这个数字是 5.5%</td>\n</tr>\n<tr>\n<td>San Jose had social mobility comparable to Debmark’s and Canada’s and higher than other progressive cities such as Boston and Minneapolis</td>\n<td>生何寨的社会流动性与丹麦和加拿大相比，高于其他其他进步的城市，如波士顿和明尼阿波利斯</td>\n</tr>\n<tr>\n<td>The reasons kids in San Jose performed so well  might seem obvious.Some of the world’s most innovative companies are located here,providing opportunities such as the one seized by a 12-year-old Mountain View resident named Steve Jobs when he called William Hewlett to ask for spare parts and subsequently received a synner job.this is a city’s population today is foreign-born–and immigrants and their children gave historically experienced significant upward mobiliyty in America.</td>\n<td>生何寨的孩子们表现得如此出色的原因似乎是显而易见的。一些世界上最具创新力的公司都坐落在这里，提供了很多的就业机会</td>\n</tr>\n<tr>\n<td>But researchers aren’t sure exctly why poor kids in San Jose did so well.</td>\n<td>但是研究人员并不确切为什么圣何寨的贫困孩子表现得如此出色</td>\n</tr>\n<tr>\n<td>The city has a low prevalence of children growing up in single-parent families,and a low level of concentrated poverty,both factors that usually mean a city allows for good intergenerational mobility.</td>\n<td>该市在单亲家庭中长大的儿童比例比较低，集中贫困程度较低，这两个因素通常意味着城市允许良好的代际流动性</td>\n</tr>\n<tr>\n<td>But San Jose also performs poorly on some of the measures correlated with good mobility</td>\n<td>但圣何寨在一些与良好流动性相关的措施上也表现不佳</td>\n</tr>\n<tr>\n<td>It is one of the most unequal places out of the 741that the researchers measured,and it has high degrees of racial and economic segregation</td>\n<td>它是研究人员在 741 中发现的最不平等的地方之一，并且具有高度的种族隔离和经济隔离</td>\n</tr>\n<tr>\n<td>Its school underperform based on giw much money there is in the area,said BenScuderi,apredoctoral fellow at the Equality of Opportunity Project at Harvard,which uses big data to study how to improve economic opportunities for low-income children.</td>\n<td>哈佛大学机会平等项目的博士前研究员 BenScuderi 说，它的学校表现不佳，该项目使用大数据来研究如何改善低收入儿童的经济机会。</td>\n</tr>\n<tr>\n<td>&quot;There’s a lot going on here which we don’t totally understand,&quot;he said.“It’s interesting,because it kind of defies our expectations.”</td>\n<td>&quot;这里发生了很多我们并不完全理解的事情&quot; 他说，者很有趣，因为他有点违背我们的期望</td>\n</tr>\n<tr>\n<td>The Chetty  data shows that neighborhoods and places mattered for children born in the San Jose area of the 1980s</td>\n<td>切蒂数据显示，社区和地方对上世纪 80 年代在圣何寨出生的孩子们很重要</td>\n</tr>\n<tr>\n<td>Wherther the city still allows for upward mobility of poor kids today,though,is up for debate.</td>\n<td>然而，这座城市今天是否还允许儿童向上流动，这是一个值得讨论的问题</td>\n</tr>\n<tr>\n<td>Some of the indicators such as income inequality,mearsured by the Equality of opportunity Project for the year 2000 have only worsened  in the past 16 years</td>\n<td>一些指标，如 2000 年机会平等项目衡量的收入不平等，在过去的 16 年里面一直恶化</td>\n</tr>\n<tr>\n<td>Some San Jose residents say that as inequality has grown in recent years,upward mobility has become much more difficult to achive.</td>\n<td>一些圣何寨的居民说，随着近年来的不平等，向上流动变得更加困难</td>\n</tr>\n<tr>\n<td>As Silicon Valley has become home to more successful companies,the flood of people to the area has caused housing prices to skyrocket.</td>\n<td>随着硅谷成为更多公司的家园，大量人口涌入该地区，导致房价飙升。</td>\n</tr>\n<tr>\n<td>By most measures,San Jose is no longer a place where low-income,or even middle-income families,can afford to live.</td>\n<td>从大多数方面来看，圣何寨已经不再是一个低收入或者是中等收入家庭能够负担得起的地方</td>\n</tr>\n<tr>\n<td>Rents in San Jose grew 42.6 percent between 2006 and 2014,which was the largest increase in the contry during that time period ,The city has a growing homelessness problem,which it tried to address by shutting dow n “The Jungle”,one of the largest homeless encampments in the nation,in 2014.</td>\n<td>2006 年至 2014 年，圣何塞的租金上涨了 42.6%，是同期全国涨幅最大的。该市无家可归的问题日益严重，2014 年市政府试图通过关闭全国最大的无家可归者营地之一 “丛林”(The Jungle) 来解决这个问题。</td>\n</tr>\n<tr>\n<td>Inequality is extreme.The Human Development Index  – a measure of life expectancy,education and percapita income --gives East San Jose a score of 4.85 out of 10,which nearby Cupertinom,where Apple’s headquarter’s sits,receives a 9.26</td>\n<td>不平等是极端的。人类发展指数：衡量预期寿命，教育和人均收入 - 给东圣何寨的得分为 4.85 (满分为 10 分)，苹果所在的比蒂诺附近的得分为 9.26</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"asentence-section-3\"><a class=\"markdownIt-Anchor\" href=\"#asentence-section-3\">#</a> A/sentence section: 3</h2>\n<table>\n<thead>\n<tr>\n<th>英语单词</th>\n<th>翻译</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>inequality</strong></td>\n<td>不平等</td>\n</tr>\n<tr>\n<td><strong>opportunity</strong></td>\n<td>时机，机会</td>\n</tr>\n<tr>\n<td>measured</td>\n<td>测量</td>\n</tr>\n<tr>\n<td>worsen</td>\n<td>恶化</td>\n</tr>\n<tr>\n<td>indicators</td>\n<td>指标</td>\n</tr>\n<tr>\n<td>skyrocket</td>\n<td>飙升</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "小朋友，过四级了吗？"
            ]
        },
        {
            "id": "http://example.com/JSP/",
            "url": "http://example.com/JSP/",
            "title": "JSP",
            "date_published": "2022-12-15T03:52:14.000Z",
            "content_html": "<h2 id=\"jsp\"><a class=\"markdownIt-Anchor\" href=\"#jsp\">#</a> JSP</h2>\n<p><strong>今日目标：</strong></p>\n<blockquote>\n<ul>\n<li>理解 JSP 及 JSP 原理</li>\n<li>能在 JSP 中使用  <code>EL表达式</code>  和  <code>JSTL标签</code></li>\n<li>理解  <code>MVC模式</code>  和  <code>三层架构</code></li>\n<li>能完成品牌数据的增删改查功能</li>\n</ul>\n</blockquote>\n<h2 id=\"1jsp-概述\"><a class=\"markdownIt-Anchor\" href=\"#1jsp-概述\">#</a> 1，JSP 概述</h2>\n<p>==JSP（全称：Java Server Pages）：Java 服务端页面。== 是一种动态的网页技术，其中既可以定义 HTML、JS、CSS 等静态内容，还可以定义 Java 代码的动态内容，也就是  <code>JSP = HTML + Java</code> 。如下就是 jsp 代码</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;head&gt;</span><br><span class=\"line\">        &lt;title&gt;Title&lt;/title&gt;</span><br><span class=\"line\">    &lt;/head&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\">        &lt;h1&gt;JSP,Hello World&lt;/h1&gt;</span><br><span class=\"line\">        &lt;%</span><br><span class=\"line\">        \tSystem.out.println(<span class=\"string\">&quot;hello,jsp~&quot;</span>);</span><br><span class=\"line\">        %&gt;</span><br><span class=\"line\">    &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>上面代码  <code>h1</code>  标签内容是展示在页面上，而 Java 的输出语句是输出在 idea 的控制台。</p>\n<p>那么，JSP 能做什么呢？现在我们只用  <code>servlet</code>  实现功能，看存在什么问题。如下图所示，当我们登陆成功后，需要在页面上展示用户名</p>\n<img data-src=\"assets/image-20210818101320935.png\" alt=\"image-20210818101320935\" style=\"zoom:70%;\" /> \n<p>上图的用户名是动态展示，也就是谁登陆就展示谁的用户名。只用  <code>servlet</code>  如何实现呢？在今天的资料里已经提供好了一个  <code>LoginServlet</code>  ，该  <code>servlet</code>  就是实现这个功能的，现将资料中的  <code>LoginServlet.java</code>  拷贝到  <code>request-demo</code>  项目中来演示。接下来启动服务器并访问登陆页面</p>\n<img data-src=\"assets/image-20210818102205544.png\" alt=\"image-20210818102205544\" style=\"zoom:80%;\" />\n<p>输入了  <code>zhangsan</code>  用户的登陆信息后点击  <code>登陆</code>  按钮，就能看到如下图效果</p>\n<p><img data-src=\"assets/image-20210818102313898.png\" alt=\"image-20210818102313898\"></p>\n<p>当然如果是  <code>lisi</code>  登陆的，在该页面展示的就是  <code>lisi,欢迎您</code> ，动态的展示效果就实现了。那么  <code>LoginServlet</code>  到底是如何实现的，我们看看它里面的内容</p>\n<img data-src=\"assets/image-20210818102506754.png\" alt=\"image-20210818102506754\" style=\"zoom:70%;\" />\n<p>上面的代码有大量使用到  <code>writer</code>  对象向页面写标签内容，这样我们的代码就显得很麻烦；将来如果展示的效果出现了问题，排错也显得有点力不从心。而 JSP 是如何解决这个问题的呢？在资料中也提供了一个  <code>login.jsp</code>  页面，该页面也能实现该功能，现将该页面拷贝到项目的  <code>webapp</code>  下，需要修改  <code>login.html</code>  中表单数据提交的路径为下图</p>\n<img data-src=\"assets/image-20210818103127245.png\" alt=\"image-20210818103127245\" style=\"zoom:80%;\" />\n<p>重新启动服务器并进行测试，发现也可以实现同样的功能。那么  <code>login.jsp</code>  又是如何实现的呢？那我们来看看  <code>login.jsp</code>  的代码</p>\n<img data-src=\"assets/image-20210818103352432.png\" alt=\"image-20210818103352432\" style=\"zoom:70%;\" />\n<p>上面代码可以看到里面基本都是  <code>HTML</code>  标签，而动态数据使用 Java 代码进行展示；这样操作看起来要比用  <code>servlet</code>  实现要舒服很多。</p>\n<p>JSP 作用：简化开发，避免了在 Servlet 中直接输出 HTML 标签。</p>\n<h2 id=\"2jsp-快速入门\"><a class=\"markdownIt-Anchor\" href=\"#2jsp-快速入门\">#</a> 2，JSP 快速入门</h2>\n<p>接下来我们做一个简单的快速入门代码。</p>\n<h3 id=\"21-搭建环境\"><a class=\"markdownIt-Anchor\" href=\"#21-搭建环境\">#</a> 2.1  搭建环境</h3>\n<p>创建一个 maven 的 web 项目，项目结构如下：</p>\n<img data-src=\"assets/image-20210818104316457.png\" alt=\"image-20210818104316457\" style=\"zoom:80%;\" />\n<p><code>pom.xml</code>  文件内容如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.example<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jsp-demo<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>war<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.tomcat.maven<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"22-导入-jsp-依赖\"><a class=\"markdownIt-Anchor\" href=\"#22-导入-jsp-依赖\">#</a> 2.2  导入 JSP 依赖</h3>\n<p>在  <code>dependencies</code>  标签中导入 JSP 的依赖，如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>该依赖的  <code>scope</code>  必须设置为  <code>provided</code> ，因为 tomcat 中有这个 jar 包了，所以在打包时我们是不希望将该依赖打进到我们工程的 war 包中。</p>\n<h3 id=\"23-创建-jsp-页面\"><a class=\"markdownIt-Anchor\" href=\"#23-创建-jsp-页面\">#</a> 2.3  创建 jsp 页面</h3>\n<p>在项目的  <code>webapp</code>  下创建 jsp 页面</p>\n<img data-src=\"assets/image-20210818105519970.png\" alt=\"image-20210818105519970\" style=\"zoom:70%;\" />\n<p>通过上面方式创建一个名为  <code>hello.jsp</code>  的页面。</p>\n<h3 id=\"24-编写代码\"><a class=\"markdownIt-Anchor\" href=\"#24-编写代码\">#</a> 2.4  编写代码</h3>\n<p>在  <code>hello.jsp</code>  页面中书写  <code>HTML</code>  标签和  <code>Java</code>  代码，如下</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;h1&gt;hello jsp&lt;/h1&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;%</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;hello,jsp~&quot;</span>);</span><br><span class=\"line\">    %&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"25-测试\"><a class=\"markdownIt-Anchor\" href=\"#25-测试\">#</a> 2.5  测试</h3>\n<p>启动服务器并在浏览器地址栏输入  <code>http://localhost:8080/jsp-demo/hello.jsp</code> ，我们可以在页面上看到如下内容</p>\n<img data-src=\"assets/image-20210818110122438.png\" alt=\"image-20210818110122438\" style=\"zoom:70%;\" />\n<p>同时也可以看到在  <code>idea</code>  的控制台看到输出的  <code>hello,jsp~</code>  内容。</p>\n<h2 id=\"3jsp-原理\"><a class=\"markdownIt-Anchor\" href=\"#3jsp-原理\">#</a> 3，JSP 原理</h2>\n<p>我们之前说 JSP 就是一个页面，那么在 JSP 中写  <code>html</code>  标签，我们能理解，但是为什么还可以写  <code>Java</code>  代码呢？</p>\n<p>因为 ==JSP 本质上就是一个 Servlet。== 接下来我们聊聊访问 jsp 时的流程</p>\n<img data-src=\"assets/image-20210818111039350.png\" alt=\"image-20210818111039350\" style=\"zoom:70%;\" />\n<ol>\n<li>浏览器第一次访问  <code>hello.jsp</code>  页面</li>\n<li><code>tomcat</code>  会将  <code>hello.jsp</code>  转换为名为  <code>hello_jsp.java</code>  的一个  <code>Servlet</code></li>\n<li><code>tomcat</code>  再将转换的  <code>servlet</code>  编译成字节码文件  <code>hello_jsp.class</code></li>\n<li><code>tomcat</code>  会执行该字节码文件，向外提供服务</li>\n</ol>\n<p>我们可以到项目所在磁盘目录下找  <code>target\\tomcat\\work\\Tomcat\\localhost\\jsp-demo\\org\\apache\\jsp</code>  目录，而这个目录下就能看到转换后的  <code>servlet</code></p>\n<img data-src=\"assets/image-20210818112613589.png\" alt=\"image-20210818112613589\" style=\"zoom:80%;\" />\n<p>打开  <code>hello_jsp.java</code>  文件，来查看里面的代码</p>\n<img data-src=\"assets/image-20210818112724462.png\" alt=\"image-20210818112724462\" style=\"zoom:80%;\" />\n<p>由上面的类的继承关系可以看到继承了名为  <code>HttpJspBase</code>  这个类，那我们在看该类的继承关系。到资料中的找如下目录：  <code>资料\\tomcat源码\\apache-tomcat-8.5.68-src\\java\\org\\apache\\jasper\\runtime</code>  ，该目录下就有  <code>HttpJspBase</code>  类，查看该类的继承关系</p>\n<img data-src=\"assets/image-20210818113118802.png\" alt=\"image-20210818113118802\" style=\"zoom:80%;\" />\n<p>可以看到该类继承了  <code>HttpServlet</code>  ；那么  <code>hello_jsp</code>  这个类就间接的继承了  <code>HttpServlet</code>  ，也就说明  <code>hello_jsp</code>  是一个  <code>servlet</code> 。</p>\n<p>继续阅读  <code>hello_jsp</code>  类的代码，可以看到有一个名为  <code>_jspService()</code>  的方法，该方法就是每次访问  <code>jsp</code>  时自动执行的方法，和  <code>servlet</code>  中的  <code>service</code>  方法一样 。</p>\n<p>而在  <code>_jspService()</code>  方法中可以看到往浏览器写标签的代码：</p>\n<img data-src=\"assets/image-20210818114008998.png\" alt=\"image-20210818114008998\" style=\"zoom:80%;\" />\n<p>以前我们自己写  <code>servlet</code>  时，这部分代码是由我们自己来写，现在有了  <code>jsp</code>  后，由 tomcat 完成这部分功能。</p>\n<h2 id=\"4jsp-脚本\"><a class=\"markdownIt-Anchor\" href=\"#4jsp-脚本\">#</a> 4，JSP 脚本</h2>\n<p>JSP 脚本用于在 JSP 页面内定义 Java 代码。在之前的入门案例中我们就在 JSP 页面定义的 Java 代码就是 JSP 脚本。</p>\n<h3 id=\"41-jsp-脚本分类\"><a class=\"markdownIt-Anchor\" href=\"#41-jsp-脚本分类\">#</a> 4.1  JSP 脚本分类</h3>\n<p>JSP 脚本有如下三个分类：</p>\n<ul>\n<li>&lt;%…%&gt;：内容会直接放到_jspService () 方法之中</li>\n<li>&lt;%=…%&gt;：内容会放到 out.print () 中，作为 out.print () 的参数</li>\n<li>&lt;%!…%&gt;：内容会放到_jspService () 方法之外，被类直接包含</li>\n</ul>\n<p><strong>代码演示：</strong></p>\n<p>在  <code>hello.jsp</code>  中书写</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;hello,jsp~&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n<p>通过浏览器访问  <code>hello.jsp</code>  后，查看转换的  <code>hello_jsp.java</code>  文件，i 变量定义在了  <code>_jspService()</code>  方法中</p>\n<img data-src=\"assets/image-20210818123606231.png\" alt=\"image-20210818123606231\" style=\"zoom:80%;\" />\n<p>在  <code>hello.jsp</code>  中书写</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%=<span class=\"string\">&quot;hello&quot;</span>%&gt;</span><br><span class=\"line\">&lt;%=i%&gt;</span><br></pre></td></tr></table></figure>\n<p>通过浏览器访问  <code>hello.jsp</code>  后，查看转换的  <code>hello_jsp.java</code>  文件，该脚本的内容被放在了  <code>out.print()</code>  中，作为参数</p>\n<img data-src=\"assets/image-20210818123820571.png\" alt=\"image-20210818123820571\" style=\"zoom:80%;\" />\n<p>在  <code>hello.jsp</code>  中书写</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%!</span><br><span class=\"line\">    <span class=\"keyword\">void</span>  <span class=\"title function_\">show</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">\t<span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;zhangsan&quot;</span>;</span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n<p>通过浏览器访问  <code>hello.jsp</code>  后，查看转换的  <code>hello_jsp.java</code>  文件，该脚本的内容被放在了成员位置</p>\n<img data-src=\"assets/image-20210818123946272.png\" alt=\"image-20210818123946272\" style=\"zoom:80%;\" />\n<h3 id=\"42-案例\"><a class=\"markdownIt-Anchor\" href=\"#42-案例\">#</a> 4.2  案例</h3>\n<h4 id=\"421-需求\"><a class=\"markdownIt-Anchor\" href=\"#421-需求\">#</a> 4.2.1  需求</h4>\n<p>使用 JSP 脚本展示品牌数据</p>\n<img data-src=\"assets/image-20210818125203390.png\" alt=\"image-20210818125203390\" style=\"zoom:80%;\" />\n<p>说明：</p>\n<ul>\n<li>在资料  <code>资料\\1. JSP案例素材</code>  中提供了  <code>brand.html</code>  静态页面</li>\n<li>在该案例中数据不从数据库中查询，而是在 JSP 页面上写死</li>\n</ul>\n<h4 id=\"422-实现\"><a class=\"markdownIt-Anchor\" href=\"#422-实现\">#</a> 4.2.2  实现</h4>\n<ul>\n<li>\n<p>将资料  <code>资料\\1. JSP案例素材</code>  中的  <code>Brand.java</code>  文件放置到项目的  <code>com.itheima.pojo</code>  包下</p>\n</li>\n<li>\n<p>在项目的  <code>webapp</code>  中创建  <code>brand.jsp</code>  ，并将  <code>brand.html</code>  页面中的内容拷贝过来。 <code>brand.jsp</code>  内容如下</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;input type=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;新增&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\">    &lt;table border=<span class=\"string\">&quot;1&quot;</span> cellspacing=<span class=\"string\">&quot;0&quot;</span> width=<span class=\"string\">&quot;800&quot;</span>&gt;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">            &lt;th&gt;序号&lt;/th&gt;</span><br><span class=\"line\">            &lt;th&gt;品牌名称&lt;/th&gt;</span><br><span class=\"line\">            &lt;th&gt;企业名称&lt;/th&gt;</span><br><span class=\"line\">            &lt;th&gt;排序&lt;/th&gt;</span><br><span class=\"line\">            &lt;th&gt;品牌介绍&lt;/th&gt;</span><br><span class=\"line\">            &lt;th&gt;状态&lt;/th&gt;</span><br><span class=\"line\">            &lt;th&gt;操作&lt;/th&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">        &lt;tr align=<span class=\"string\">&quot;center&quot;</span>&gt;</span><br><span class=\"line\">            &lt;td&gt;<span class=\"number\">1</span>&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;三只松鼠&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;三只松鼠&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;<span class=\"number\">100</span>&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;三只松鼠，好吃不上火&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;启用&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;&lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;修改&lt;/a&gt; &lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;tr align=<span class=\"string\">&quot;center&quot;</span>&gt;</span><br><span class=\"line\">            &lt;td&gt;<span class=\"number\">2</span>&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;优衣库&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;优衣库&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;<span class=\"number\">10</span>&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;优衣库，服适人生&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;禁用&lt;/td&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">            &lt;td&gt;&lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;修改&lt;/a&gt; &lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;tr align=<span class=\"string\">&quot;center&quot;</span>&gt;</span><br><span class=\"line\">            &lt;td&gt;<span class=\"number\">3</span>&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;小米&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;小米科技有限公司&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;<span class=\"number\">1000</span>&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;为发烧而生&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;启用&lt;/td&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">            &lt;td&gt;&lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;修改&lt;/a&gt; &lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">    &lt;/table&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>现在页面中的数据都是假数据。</p>\n</li>\n<li>\n<p>在  <code>brand.jsp</code>  中准备一些数据</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%</span><br><span class=\"line\">    <span class=\"comment\">// 查询数据库</span></span><br><span class=\"line\">    List&lt;Brand&gt; brands = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;Brand&gt;();</span><br><span class=\"line\">    brands.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;三只松鼠&quot;</span>,<span class=\"string\">&quot;三只松鼠&quot;</span>,<span class=\"number\">100</span>,<span class=\"string\">&quot;三只松鼠，好吃不上火&quot;</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">    brands.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>(<span class=\"number\">2</span>,<span class=\"string\">&quot;优衣库&quot;</span>,<span class=\"string\">&quot;优衣库&quot;</span>,<span class=\"number\">200</span>,<span class=\"string\">&quot;优衣库，服适人生&quot;</span>,<span class=\"number\">0</span>));</span><br><span class=\"line\">    brands.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>(<span class=\"number\">3</span>,<span class=\"string\">&quot;小米&quot;</span>,<span class=\"string\">&quot;小米科技有限公司&quot;</span>,<span class=\"number\">1000</span>,<span class=\"string\">&quot;为发烧而生&quot;</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>== 注意：== 这里的类是需要导包的</p>\n</blockquote>\n</li>\n<li>\n<p>将  <code>brand.jsp</code>  页面中的  <code>table</code>  标签中的数据改为动态的</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table border=<span class=\"string\">&quot;1&quot;</span> cellspacing=<span class=\"string\">&quot;0&quot;</span> width=<span class=\"string\">&quot;800&quot;</span>&gt;</span><br><span class=\"line\">    &lt;tr&gt;</span><br><span class=\"line\">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;企业名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;排序&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌介绍&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;状态&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/tr&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;%</span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; brands.size(); i++) &#123;</span><br><span class=\"line\">         <span class=\"comment\">//获取集合中的 每一个 Brand 对象</span></span><br><span class=\"line\">         <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> brands.get(i);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    %&gt;</span><br><span class=\"line\">    &lt;tr align=<span class=\"string\">&quot;center&quot;</span>&gt;</span><br><span class=\"line\">        &lt;td&gt;<span class=\"number\">1</span>&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;三只松鼠&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;三只松鼠&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;<span class=\"number\">100</span>&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;三只松鼠，好吃不上火&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;启用&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;&lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;修改&lt;/a&gt; &lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class=\"line\">    &lt;/tr&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br></pre></td></tr></table></figure>\n<p>上面的 for 循环需要将  <code>tr</code>  标签包裹起来，这样才能实现循环的效果，代码改进为</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table border=<span class=\"string\">&quot;1&quot;</span> cellspacing=<span class=\"string\">&quot;0&quot;</span> width=<span class=\"string\">&quot;800&quot;</span>&gt;</span><br><span class=\"line\">    &lt;tr&gt;</span><br><span class=\"line\">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;企业名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;排序&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌介绍&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;状态&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/tr&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;%</span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; brands.size(); i++) &#123;</span><br><span class=\"line\">         <span class=\"comment\">//获取集合中的 每一个 Brand 对象</span></span><br><span class=\"line\">         <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> brands.get(i);</span><br><span class=\"line\">    %&gt;</span><br><span class=\"line\">    \t &lt;tr align=<span class=\"string\">&quot;center&quot;</span>&gt;</span><br><span class=\"line\">            &lt;td&gt;<span class=\"number\">1</span>&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;三只松鼠&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;三只松鼠&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;<span class=\"number\">100</span>&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;三只松鼠，好吃不上火&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;启用&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;&lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;修改&lt;/a&gt; &lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">    &lt;%</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    %&gt;</span><br><span class=\"line\">   </span><br><span class=\"line\">&lt;/table&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：&lt;%%&gt; 里面写的是 Java 代码，而外边写的是 HTML 标签</p>\n</blockquote>\n<p>上面代码中的  <code>td</code>  标签中的数据都需要是动态的，所以还需要改进</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;table border=<span class=\"string\">&quot;1&quot;</span> cellspacing=<span class=\"string\">&quot;0&quot;</span> width=<span class=\"string\">&quot;800&quot;</span>&gt;</span><br><span class=\"line\">    &lt;tr&gt;</span><br><span class=\"line\">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;企业名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;排序&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌介绍&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;状态&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/tr&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &lt;%</span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; brands.size(); i++) &#123;</span><br><span class=\"line\">         <span class=\"comment\">//获取集合中的 每一个 Brand 对象</span></span><br><span class=\"line\">         <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> brands.get(i);</span><br><span class=\"line\">    %&gt;</span><br><span class=\"line\">    \t &lt;tr align=<span class=\"string\">&quot;center&quot;</span>&gt;</span><br><span class=\"line\">            &lt;td&gt;&lt;%=brand.getId()%&gt;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;&lt;%=brand.getBrandName()%&gt;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;&lt;%=brand.getCompanyName()%&gt;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;&lt;%=brand.getOrdered()%&gt;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;&lt;%=brand.getDescription()%&gt;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;&lt;%=brand.getStatus() == <span class=\"number\">1</span> ? <span class=\"string\">&quot;启用&quot;</span>:<span class=\"string\">&quot;禁用&quot;</span>%&gt;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;&lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;修改&lt;/a&gt; &lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">    &lt;%</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    %&gt;</span><br><span class=\"line\">   </span><br><span class=\"line\">&lt;/table&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"423-成品代码\"><a class=\"markdownIt-Anchor\" href=\"#423-成品代码\">#</a> 4.2.3  成品代码</h4>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page <span class=\"keyword\">import</span>=<span class=\"string\">&quot;com.itheima.pojo.Brand&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ page <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.List&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ page <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.ArrayList&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">    <span class=\"comment\">// 查询数据库</span></span><br><span class=\"line\">    List&lt;Brand&gt; brands = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;Brand&gt;();</span><br><span class=\"line\">    brands.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;三只松鼠&quot;</span>,<span class=\"string\">&quot;三只松鼠&quot;</span>,<span class=\"number\">100</span>,<span class=\"string\">&quot;三只松鼠，好吃不上火&quot;</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">    brands.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>(<span class=\"number\">2</span>,<span class=\"string\">&quot;优衣库&quot;</span>,<span class=\"string\">&quot;优衣库&quot;</span>,<span class=\"number\">200</span>,<span class=\"string\">&quot;优衣库，服适人生&quot;</span>,<span class=\"number\">0</span>));</span><br><span class=\"line\">    brands.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>(<span class=\"number\">3</span>,<span class=\"string\">&quot;小米&quot;</span>,<span class=\"string\">&quot;小米科技有限公司&quot;</span>,<span class=\"number\">1000</span>,<span class=\"string\">&quot;为发烧而生&quot;</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;input type=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;新增&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\">&lt;table border=<span class=\"string\">&quot;1&quot;</span> cellspacing=<span class=\"string\">&quot;0&quot;</span> width=<span class=\"string\">&quot;800&quot;</span>&gt;</span><br><span class=\"line\">    &lt;tr&gt;</span><br><span class=\"line\">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;企业名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;排序&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌介绍&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;状态&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class=\"line\">    &lt;/tr&gt;</span><br><span class=\"line\">    &lt;%</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; brands.size(); i++) &#123;</span><br><span class=\"line\">            <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> brands.get(i);</span><br><span class=\"line\">    %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;tr align=<span class=\"string\">&quot;center&quot;</span>&gt;</span><br><span class=\"line\">        &lt;td&gt;&lt;%=brand.getId()%&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;&lt;%=brand.getBrandName()%&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;&lt;%=brand.getCompanyName()%&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;&lt;%=brand.getOrdered()%&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;&lt;%=brand.getDescription()%&gt;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;&lt;%=brand.getStatus() == <span class=\"number\">1</span> ? <span class=\"string\">&quot;启用&quot;</span>:<span class=\"string\">&quot;禁用&quot;</span>%&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;&lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;修改&lt;/a&gt; &lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class=\"line\">    &lt;/tr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;%</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    %&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"424-测试\"><a class=\"markdownIt-Anchor\" href=\"#424-测试\">#</a> 4.2.4  测试</h4>\n<p>在浏览器地址栏输入  <code>http://localhost:8080/jsp-demo/brand.jsp</code>  ，页面展示效果如下</p>\n<img data-src=\"assets/image-20210818145450748.png\" alt=\"image-20210818145450748\" style=\"zoom:70%;\" />\n<h3 id=\"43-jsp-缺点\"><a class=\"markdownIt-Anchor\" href=\"#43-jsp-缺点\">#</a> 4.3  JSP 缺点</h3>\n<p>通过上面的案例，我们可以看到 JSP 的很多缺点。</p>\n<p>由于 JSP 页面内，既可以定义 HTML 标签，又可以定义 Java 代码，造成了以下问题：</p>\n<ul>\n<li>\n<p>书写麻烦：特别是复杂的页面</p>\n<p>既要写 HTML 标签，还要写 Java 代码</p>\n</li>\n<li>\n<p>阅读麻烦</p>\n<p>上面案例的代码，相信你后期再看这段代码时还需要花费很长的时间去梳理</p>\n</li>\n<li>\n<p>复杂度高：运行需要依赖于各种环境，JRE，JSP 容器，JavaEE…</p>\n</li>\n<li>\n<p>占内存和磁盘：JSP 会自动生成.java 和.class 文件占磁盘，运行的是.class 文件占内存</p>\n</li>\n<li>\n<p>调试困难：出错后，需要找到自动生成的.java 文件进行调试</p>\n</li>\n<li>\n<p>不利于团队协作：前端人员不会 Java，后端人员不精 HTML</p>\n<p>如果页面布局发生变化，前端工程师对静态页面进行修改，然后再交给后端工程师，由后端工程师再将该页面改为 JSP 页面</p>\n</li>\n</ul>\n<p>由于上述的问题， ==JSP 已逐渐退出历史舞台，== 以后开发更多的是使用 <mark>HTML +  Ajax</mark> 来替代。Ajax 是我们后续会重点学习的技术。有个这个技术后，前端工程师负责前端页面开发，而后端工程师只负责前端代码开发。下来对技术的发展进行简单的说明</p>\n<img data-src=\"assets/image-20210818150346332.png\" alt=\"image-20210818150346332\" style=\"zoom:80%;\" />\n<ol>\n<li>\n<p>第一阶段：使用  <code>servlet</code>  即实现逻辑代码编写，也对页面进行拼接。这种模式我们之前也接触过</p>\n</li>\n<li>\n<p>第二阶段：随着技术的发展，出现了  <code>JSP</code>  ，人们发现  <code>JSP</code>  使用起来比  <code>Servlet</code>  方便很多，但是还是要在  <code>JSP</code>  中嵌套  <code>Java</code>  代码，也不利于后期的维护</p>\n</li>\n<li>\n<p>第三阶段：使用  <code>Servlet</code>  进行逻辑代码开发，而使用  <code>JSP</code>  进行数据展示</p>\n<img data-src=\"assets/image-20210818151232955.png\" alt=\"image-20210818151232955\" style=\"zoom:67%;\" />\n</li>\n<li>\n<p>第四阶段：使用  <code>servlet</code>  进行后端逻辑代码开发，而使用  <code>HTML</code>  进行数据展示。而这里面就存在问题， <code>HTML</code>  是静态页面，怎么进行动态数据展示呢？这就是  <code>ajax</code>  的作用了。</p>\n</li>\n</ol>\n<p>那既然 JSP 已经逐渐的退出历史舞台，那我们为什么还要学习  <code>JSP</code>  呢？原因有两点：</p>\n<ul>\n<li>一些公司可能有些老项目还在用  <code>JSP</code>  ，所以要求我们必须动  <code>JSP</code></li>\n<li>我们如果不经历这些复杂的过程，就不能体现后面阶段开发的简单</li>\n</ul>\n<p>接下来我们来学习第三阶段，使用  <code>EL表达式</code>  和  <code>JSTL</code>  标签库替换  <code>JSP</code>  中的  <code>Java</code>  代码。</p>\n<h2 id=\"5el-表达式\"><a class=\"markdownIt-Anchor\" href=\"#5el-表达式\">#</a> 5，EL 表达式</h2>\n<h3 id=\"51-概述\"><a class=\"markdownIt-Anchor\" href=\"#51-概述\">#</a> 5.1  概述</h3>\n<p>EL（全称 Expression Language ）表达式语言，用于简化 JSP 页面内的 Java 代码。</p>\n<p>EL 表达式的主要作用是 <mark>获取数据</mark>。其实就是从域对象中获取数据，然后将数据展示在页面上。</p>\n<p>而 EL 表达式的语法也比较简单，==<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow><mo>=</mo><mo>=</mo><mtext>。例如：</mtext></mrow><annotation encoding=\"application/x-tex\">{expression}== 。例如：</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">。</span><span class=\"mord cjk_fallback\">例</span><span class=\"mord cjk_fallback\">如</span><span class=\"mord cjk_fallback\">：</span></span></span></span>{brands} 就是获取域中存储的 key 为 brands 的数据。</p>\n<h3 id=\"52-代码演示\"><a class=\"markdownIt-Anchor\" href=\"#52-代码演示\">#</a> 5.2  代码演示</h3>\n<ul>\n<li>\n<p>定义 servlet，在 servlet 中封装一些数据并存储到 request 域对象中并转发到  <code>el-demo.jsp</code>  页面。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/demo1&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServletDemo1</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 准备数据</span></span><br><span class=\"line\">        List&lt;Brand&gt; brands = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;Brand&gt;();</span><br><span class=\"line\">        brands.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;三只松鼠&quot;</span>,<span class=\"string\">&quot;三只松鼠&quot;</span>,<span class=\"number\">100</span>,<span class=\"string\">&quot;三只松鼠，好吃不上火&quot;</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">        brands.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>(<span class=\"number\">2</span>,<span class=\"string\">&quot;优衣库&quot;</span>,<span class=\"string\">&quot;优衣库&quot;</span>,<span class=\"number\">200</span>,<span class=\"string\">&quot;优衣库，服适人生&quot;</span>,<span class=\"number\">0</span>));</span><br><span class=\"line\">        brands.add(<span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>(<span class=\"number\">3</span>,<span class=\"string\">&quot;小米&quot;</span>,<span class=\"string\">&quot;小米科技有限公司&quot;</span>,<span class=\"number\">1000</span>,<span class=\"string\">&quot;为发烧而生&quot;</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 存储到request域中</span></span><br><span class=\"line\">        request.setAttribute(<span class=\"string\">&quot;brands&quot;</span>,brands);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3. 转发到 el-demo.jsp</span></span><br><span class=\"line\">        request.getRequestDispatcher(<span class=\"string\">&quot;/el-demo.jsp&quot;</span>).forward(request,response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><mark>注意：</mark> 此处需要用转发，因为转发才可以使用 request 对象作为域对象进行数据共享</p>\n</blockquote>\n</li>\n<li>\n<p>在  <code>el-demo.jsp</code>  中通过 EL 表达式 获取数据</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    $&#123;brands&#125;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在浏览器的地址栏输入  <code>http://localhost:8080/jsp-demo/demo1</code>  ，页面效果如下：</p>\n<img data-src=\"assets/image-20210818152536484.png\" alt=\"image-20210818152536484\" style=\"zoom:80%;\" />\n</li>\n</ul>\n<h3 id=\"53-域对象\"><a class=\"markdownIt-Anchor\" href=\"#53-域对象\">#</a> 5.3  域对象</h3>\n<p>JavaWeb 中有四大域对象，分别是：</p>\n<ul>\n<li>page：当前页面有效</li>\n<li>request：当前请求有效</li>\n<li>session：当前会话有效</li>\n<li>application：当前应用有效</li>\n</ul>\n<p>el 表达式获取数据，会依次从这 4 个域中寻找，直到找到为止。而这四个域对象的作用范围如下图所示</p>\n<img data-src=\"assets/image-20210818152857407.png\" alt=\"image-20210818152857407\" style=\"zoom:60%;\" />\n<p>例如： ${brands}，el 表达式获取数据，会先从 page 域对象中获取数据，如果没有再到 requet 域对象中获取数据，如果再没有再到 session 域对象中获取，如果还没有才会到 application 中获取数据。</p>\n<h2 id=\"6jstl标签\"><a class=\"markdownIt-Anchor\" href=\"#6jstl标签\">#</a> 6，JSTL 标签</h2>\n<h3 id=\"61-概述\"><a class=\"markdownIt-Anchor\" href=\"#61-概述\">#</a> 6.1  概述</h3>\n<p>JSP 标准标签库 (Jsp Standarded Tag Library) ，使用标签取代 JSP 页面上的 Java 代码。如下代码就是 JSTL 标签</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;flag == 1&#125;&quot;</span>&gt;</span><br><span class=\"line\">    男</span><br><span class=\"line\">&lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">&lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;flag == 2&#125;&quot;</span>&gt;</span><br><span class=\"line\">    女</span><br><span class=\"line\">&lt;/c:<span class=\"keyword\">if</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>上面代码看起来是不是比 JSP 中嵌套 Java 代码看起来舒服好了。而且前端工程师对标签是特别敏感的，他们看到这段代码是能看懂的。</p>\n<p>JSTL 提供了很多标签，如下图</p>\n<img data-src=\"assets/image-20210818153646575.png\" alt=\"image-20210818153646575\" style=\"zoom:80%;\" />\n<p>我们只对两个最常用的标签进行讲解， <code>&lt;c:forEach&gt;</code>  标签和  <code>&lt;c:if&gt;</code>  标签。</p>\n<p>JSTL 使用也是比较简单的，分为如下步骤：</p>\n<ul>\n<li>\n<p>导入坐标</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>taglibs<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>standard<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在 JSP 页面上引入 JSTL 标签库</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ taglib prefix=<span class=\"string\">&quot;c&quot;</span> uri=<span class=\"string\">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt; </span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>使用标签</p>\n</li>\n</ul>\n<h3 id=\"62-if-标签\"><a class=\"markdownIt-Anchor\" href=\"#62-if-标签\">#</a> 6.2  if 标签</h3>\n<p><code>&lt;c:if&gt;</code> ：相当于 if 判断</p>\n<ul>\n<li>属性：test，用于定义条件表达式</li>\n</ul>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;flag == 1&#125;&quot;</span>&gt;</span><br><span class=\"line\">    男</span><br><span class=\"line\">&lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">&lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;flag == 2&#125;&quot;</span>&gt;</span><br><span class=\"line\">    女</span><br><span class=\"line\">&lt;/c:<span class=\"keyword\">if</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>代码演示：</strong></p>\n<ul>\n<li>\n<p>定义一个  <code>servlet</code>  ，在该  <code>servlet</code>  中向 request 域对象中添加 键是  <code>status</code>  ，值为  <code>1</code>  的数据</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/demo2&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ServletDemo2</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 存储数据到request域中</span></span><br><span class=\"line\">        request.setAttribute(<span class=\"string\">&quot;status&quot;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 转发到 jstl-if.jsp</span></span><br><span class=\"line\">        数据request.getRequestDispatcher(<span class=\"string\">&quot;/jstl-if.jsp&quot;</span>).forward(request,response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>定义  <code>jstl-if.jsp</code>  页面，在该页面使用  <code>&lt;c:if&gt;</code>  标签</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ taglib prefix=<span class=\"string\">&quot;c&quot;</span> uri=<span class=\"string\">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;%--</span><br><span class=\"line\">        c:<span class=\"keyword\">if</span>：来完成逻辑判断，替换java  <span class=\"keyword\">if</span> <span class=\"keyword\">else</span></span><br><span class=\"line\">    --%&gt;</span><br><span class=\"line\">    &lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;status ==1&#125;&quot;</span>&gt;</span><br><span class=\"line\">        启用</span><br><span class=\"line\">    &lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;status ==0&#125;&quot;</span>&gt;</span><br><span class=\"line\">        禁用</span><br><span class=\"line\">    &lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><mark>注意：</mark> 在该页面已经要引入 JSTL 核心标签库</p>\n<p><code>&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</code></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"63-foreach-标签\"><a class=\"markdownIt-Anchor\" href=\"#63-foreach-标签\">#</a> 6.3  forEach 标签</h3>\n<p><code>&lt;c:forEach&gt;</code> ：相当于 for 循环。java 中有增强 for 循环和普通 for 循环，JSTL 中的  <code>&lt;c:forEach&gt;</code>  也有两种用法</p>\n<h4 id=\"631-用法一\"><a class=\"markdownIt-Anchor\" href=\"#631-用法一\">#</a> 6.3.1  用法一</h4>\n<p>类似于 Java 中的增强 for 循环。涉及到的  <code>&lt;c:forEach&gt;</code>  中的属性如下</p>\n<ul>\n<li>\n<p>items：被遍历的容器</p>\n</li>\n<li>\n<p>var：遍历产生的临时变量</p>\n</li>\n<li>\n<p>varStatus：遍历状态对象</p>\n</li>\n</ul>\n<p>如下代码，是从域对象中获取名为 brands 数据，该数据是一个集合；遍历遍历，并给该集合中的每一个元素起名为  <code>brand</code> ，是 Brand 对象。在循环里面使用 EL 表达式获取每一个 Brand 对象的属性值</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:forEach items=<span class=\"string\">&quot;$&#123;brands&#125;&quot;</span> <span class=\"keyword\">var</span>=<span class=\"string\">&quot;brand&quot;</span>&gt;</span><br><span class=\"line\">    &lt;tr align=<span class=\"string\">&quot;center&quot;</span>&gt;</span><br><span class=\"line\">        &lt;td&gt;$&#123;brand.id&#125;&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;$&#123;brand.brandName&#125;&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;$&#123;brand.companyName&#125;&lt;/td&gt;</span><br><span class=\"line\">        &lt;td&gt;$&#123;brand.description&#125;&lt;/td&gt;</span><br><span class=\"line\">    &lt;/tr&gt;</span><br><span class=\"line\">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>代码演示：</strong></p>\n<ul>\n<li>\n<p><code>servlet</code>  还是使用之前的名为  <code>ServletDemo1</code>  。</p>\n</li>\n<li>\n<p>定义名为  <code>jstl-foreach.jsp</code>  页面，内容如下：</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ taglib prefix=<span class=\"string\">&quot;c&quot;</span> uri=<span class=\"string\">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;input type=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;新增&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\">&lt;table border=<span class=\"string\">&quot;1&quot;</span> cellspacing=<span class=\"string\">&quot;0&quot;</span> width=<span class=\"string\">&quot;800&quot;</span>&gt;</span><br><span class=\"line\">    &lt;tr&gt;</span><br><span class=\"line\">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;企业名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;排序&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌介绍&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;状态&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class=\"line\">    &lt;/tr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;c:forEach items=<span class=\"string\">&quot;$&#123;brands&#125;&quot;</span> <span class=\"keyword\">var</span>=<span class=\"string\">&quot;brand&quot;</span> varStatus=<span class=\"string\">&quot;status&quot;</span>&gt;</span><br><span class=\"line\">        &lt;tr align=<span class=\"string\">&quot;center&quot;</span>&gt;</span><br><span class=\"line\">            &lt;%--&lt;td&gt;$&#123;brand.id&#125;&lt;/td&gt;--%&gt;</span><br><span class=\"line\">            &lt;td&gt;$&#123;status.count&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;$&#123;brand.brandName&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;$&#123;brand.companyName&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;$&#123;brand.ordered&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;$&#123;brand.description&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;brand.status == 1&#125;&quot;</span>&gt;</span><br><span class=\"line\">                &lt;td&gt;启用&lt;/td&gt;</span><br><span class=\"line\">            &lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">            &lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;brand.status != 1&#125;&quot;</span>&gt;</span><br><span class=\"line\">                &lt;td&gt;禁用&lt;/td&gt;</span><br><span class=\"line\">            &lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">            &lt;td&gt;&lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;修改&lt;/a&gt; &lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">    &lt;/c:forEach&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"632-用法二\"><a class=\"markdownIt-Anchor\" href=\"#632-用法二\">#</a> 6.3.2  用法二</h4>\n<p>类似于 Java 中的普通 for 循环。涉及到的  <code>&lt;c:forEach&gt;</code>  中的属性如下</p>\n<ul>\n<li>\n<p>begin：开始数</p>\n</li>\n<li>\n<p>end：结束数</p>\n</li>\n<li>\n<p>step：步长</p>\n</li>\n</ul>\n<p>实例代码：</p>\n<p>从 0 循环到 10，变量名是  <code>i</code>  ，每次自增 1</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:forEach begin=<span class=\"string\">&quot;0&quot;</span> end=<span class=\"string\">&quot;10&quot;</span> step=<span class=\"string\">&quot;1&quot;</span> <span class=\"keyword\">var</span>=<span class=\"string\">&quot;i&quot;</span>&gt;</span><br><span class=\"line\">    $&#123;i&#125;</span><br><span class=\"line\">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7mvc模式和三层架构\"><a class=\"markdownIt-Anchor\" href=\"#7mvc模式和三层架构\">#</a> 7，MVC 模式和三层架构</h2>\n<p>MVC 模式和三层架构是一些理论的知识，将来我们使用了它们进行代码开发会让我们代码维护性和扩展性更好。</p>\n<h3 id=\"71-mvc模式\"><a class=\"markdownIt-Anchor\" href=\"#71-mvc模式\">#</a> 7.1  MVC 模式</h3>\n<p>MVC 是一种分层开发的模式，其中：</p>\n<ul>\n<li>\n<p>M：Model，业务模型，处理业务</p>\n</li>\n<li>\n<p>V：View，视图，界面展示</p>\n</li>\n<li>\n<p>C：Controller，控制器，处理请求，调用模型和视图</p>\n</li>\n</ul>\n<img data-src=\"assets/image-20210818163348642.png\" alt=\"image-20210818163348642\" style=\"zoom:70%;\" />\n<p>控制器（serlvlet）用来接收浏览器发送过来的请求，控制器调用模型（JavaBean）来获取数据，比如从数据库查询数据；控制器获取到数据后再交由视图（JSP）进行数据展示。</p>\n<p><strong>MVC 好处：</strong></p>\n<ul>\n<li>\n<p>职责单一，互不影响。每个角色做它自己的事，各司其职。</p>\n</li>\n<li>\n<p>有利于分工协作。</p>\n</li>\n<li>\n<p>有利于组件重用</p>\n</li>\n</ul>\n<h3 id=\"72-三层架构\"><a class=\"markdownIt-Anchor\" href=\"#72-三层架构\">#</a> 7.2  三层架构</h3>\n<p>三层架构是将我们的项目分成了三个层面，分别是  <code>表现层</code> 、 <code>业务逻辑层</code> 、 <code>数据访问层</code> 。</p>\n<img data-src=\"assets/image-20210818164301154.png\" alt=\"image-20210818164301154\" style=\"zoom:60%;\" />\n<ul>\n<li>数据访问层：对数据库的 CRUD 基本操作</li>\n<li>业务逻辑层：对业务逻辑进行封装，组合数据访问层层中基本功能，形成复杂的业务逻辑功能。例如  <code>注册业务功能</code>  ，我们会先调用  <code>数据访问层</code>  的  <code>selectByName()</code>  方法判断该用户名是否存在，如果不存在再调用  <code>数据访问层</code>  的  <code>insert()</code>  方法进行数据的添加操作</li>\n<li>表现层：接收请求，封装数据，调用业务逻辑层，响应数据</li>\n</ul>\n<p>而整个流程是，浏览器发送请求，表现层的 Servlet 接收请求并调用业务逻辑层的方法进行业务逻辑处理，而业务逻辑层方法调用数据访问层方法进行数据的操作，依次返回到 serlvet，然后 servlet 将数据交由 JSP 进行展示。</p>\n<p>三层架构的每一层都有特有的包名称：</p>\n<ul>\n<li>表现层：  <code>com.itheima.controller</code>  或者  <code>com.itheima.web</code></li>\n<li>业务逻辑层： <code>com.itheima.service</code></li>\n<li>数据访问层： <code>com.itheima.dao</code>  或者  <code>com.itheima.mapper</code></li>\n</ul>\n<p>后期我们还会学习一些框架，不同的框架是对不同层进行封装的</p>\n<img data-src=\"assets/image-20210818165439826.png\" alt=\"image-20210818165439826\" style=\"zoom:60%;\" />\n<h3 id=\"73-mvc-和-三层架构\"><a class=\"markdownIt-Anchor\" href=\"#73-mvc-和-三层架构\">#</a> 7.3  MVC 和 三层架构</h3>\n<p>通过 MVC 和 三层架构 的学习，有些人肯定混淆了。那他们有什么区别和联系？</p>\n<img data-src=\"assets/image-20210818165808589.png\" alt=\"image-20210818165808589\" style=\"zoom:60%;\" />\n<p>如上图上半部分是 MVC 模式，上图下半部分是三层架构。  <code>MVC 模式</code>  中的 C（控制器）和 V（视图）就是  <code>三层架构</code>  中的表现层，而  <code>MVC 模式</code>  中的 M（模型）就是  <code>三层架构</code>  中的 业务逻辑层 和 数据访问层。</p>\n<p>可以将  <code>MVC 模式</code>  理解成是一个大的概念，而  <code>三层架构</code>  是对  <code>MVC 模式</code>  实现架构的思想。 那么我们以后按照要求将不同层的代码写在不同的包下，每一层里功能职责做到单一，将来如果将表现层的技术换掉，而业务逻辑层和数据访问层的代码不需要发生变化。</p>\n<h2 id=\"8案例\"><a class=\"markdownIt-Anchor\" href=\"#8案例\">#</a> 8，案例</h2>\n<p><strong>需求：完成品牌数据的增删改查操作</strong></p>\n<img data-src=\"assets/image-20210818171702401.png\" alt=\"image-20210818171702401\" style=\"zoom:70%;\" />\n<p>这个功能我们之前一直在做，而这个案例是将今天学习的所有的内容（包含 MVC 模式 和 三层架构）进行应用，并将整个流程贯穿起来。</p>\n<h3 id=\"81-环境准备\"><a class=\"markdownIt-Anchor\" href=\"#81-环境准备\">#</a> 8.1  环境准备</h3>\n<p>环境准备工作，我们分以下步骤实现：</p>\n<ul>\n<li>\n<p>创建新的模块 brand_demo，引入坐标</p>\n</li>\n<li>\n<p>创建三层架构的包结构</p>\n</li>\n<li>\n<p>数据库表 tb_brand</p>\n</li>\n<li>\n<p>实体类 Brand</p>\n</li>\n<li>\n<p>MyBatis 基础环境</p>\n<ul>\n<li>\n<p>Mybatis-config.xml</p>\n</li>\n<li>\n<p>BrandMapper.xml</p>\n</li>\n<li>\n<p>BrandMapper 接口</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"811-创建工程\"><a class=\"markdownIt-Anchor\" href=\"#811-创建工程\">#</a> 8.1.1  创建工程</h4>\n<p>创建新的模块 brand_demo，引入坐标。我们只要分析出要用到哪儿些技术，那么需要哪儿些坐标也就明确了</p>\n<ul>\n<li>需要操作数据库。mysql 的驱动包</li>\n<li>要使用 mybatis 框架。mybaits 的依赖包</li>\n<li>web 项目需要用到 servlet 和 jsp。servlet 和 jsp 的依赖包</li>\n<li>需要使用 jstl 进行数据展示。jstl 的依赖包</li>\n</ul>\n<p><code>pom.xml</code>  内容如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.example<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>brand-demo<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>war<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- mybatis --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.5.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--mysql--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.34<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--servlet--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--jsp--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--jstl--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>taglibs<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>standard<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.tomcat.maven<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"812-创建包\"><a class=\"markdownIt-Anchor\" href=\"#812-创建包\">#</a> 8.1.2  创建包</h4>\n<p>创建不同的包结构，用来存储不同的类。包结构如下</p>\n<img data-src=\"assets/image-20210818173155335.png\" alt=\"image-20210818173155335\" style=\"zoom:80%;\" />\n<h4 id=\"813-创建表\"><a class=\"markdownIt-Anchor\" href=\"#813-创建表\">#</a> 8.1.3  创建表</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 删除tb_brand表</span></span><br><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> if <span class=\"keyword\">exists</span> tb_brand;</span><br><span class=\"line\"><span class=\"comment\">-- 创建tb_brand表</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> tb_brand</span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"comment\">-- id 主键</span></span><br><span class=\"line\">    id           <span class=\"type\">int</span> <span class=\"keyword\">primary</span> key auto_increment,</span><br><span class=\"line\">    <span class=\"comment\">-- 品牌名称</span></span><br><span class=\"line\">    brand_name   <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 企业名称</span></span><br><span class=\"line\">    company_name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 排序字段</span></span><br><span class=\"line\">    ordered      <span class=\"type\">int</span>,</span><br><span class=\"line\">    <span class=\"comment\">-- 描述信息</span></span><br><span class=\"line\">    description  <span class=\"type\">varchar</span>(<span class=\"number\">100</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 状态：0：禁用  1：启用</span></span><br><span class=\"line\">    status       <span class=\"type\">int</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">-- 添加数据</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> tb_brand (brand_name, company_name, ordered, description, status)</span><br><span class=\"line\"><span class=\"keyword\">values</span> (<span class=\"string\">&#x27;三只松鼠&#x27;</span>, <span class=\"string\">&#x27;三只松鼠股份有限公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;好吃不上火&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;华为致力于把数字世界带入每个人、每个家庭、每个组织，构建万物互联的智能世界&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"814-创建实体类\"><a class=\"markdownIt-Anchor\" href=\"#814-创建实体类\">#</a> 8.1.4  创建实体类</h4>\n<p>在  <code>pojo</code>  包下创建名为  <code>Brand</code>  的类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Brand</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// id 主键</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"comment\">// 品牌名称</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String brandName;</span><br><span class=\"line\">    <span class=\"comment\">// 企业名称</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String companyName;</span><br><span class=\"line\">    <span class=\"comment\">// 排序字段</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer ordered;</span><br><span class=\"line\">    <span class=\"comment\">// 描述信息</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\">    <span class=\"comment\">// 状态：0：禁用  1：启用</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer status;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Brand</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Brand</span><span class=\"params\">(Integer id, String brandName, String companyName, String description)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.brandName = brandName;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.companyName = companyName;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.description = description;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Brand</span><span class=\"params\">(Integer id, String brandName, String companyName, Integer ordered, String description, Integer status)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.brandName = brandName;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.companyName = companyName;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.ordered = ordered;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.description = description;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.status = status;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getId</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setId</span><span class=\"params\">(Integer id)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getBrandName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> brandName;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBrandName</span><span class=\"params\">(String brandName)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.brandName = brandName;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getCompanyName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> companyName;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCompanyName</span><span class=\"params\">(String companyName)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.companyName = companyName;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getOrdered</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ordered;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setOrdered</span><span class=\"params\">(Integer ordered)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.ordered = ordered;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getDescription</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> description;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setDescription</span><span class=\"params\">(String description)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.description = description;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getStatus</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> status;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setStatus</span><span class=\"params\">(Integer status)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.status = status;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Brand&#123;&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;id=&quot;</span> + id +</span><br><span class=\"line\">                <span class=\"string\">&quot;, brandName=&#x27;&quot;</span> + brandName + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;, companyName=&#x27;&quot;</span> + companyName + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;, ordered=&quot;</span> + ordered +</span><br><span class=\"line\">                <span class=\"string\">&quot;, description=&#x27;&quot;</span> + description + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;, status=&quot;</span> + status +</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"815-准备mybatis环境\"><a class=\"markdownIt-Anchor\" href=\"#815-准备mybatis环境\">#</a> 8.1.5   准备 mybatis 环境</h4>\n<p>定义核心配置文件  <code>Mybatis-config.xml</code>  ，并将该文件放置在  <code>resources</code>  下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">configuration</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--起别名--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.itheima.pojo&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;development&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;POOLED&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driver&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql:///db1?useSSL=false<span class=\"symbol\">&amp;amp;</span>useServerPrepStmts=true&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1234&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--扫描mapper--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;com.itheima.mapper&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在  <code>resources</code>  下创建放置映射配置文件的目录结构  <code>com/itheima/mapper</code> ，并在该目录下创建映射配置文件  <code>BrandMapper.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.itheima.mapper.BrandMapper&quot;</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"82-查询所有\"><a class=\"markdownIt-Anchor\" href=\"#82-查询所有\">#</a> 8.2  查询所有</h3>\n<p><img data-src=\"assets/image-20210818174441917.png\" alt=\"image-20210818174441917\"></p>\n<p>当我们点击  <code>index.html</code>  页面中的  <code>查询所有</code>  这个超链接时，就能查询到上图右半部分的数据。</p>\n<p>对于上述的功能，点击  <code>查询所有</code>  超链接是需要先请后端的  <code>servlet</code>  ，由  <code>servlet</code>  跳转到对应的页面进行数据的动态展示。而整个流程如下图：</p>\n<img data-src=\"assets/image-20210818174800783.png\" alt=\"image-20210818174800783\" style=\"zoom:60%;\" />\n<h4 id=\"821-编写brandmapper\"><a class=\"markdownIt-Anchor\" href=\"#821-编写brandmapper\">#</a> 8.2.1  编写 BrandMapper</h4>\n<p>在  <code>mapper</code>  包下创建创建  <code>BrandMapper</code>  接口，在接口中定义  <code>selectAll()</code>  方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 查询所有</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"meta\">@Select(&quot;select * from tb_brand&quot;)</span></span><br><span class=\"line\">List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"822-编写工具类\"><a class=\"markdownIt-Anchor\" href=\"#822-编写工具类\">#</a> 8.2.2  编写工具类</h4>\n<p>在  <code>com.itheima</code>  包下创建  <code>utils</code>  包，并在该包下创建名为  <code>SqlSessionFactoryUtils</code>  工具类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SqlSessionFactoryUtils</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//静态代码块会随着类的加载而自动执行，且只执行一次</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">            <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">            sqlSessionFactory = <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SqlSessionFactory <span class=\"title function_\">getSqlSessionFactory</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sqlSessionFactory;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"823-编写brandservice\"><a class=\"markdownIt-Anchor\" href=\"#823-编写brandservice\">#</a> 8.2.3  编写 BrandService</h4>\n<p>在  <code>service</code>  包下创建  <code>BrandService</code>  类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BrandService</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">factory</span> <span class=\"operator\">=</span> SqlSessionFactoryUtils.getSqlSessionFactory();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询所有</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//调用BrandMapper.selectAll()</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 获取SqlSession</span></span><br><span class=\"line\">        <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">        <span class=\"comment\">//3. 获取BrandMapper</span></span><br><span class=\"line\">        <span class=\"type\">BrandMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4. 调用方法</span></span><br><span class=\"line\">        List&lt;Brand&gt; brands = mapper.selectAll();</span><br><span class=\"line\"></span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> brands;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"824-编写servlet\"><a class=\"markdownIt-Anchor\" href=\"#824-编写servlet\">#</a> 8.2.4  编写 Servlet</h4>\n<p>在  <code>web</code>  包下创建名为  <code>SelectAllServlet</code>  的  <code>servlet</code> ，该  <code>servlet</code>  的逻辑如下：</p>\n<ul>\n<li>调用  <code>BrandService</code>  的  <code>selectAll()</code>  方法进行业务逻辑处理，并接收返回的结果</li>\n<li>将上一步返回的结果存储到  <code>request</code>  域对象中</li>\n<li>跳转到  <code>brand.jsp</code>  页面进行数据的展示</li>\n</ul>\n<p>具体的代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/selectAllServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SelectAllServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  <span class=\"type\">BrandService</span> <span class=\"variable\">service</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BrandService</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1. 调用BrandService完成查询</span></span><br><span class=\"line\">        List&lt;Brand&gt; brands = service.selectAll();</span><br><span class=\"line\">        <span class=\"comment\">//2. 存入request域中</span></span><br><span class=\"line\">        request.setAttribute(<span class=\"string\">&quot;brands&quot;</span>,brands);</span><br><span class=\"line\">        <span class=\"comment\">//3. 转发到brand.jsp</span></span><br><span class=\"line\">        request.getRequestDispatcher(<span class=\"string\">&quot;/brand.jsp&quot;</span>).forward(request,response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"825-编写brandjsp页面\"><a class=\"markdownIt-Anchor\" href=\"#825-编写brandjsp页面\">#</a> 8.2.5  编写 brand.jsp 页面</h4>\n<p>将资料  <code>资料\\2. 品牌增删改查案例\\静态页面</code>  下的  <code>brand.html</code>  页面拷贝到项目的  <code>webapp</code>  目录下，并将该页面改成  <code>brand.jsp</code>  页面，而  <code>brand.jsp</code>  页面在表格中使用  <code>JSTL</code>  和  <code>EL表达式</code>  从 request 域对象中获取名为  <code>brands</code>  的集合数据并展示出来。页面内容如下：</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ taglib prefix=<span class=\"string\">&quot;c&quot;</span> uri=<span class=\"string\">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\">&lt;table border=<span class=\"string\">&quot;1&quot;</span> cellspacing=<span class=\"string\">&quot;0&quot;</span> width=<span class=\"string\">&quot;80%&quot;</span>&gt;</span><br><span class=\"line\">    &lt;tr&gt;</span><br><span class=\"line\">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;企业名称&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;排序&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;品牌介绍&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;状态&lt;/th&gt;</span><br><span class=\"line\">        &lt;th&gt;操作&lt;/th&gt;</span><br><span class=\"line\">    &lt;/tr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;c:forEach items=<span class=\"string\">&quot;$&#123;brands&#125;&quot;</span> <span class=\"keyword\">var</span>=<span class=\"string\">&quot;brand&quot;</span> varStatus=<span class=\"string\">&quot;status&quot;</span>&gt;</span><br><span class=\"line\">        &lt;tr align=<span class=\"string\">&quot;center&quot;</span>&gt;</span><br><span class=\"line\">            &lt;%--&lt;td&gt;$&#123;brand.id&#125;&lt;/td&gt;--%&gt;</span><br><span class=\"line\">            &lt;td&gt;$&#123;status.count&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;$&#123;brand.brandName&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;$&#123;brand.companyName&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;$&#123;brand.ordered&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;$&#123;brand.description&#125;&lt;/td&gt;</span><br><span class=\"line\">            &lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;brand.status == 1&#125;&quot;</span>&gt;</span><br><span class=\"line\">                &lt;td&gt;启用&lt;/td&gt;</span><br><span class=\"line\">            &lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">            &lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;brand.status != 1&#125;&quot;</span>&gt;</span><br><span class=\"line\">                &lt;td&gt;禁用&lt;/td&gt;</span><br><span class=\"line\">            &lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">            &lt;td&gt;&lt;a href=<span class=\"string\">&quot;/brand-demo/selectByIdServlet?id=$&#123;brand.id&#125;&quot;</span>&gt;修改&lt;/a&gt; &lt;a href=<span class=\"string\">&quot;#&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">    &lt;/c:forEach&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"826-测试\"><a class=\"markdownIt-Anchor\" href=\"#826-测试\">#</a> 8.2.6  测试</h4>\n<p>启动服务器，并在浏览器输入  <code>http://localhost:8080/brand-demo/index.html</code> ，看到如下  <code>查询所有</code>  的超链接，点击该链接就可以查询出所有的品牌数据</p>\n<p><img data-src=\"assets/image-20210818182952394.png\" alt=\"image-20210818182952394\"></p>\n<p>为什么出现这个问题呢？是因为查询到的字段名和实体类对象的属性名没有一一对应。相比看到这大家一定会解决了，就是在映射配置文件中使用  <code>resultMap</code>  标签定义映射关系。映射配置文件内容如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.itheima.mapper.BrandMapper&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;brandResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;brand&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;brand_name&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;brandName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;company_name&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;companyName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>并且在  <code>BrandMapper</code>  接口中的  <code>selectAll()</code>  上使用  <code>@ResuleMap</code>  注解指定使用该映射</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 查询所有</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"meta\">@Select(&quot;select * from tb_brand&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ResultMap(&quot;brandResultMap&quot;)</span></span><br><span class=\"line\">List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure>\n<p>重启服务器，再次访问就能看到我们想要的数据了</p>\n<p><img data-src=\"assets/image-20210819190221889.png\" alt=\"image-20210819190221889\"></p>\n<h3 id=\"83-添加\"><a class=\"markdownIt-Anchor\" href=\"#83-添加\">#</a> 8.3  添加</h3>\n<p><img data-src=\"assets/image-20210819192049571.png\" alt=\"image-20210819192049571\"></p>\n<p>上图是做 添加 功能流程。点击  <code>新增</code>  按钮后，会先跳转到  <code>addBrand.jsp</code>  新增页面，在该页面输入要添加的数据，输入完毕后点击  <code>提交</code>  按钮，需要将数据提交到后端，而后端进行数据添加操作，并重新将所有的数据查询出来。整个流程如下：</p>\n<p><img data-src=\"assets/image-20210819192737982.png\" alt=\"image-20210819192737982\"></p>\n<p>接下来我们根据流程来实现功能：</p>\n<h4 id=\"831-编写brandmapper方法\"><a class=\"markdownIt-Anchor\" href=\"#831-编写brandmapper方法\">#</a> 8.3.1  编写 BrandMapper 方法</h4>\n<p>在  <code>BrandMapper</code>  接口，在接口中定义  <code>add(Brand brand)</code>  方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Insert(&quot;insert into tb_brand values(null,#&#123;brandName&#125;,#&#123;companyName&#125;,#&#123;ordered&#125;,#&#123;description&#125;,#&#123;status&#125;)&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"832-编写brandservice方法\"><a class=\"markdownIt-Anchor\" href=\"#832-编写brandservice方法\">#</a> 8.3.2  编写 BrandService 方法</h4>\n<p>在  <code>BrandService</code>  类中定义添加品牌数据方法  <code>add(Brand brand)</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 添加</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> brand</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(Brand brand)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//2. 获取SqlSession</span></span><br><span class=\"line\">      <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">      <span class=\"comment\">//3. 获取BrandMapper</span></span><br><span class=\"line\">      <span class=\"type\">BrandMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//4. 调用方法</span></span><br><span class=\"line\">      mapper.add(brand);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//提交事务</span></span><br><span class=\"line\">      sqlSession.commit();</span><br><span class=\"line\">      <span class=\"comment\">//释放资源</span></span><br><span class=\"line\">      sqlSession.close();</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"833-改进brandjsp页面\"><a class=\"markdownIt-Anchor\" href=\"#833-改进brandjsp页面\">#</a> 8.3.3  改进 brand.jsp 页面</h4>\n<p>我们需要在该页面表格的上面添加  <code>新增</code>  按钮</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;新增&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;add&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>并给该按钮绑定单击事件，当点击了该按钮需要跳转到  <code>brand.jsp</code>  添加品牌数据的页面</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;add&quot;</span>).<span class=\"property\">onclick</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        location.<span class=\"property\">href</span> = <span class=\"string\">&quot;/brand-demo/addBrand.jsp&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>== 注意：== 该  <code>script</code>  标签建议放在  <code>body</code>  结束标签前面。</p>\n</blockquote>\n<h4 id=\"834-编写addbrandjsp页面\"><a class=\"markdownIt-Anchor\" href=\"#834-编写addbrandjsp页面\">#</a> 8.3.4  编写 addBrand.jsp 页面</h4>\n<p>从资料  <code>资料\\2. 品牌增删改查案例\\静态页面</code>  中将  <code>addBrand.html</code>  页面拷贝到项目的  <code>webapp</code>  下，并改成  <code>addBrand.jsp</code>  动态页面</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;添加品牌&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h3&gt;添加品牌&lt;/h3&gt;</span><br><span class=\"line\">&lt;form action=<span class=\"string\">&quot;/brand-demo/addServlet&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\">    品牌名称：&lt;input name=<span class=\"string\">&quot;brandName&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">    企业名称：&lt;input name=<span class=\"string\">&quot;companyName&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">    排序：&lt;input name=<span class=\"string\">&quot;ordered&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">    描述信息：&lt;textarea rows=<span class=\"string\">&quot;5&quot;</span> cols=<span class=\"string\">&quot;20&quot;</span> name=<span class=\"string\">&quot;description&quot;</span>&gt;&lt;/textarea&gt;&lt;br&gt;</span><br><span class=\"line\">    状态：</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;0&quot;</span>&gt;禁用</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;1&quot;</span>&gt;启用&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"835-编写servlet\"><a class=\"markdownIt-Anchor\" href=\"#835-编写servlet\">#</a> 8.3.5  编写 servlet</h4>\n<p>在  <code>web</code>  包下创建  <code>AddServlet</code>  的  <code>servlet</code> ，该  <code>servlet</code>  的逻辑如下:</p>\n<ul>\n<li>设置处理 post 请求乱码的字符集</li>\n<li>接收客户端提交的数据</li>\n<li>将接收到的数据封装到  <code>Brand</code>  对象中</li>\n<li>调用  <code>BrandService</code>  的 <code>add()</code>  方法进行添加的业务逻辑处理</li>\n<li>跳转到  <code>selectAllServlet</code>  资源重新查询数据</li>\n</ul>\n<p>具体的代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/addServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AddServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">BrandService</span> <span class=\"variable\">service</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BrandService</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//处理POST请求的乱码问题</span></span><br><span class=\"line\">        request.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1. 接收表单提交的数据，封装为一个Brand对象</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">brandName</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;brandName&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">companyName</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;companyName&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">ordered</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;ordered&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">description</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;description&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">status</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;status&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//封装为一个Brand对象</span></span><br><span class=\"line\">        <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>();</span><br><span class=\"line\">        brand.setBrandName(brandName);</span><br><span class=\"line\">        brand.setCompanyName(companyName);</span><br><span class=\"line\">        brand.setOrdered(Integer.parseInt(ordered));</span><br><span class=\"line\">        brand.setDescription(description);</span><br><span class=\"line\">        brand.setStatus(Integer.parseInt(status));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 调用service 完成添加</span></span><br><span class=\"line\">        service.add(brand);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3. 转发到查询所有Servlet</span></span><br><span class=\"line\">        request.getRequestDispatcher(<span class=\"string\">&quot;/selectAllServlet&quot;</span>).forward(request,response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"836-测试\"><a class=\"markdownIt-Anchor\" href=\"#836-测试\">#</a> 8.3.6  测试</h4>\n<p>点击  <code>brand.jsp</code>  页面的  <code>新增</code>  按钮，会跳转到  <code>addBrand.jsp</code>  页面</p>\n<img data-src=\"assets/image-20210819220701121.png\" alt=\"image-20210819220701121\" style=\"zoom:70%;\" />\n<p>点击  <code>提交</code>  按钮，就能看到如下页面，里面就包含我们刚添加的数据</p>\n<p><img data-src=\"assets/image-20210819220738074.png\" alt=\"image-20210819220738074\"></p>\n<h3 id=\"84-修改\"><a class=\"markdownIt-Anchor\" href=\"#84-修改\">#</a> 8.4  修改</h3>\n<p><img data-src=\"assets/image-20210819223202473.png\" alt=\"image-20210819223202473\"></p>\n<p>点击每条数据后面的  <code>编辑</code>  按钮会跳转到修改页面，如下图：</p>\n<p><img data-src=\"assets/image-20210819223314230.png\" alt=\"image-20210819223314230\"></p>\n<p>在该修改页面我们可以看到将  <code>编辑</code>  按钮所在行的数据 <mark>回显</mark> 到表单，然后需要修改那个数据在表单中进行修改，然后点击  <code>提交</code>  的按钮将数据提交到后端，后端再将数据存储到数据库中。</p>\n<p>从上面的例子我们知道  <code>修改</code>  功能需要从两方面进行实现，数据回显和修改操作。</p>\n<h4 id=\"841-回显数据\"><a class=\"markdownIt-Anchor\" href=\"#841-回显数据\">#</a> 8.4.1  回显数据</h4>\n<p><img data-src=\"assets/image-20210819223830713.png\" alt=\"image-20210819223830713\"></p>\n<p>上图就是回显数据的效果。要实现这个效果，那当点击  <code>修改</code>  按钮时不能直接跳转到  <code>update.jsp</code>  页面，而是需要先带着当前行数据的  <code>id</code>  请求后端程序，后端程序根据  <code>id</code>  查询数据，将数据存储到域对象中跳转到  <code>update.jsp</code>  页面进行数据展示。整体流程如下</p>\n<img data-src=\"assets/image-20210819224243778.png\" alt=\"image-20210819224243778\" style=\"zoom:70%;\" />\n<h5 id=\"8411-编写brandmapper方法\"><a class=\"markdownIt-Anchor\" href=\"#8411-编写brandmapper方法\">#</a> 8.4.1.1  编写 BrandMapper 方法</h5>\n<p>在  <code>BrandMapper</code>  接口，在接口中定义  <code>selectById(int id)</code>  方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 根据id查询</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@param</span> id</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"meta\">@Select(&quot;select * from tb_brand where id = #&#123;id&#125;&quot;)</span></span><br><span class=\"line\">   <span class=\"meta\">@ResultMap(&quot;brandResultMap&quot;)</span></span><br><span class=\"line\">   Brand <span class=\"title function_\">selectById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br></pre></td></tr></table></figure>\n<h5 id=\"8412-编写brandservice方法\"><a class=\"markdownIt-Anchor\" href=\"#8412-编写brandservice方法\">#</a> 8.4.1.2  编写 BrandService 方法</h5>\n<p>在  <code>BrandService</code>  类中定义根据 id 查询数据方法  <code>selectById(int id)</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 根据id查询</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Brand <span class=\"title function_\">selectById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//调用BrandMapper.selectAll()</span></span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//3. 获取BrandMapper</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\">    <span class=\"comment\">//4. 调用方法</span></span><br><span class=\"line\">    <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> mapper.selectById(id);</span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> brand;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"8413-编写servlet\"><a class=\"markdownIt-Anchor\" href=\"#8413-编写servlet\">#</a> 8.4.1.3  编写 servlet</h5>\n<p>在  <code>web</code>  包下创建  <code>SelectByIdServlet</code>  的  <code>servlet</code> ，该  <code>servlet</code>  的逻辑如下:</p>\n<ul>\n<li>获取请求数据  <code>id</code></li>\n<li>调用  <code>BrandService</code>  的  <code>selectById()</code>  方法进行数据查询的业务逻辑</li>\n<li>将查询到的数据存储到 request 域对象中</li>\n<li>跳转到  <code>update.jsp</code>  页面进行数据真实</li>\n</ul>\n<p>具体代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/selectByIdServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SelectByIdServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  <span class=\"type\">BrandService</span> <span class=\"variable\">service</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BrandService</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 接收id</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//2. 调用service查询</span></span><br><span class=\"line\">        <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> service.selectById(Integer.parseInt(id));</span><br><span class=\"line\">        <span class=\"comment\">//3. 存储到request中</span></span><br><span class=\"line\">        request.setAttribute(<span class=\"string\">&quot;brand&quot;</span>,brand);</span><br><span class=\"line\">        <span class=\"comment\">//4. 转发到update.jsp</span></span><br><span class=\"line\">        request.getRequestDispatcher(<span class=\"string\">&quot;/update.jsp&quot;</span>).forward(request,response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"8414-编写updatejsp页面\"><a class=\"markdownIt-Anchor\" href=\"#8414-编写updatejsp页面\">#</a> 8.4.1.4  编写 update.jsp 页面</h5>\n<p>拷贝  <code>addBrand.jsp</code>  页面，改名为  <code>update.jsp</code>  并做出以下修改：</p>\n<ul>\n<li>\n<p><code>title</code>  标签内容改为  <code>修改品牌</code></p>\n</li>\n<li>\n<p><code>form</code>  标签的  <code>action</code>  属性值改为  <code>/brand-demo/updateServlet</code></p>\n</li>\n<li>\n<p><code>input</code>  标签要进行数据回显，需要设置  <code>value</code>  属性</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">品牌名称：&lt;input name=<span class=\"string\">&quot;brandName&quot;</span> value=<span class=\"string\">&quot;$&#123;brand.brandName&#125;&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">企业名称：&lt;input name=<span class=\"string\">&quot;companyName&quot;</span> value=<span class=\"string\">&quot;$&#123;brand.companyName&#125;&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">排序：&lt;input name=<span class=\"string\">&quot;ordered&quot;</span> value=<span class=\"string\">&quot;$&#123;brand.ordered&#125;&quot;</span>&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>textarea</code>  标签要进行数据回显，需要在标签体中使用  <code>EL表达式</code></p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">描述信息：&lt;textarea rows=<span class=\"string\">&quot;5&quot;</span> cols=<span class=\"string\">&quot;20&quot;</span> name=<span class=\"string\">&quot;description&quot;</span>&gt;$&#123;brand.description&#125; &lt;/textarea&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>单选框使用  <code>if</code>  标签需要判断  <code>brand.status</code>  的值是 1 还是 0 在指定的单选框上使用  <code>checked</code>  属性，表示被选中状态</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">状态：</span><br><span class=\"line\">&lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;brand.status == 0&#125;&quot;</span>&gt;</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;0&quot;</span> checked&gt;禁用</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;1&quot;</span>&gt;启用&lt;br&gt;</span><br><span class=\"line\">&lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;brand.status == 1&#125;&quot;</span>&gt;</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;0&quot;</span> &gt;禁用</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;1&quot;</span> checked&gt;启用&lt;br&gt;</span><br><span class=\"line\">&lt;/c:<span class=\"keyword\">if</span>&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>综上， <code>update.jsp</code>  代码如下：</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ taglib prefix=<span class=\"string\">&quot;c&quot;</span> uri=<span class=\"string\">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;修改品牌&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h3&gt;修改品牌&lt;/h3&gt;</span><br><span class=\"line\">&lt;form action=<span class=\"string\">&quot;/brand-demo/updateServlet&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    品牌名称：&lt;input name=<span class=\"string\">&quot;brandName&quot;</span> value=<span class=\"string\">&quot;$&#123;brand.brandName&#125;&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">    企业名称：&lt;input name=<span class=\"string\">&quot;companyName&quot;</span> value=<span class=\"string\">&quot;$&#123;brand.companyName&#125;&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">    排序：&lt;input name=<span class=\"string\">&quot;ordered&quot;</span> value=<span class=\"string\">&quot;$&#123;brand.ordered&#125;&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">    描述信息：&lt;textarea rows=<span class=\"string\">&quot;5&quot;</span> cols=<span class=\"string\">&quot;20&quot;</span> name=<span class=\"string\">&quot;description&quot;</span>&gt;$&#123;brand.description&#125; &lt;/textarea&gt;&lt;br&gt;</span><br><span class=\"line\">    状态：</span><br><span class=\"line\">    &lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;brand.status == 0&#125;&quot;</span>&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;0&quot;</span> checked&gt;禁用</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;1&quot;</span>&gt;启用&lt;br&gt;</span><br><span class=\"line\">    &lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;brand.status == 1&#125;&quot;</span>&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;0&quot;</span> &gt;禁用</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;1&quot;</span> checked&gt;启用&lt;br&gt;</span><br><span class=\"line\">    &lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"842-修改数据\"><a class=\"markdownIt-Anchor\" href=\"#842-修改数据\">#</a> 8.4.2  修改数据</h4>\n<p>做完回显数据后，接下来我们要做修改数据了，而下图是修改数据的效果：</p>\n<p><img data-src=\"assets/image-20210819225948187.png\" alt=\"image-20210819225948187\"></p>\n<p>在修改页面进行数据修改，点击  <code>提交</code>  按钮，会将数据提交到后端程序，后端程序会对表中的数据进行修改操作，然后重新进行数据的查询操作。整体流程如下：</p>\n<img data-src=\"assets/image-20210819230242938.png\" alt=\"image-20210819230242938\" style=\"zoom:70%;\" />\n<h5 id=\"8421-编写brandmapper方法\"><a class=\"markdownIt-Anchor\" href=\"#8421-编写brandmapper方法\">#</a> 8.4.2.1  编写 BrandMapper 方法</h5>\n<p>在  <code>BrandMapper</code>  接口，在接口中定义  <code>update(Brand brand)</code>  方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 修改</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span> brand</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"meta\">@Update(&quot;update tb_brand set brand_name = #&#123;brandName&#125;,company_name = #&#123;companyName&#125;,ordered = #&#123;ordered&#125;,description = #&#123;description&#125;,status = #&#123;status&#125; where id = #&#123;id&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">update</span><span class=\"params\">(Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n<h5 id=\"8422-编写brandservice方法\"><a class=\"markdownIt-Anchor\" href=\"#8422-编写brandservice方法\">#</a> 8.4.2.2  编写 BrandService 方法</h5>\n<p>在  <code>BrandService</code>  类中定义根据 id 查询数据方法  <code>update(Brand brand)</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 修改</span></span><br><span class=\"line\"><span class=\"comment\">    * <span class=\"doctag\">@param</span> brand</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">update</span><span class=\"params\">(Brand brand)</span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">//2. 获取SqlSession</span></span><br><span class=\"line\">       <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">       <span class=\"comment\">//3. 获取BrandMapper</span></span><br><span class=\"line\">       <span class=\"type\">BrandMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\">       <span class=\"comment\">//4. 调用方法</span></span><br><span class=\"line\">       mapper.update(brand);</span><br><span class=\"line\">       <span class=\"comment\">//提交事务</span></span><br><span class=\"line\">       sqlSession.commit();</span><br><span class=\"line\">       <span class=\"comment\">//释放资源</span></span><br><span class=\"line\">       sqlSession.close();</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"8423-编写servlet\"><a class=\"markdownIt-Anchor\" href=\"#8423-编写servlet\">#</a> 8.4.2.3  编写 servlet</h5>\n<p>在  <code>web</code>  包下创建  <code>AddServlet</code>  的  <code>servlet</code> ，该  <code>servlet</code>  的逻辑如下:</p>\n<ul>\n<li>设置处理 post 请求乱码的字符集</li>\n<li>接收客户端提交的数据</li>\n<li>将接收到的数据封装到  <code>Brand</code>  对象中</li>\n<li>调用  <code>BrandService</code>  的 <code>update()</code>  方法进行添加的业务逻辑处理</li>\n<li>跳转到  <code>selectAllServlet</code>  资源重新查询数据</li>\n</ul>\n<p>具体的代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/updateServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UpdateServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">BrandService</span> <span class=\"variable\">service</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BrandService</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//处理POST请求的乱码问题</span></span><br><span class=\"line\">        request.setCharacterEncoding(<span class=\"string\">&quot;utf-8&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//1. 接收表单提交的数据，封装为一个Brand对象</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">brandName</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;brandName&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">companyName</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;companyName&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">ordered</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;ordered&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">description</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;description&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">status</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;status&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//封装为一个Brand对象</span></span><br><span class=\"line\">        <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>();</span><br><span class=\"line\">        brand.setId(Integer.parseInt(id));</span><br><span class=\"line\">        brand.setBrandName(brandName);</span><br><span class=\"line\">        brand.setCompanyName(companyName);</span><br><span class=\"line\">        brand.setOrdered(Integer.parseInt(ordered));</span><br><span class=\"line\">        brand.setDescription(description);</span><br><span class=\"line\">        brand.setStatus(Integer.parseInt(status));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 调用service 完成修改</span></span><br><span class=\"line\">        service.update(brand);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3. 转发到查询所有Servlet</span></span><br><span class=\"line\">        request.getRequestDispatcher(<span class=\"string\">&quot;/selectAllServlet&quot;</span>).forward(request,response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><mark>存在问题：update.jsp 页面提交数据时是没有携带主键数据的，而后台修改数据需要根据主键进行修改。</mark></p>\n<p>针对这个问题，我们不希望页面将主键 id 展示给用户看，但是又希望在提交数据时能将主键 id 提交到后端。此时我们就想到了在学习 HTML 时学习的隐藏域，在  <code>update.jsp</code>  页面的表单中添加如下代码：</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%--隐藏域，提交id--%&gt;</span><br><span class=\"line\">&lt;input type=<span class=\"string\">&quot;hidden&quot;</span> name=<span class=\"string\">&quot;id&quot;</span> value=<span class=\"string\">&quot;$&#123;brand.id&#125;&quot;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p><code>update.jsp</code>  页面的最终代码如下：</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%@ taglib prefix=<span class=\"string\">&quot;c&quot;</span> uri=<span class=\"string\">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;修改品牌&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h3&gt;修改品牌&lt;/h3&gt;</span><br><span class=\"line\">&lt;form action=<span class=\"string\">&quot;/brand-demo/updateServlet&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;%--隐藏域，提交id--%&gt;</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;hidden&quot;</span> name=<span class=\"string\">&quot;id&quot;</span> value=<span class=\"string\">&quot;$&#123;brand.id&#125;&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    品牌名称：&lt;input name=<span class=\"string\">&quot;brandName&quot;</span> value=<span class=\"string\">&quot;$&#123;brand.brandName&#125;&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">    企业名称：&lt;input name=<span class=\"string\">&quot;companyName&quot;</span> value=<span class=\"string\">&quot;$&#123;brand.companyName&#125;&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">    排序：&lt;input name=<span class=\"string\">&quot;ordered&quot;</span> value=<span class=\"string\">&quot;$&#123;brand.ordered&#125;&quot;</span>&gt;&lt;br&gt;</span><br><span class=\"line\">    描述信息：&lt;textarea rows=<span class=\"string\">&quot;5&quot;</span> cols=<span class=\"string\">&quot;20&quot;</span> name=<span class=\"string\">&quot;description&quot;</span>&gt;$&#123;brand.description&#125; &lt;/textarea&gt;&lt;br&gt;</span><br><span class=\"line\">    状态：</span><br><span class=\"line\">    &lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;brand.status == 0&#125;&quot;</span>&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;0&quot;</span> checked&gt;禁用</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;1&quot;</span>&gt;启用&lt;br&gt;</span><br><span class=\"line\">    &lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;$&#123;brand.status == 1&#125;&quot;</span>&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;0&quot;</span> &gt;禁用</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;radio&quot;</span> name=<span class=\"string\">&quot;status&quot;</span> value=<span class=\"string\">&quot;1&quot;</span> checked&gt;启用&lt;br&gt;</span><br><span class=\"line\">    &lt;/c:<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">    &lt;input type=<span class=\"string\">&quot;submit&quot;</span> value=<span class=\"string\">&quot;提交&quot;</span>&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/Mybatis/",
            "url": "http://example.com/Mybatis/",
            "title": "Mybatis",
            "date_published": "2022-12-15T03:52:14.000Z",
            "content_html": "<h2 id=\"mybatis\"><a class=\"markdownIt-Anchor\" href=\"#mybatis\">#</a> Mybatis</h2>\n<p><strong>目标</strong></p>\n<blockquote>\n<ul>\n<li>能够使用映射配置文件实现 CRUD 操作</li>\n<li>能够使用注解实现 CRUD 操作</li>\n</ul>\n</blockquote>\n<h2 id=\"1配置文件实现crud\"><a class=\"markdownIt-Anchor\" href=\"#1配置文件实现crud\">#</a> 1，配置文件实现 CRUD</h2>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729111159534.png\" alt=\"image-20210729111159534\"></p>\n<p>如上图所示产品原型，里面包含了品牌数据的  <code>查询</code>  、 <code>按条件查询</code> 、 <code>添加</code> 、 <code>删除</code> 、 <code>批量删除</code> 、 <code>修改</code>  等功能，而这些功能其实就是对数据库表中的数据进行 CRUD 操作。接下来我们就使用 Mybatis 完成品牌数据的增删改查操作。以下是我们要完成功能列表：</p>\n<blockquote>\n<ul>\n<li>查询\n<ul>\n<li>查询所有数据</li>\n<li>查询详情</li>\n<li>条件查询</li>\n</ul>\n</li>\n<li>添加</li>\n<li>修改\n<ul>\n<li>修改全部字段</li>\n<li>修改动态字段</li>\n</ul>\n</li>\n<li>删除\n<ul>\n<li>删除一个</li>\n<li>批量删除</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>我们先将必要的环境准备一下。</p>\n<h3 id=\"11-环境准备\"><a class=\"markdownIt-Anchor\" href=\"#11-环境准备\">#</a> 1.1  环境准备</h3>\n<ul>\n<li>\n<p>数据库表（tb_brand）及数据准备</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 删除tb_brand表</span></span><br><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> if <span class=\"keyword\">exists</span> tb_brand;</span><br><span class=\"line\"><span class=\"comment\">-- 创建tb_brand表</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> tb_brand</span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"comment\">-- id 主键</span></span><br><span class=\"line\">    id           <span class=\"type\">int</span> <span class=\"keyword\">primary</span> key auto_increment,</span><br><span class=\"line\">    <span class=\"comment\">-- 品牌名称</span></span><br><span class=\"line\">    brand_name   <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 企业名称</span></span><br><span class=\"line\">    company_name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 排序字段</span></span><br><span class=\"line\">    ordered      <span class=\"type\">int</span>,</span><br><span class=\"line\">    <span class=\"comment\">-- 描述信息</span></span><br><span class=\"line\">    description  <span class=\"type\">varchar</span>(<span class=\"number\">100</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 状态：0：禁用  1：启用</span></span><br><span class=\"line\">    status       <span class=\"type\">int</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">-- 添加数据</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> tb_brand (brand_name, company_name, ordered, description, status)</span><br><span class=\"line\"><span class=\"keyword\">values</span> (<span class=\"string\">&#x27;三只松鼠&#x27;</span>, <span class=\"string\">&#x27;三只松鼠股份有限公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;好吃不上火&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;华为致力于把数字世界带入每个人、每个家庭、每个组织，构建万物互联的智能世界&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>实体类 Brand</p>\n<p>在  <code>com.itheima.pojo</code>  包下创建 Brand 实体类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Brand</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// id 主键</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"comment\">// 品牌名称</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String brandName;</span><br><span class=\"line\">    <span class=\"comment\">// 企业名称</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String companyName;</span><br><span class=\"line\">    <span class=\"comment\">// 排序字段</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer ordered;</span><br><span class=\"line\">    <span class=\"comment\">// 描述信息</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\">    <span class=\"comment\">// 状态：0：禁用  1：启用</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer status;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//省略 setter and getter。自己写时要补全这部分代码</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>编写测试用例</p>\n<p>测试代码需要在  <code>test/java</code>  目录下创建包及测试用例。项目结构如下：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729112907106.png\" alt=\"image-20210729112907106\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>安装 MyBatisX 插件</p>\n<ul>\n<li>\n<p>MybatisX 是一款基于 IDEA 的快速开发插件，为效率而生。</p>\n</li>\n<li>\n<p>主要功能</p>\n<ul>\n<li>XML 映射配置文件 和 接口方法 间相互跳转</li>\n<li>根据接口方法生成 statement</li>\n</ul>\n</li>\n<li>\n<p>安装方式</p>\n<p>点击  <code>file</code>  ，选择  <code>settings</code>  ，就能看到如下图所示界面</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729113304743.png\" alt=\"image-20210729113304743\" style=\"zoom:80%;\" />\n<blockquote>\n<p>注意：安装完毕后需要重启 IDEA</p>\n</blockquote>\n</li>\n<li>\n<p>插件效果</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729164450524.png\" alt=\"image-20210729164450524\" style=\"zoom:70%;\" />\n<p>红色头绳的表示映射配置文件，蓝色头绳的表示 mapper 接口。在 mapper 接口点击红色头绳的小鸟图标会自动跳转到对应的映射配置文件，在映射配置文件中点击蓝色头绳的小鸟图标会自动跳转到对应的 mapper 接口。也可以在 mapper 接口中定义方法，自动生成映射配置文件中的  <code>statement</code>  ，如图所示</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729165337223.png\" alt=\"image-20210729165337223\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"12-查询所有数据\"><a class=\"markdownIt-Anchor\" href=\"#12-查询所有数据\">#</a> 1.2  查询所有数据</h3>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729165724838.png\" alt=\"image-20210729165724838\" style=\"zoom:80%;\" />\n<p>如上图所示就页面上展示的数据，而这些数据需要从数据库进行查询。接下来我们就来讲查询所有数据功能，而实现该功能我们分以下步骤进行实现：</p>\n<ul>\n<li>\n<p>编写接口方法：Mapper 接口</p>\n<ul>\n<li>\n<p>参数：无</p>\n<p>查询所有数据功能是不需要根据任何条件进行查询的，所以此方法不需要参数。</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729171208737.png\" alt=\"image-20210729171208737\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>结果：List<Brand></p>\n<p>我们会将查询出来的每一条数据封装成一个  <code>Brand</code>  对象，而多条数据封装多个  <code>Brand</code>  对象，需要将这些对象封装到 List 集合中返回。</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729171146911.png\" alt=\"image-20210729171146911\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>执行方法、测试</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"121-编写接口方法\"><a class=\"markdownIt-Anchor\" href=\"#121-编写接口方法\">#</a> 1.2.1  编写接口方法</h4>\n<p>在  <code>com.itheima.mapper</code>  包写创建名为  <code>BrandMapper</code>  的接口。并在该接口中定义  <code>List&lt;Brand&gt; selectAll()</code>  方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BrandMapper</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询所有</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"122-编写sql语句\"><a class=\"markdownIt-Anchor\" href=\"#122-编写sql语句\">#</a> 1.2.2  编写 SQL 语句</h4>\n<p>在  <code>reources</code>  下创建  <code>com/itheima/mapper</code>  目录结构，并在该目录下创建名为  <code>BrandMapper.xml</code>  的映射配置文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.itheima.mapper.BrandMapper&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectAll&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;brand&quot;</span>&gt;</span></span><br><span class=\"line\">        select *</span><br><span class=\"line\">        from tb_brand;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"123-编写测试方法\"><a class=\"markdownIt-Anchor\" href=\"#123-编写测试方法\">#</a> 1.2.3  编写测试方法</h4>\n<p>在  <code>MybatisTest</code>  类中编写测试查询所有的方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testSelectAll</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1. 获取SqlSessionFactory</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">sqlSessionFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> sqlSessionFactory.openSession();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//3. 获取Mapper接口的代理对象</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">brandMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4. 执行方法</span></span><br><span class=\"line\">    List&lt;Brand&gt; brands = brandMapper.selectAll();</span><br><span class=\"line\">    System.out.println(brands);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：现在我们感觉测试这部分代码写起来特别麻烦，我们可以先忍忍。以后我们只会写上面的第 3 步的代码，其他的都不需要我们来完成。</p>\n</blockquote>\n<p>执行测试方法结果如下：</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729172544230.png\" alt=\"image-20210729172544230\"></p>\n<p>从上面结果我们看到了问题，有些数据封装成功了，而有些数据并没有封装成功。为什么这样呢？</p>\n<p>这个问题可以通过两种方式进行解决：</p>\n<ul>\n<li>给字段起别名</li>\n<li>使用 resultMap 定义字段和属性的映射关系</li>\n</ul>\n<h4 id=\"124-起别名解决上述问题\"><a class=\"markdownIt-Anchor\" href=\"#124-起别名解决上述问题\">#</a> 1.2.4  起别名解决上述问题</h4>\n<p>从上面结果可以看到  <code>brandName</code>  和  <code>companyName</code>  这两个属性的数据没有封装成功，查询 实体类 和 表中的字段 发现，在实体类中属性名是  <code>brandName</code>  和  <code>companyName</code>  ，而表中的字段名为  <code>brand_name</code>  和  <code>company_name</code> ，如下图所示 。那么我们只需要保持这两部分的名称一致这个问题就迎刃而解。</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729173210433.png\" alt=\"image-20210729173210433\" style=\"zoom:80%;\" />\n<p>我们可以在写 sql 语句时给这两个字段起别名，将别名定义成和属性名一致即可。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectAll&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;brand&quot;</span>&gt;</span></span><br><span class=\"line\">    select</span><br><span class=\"line\">    id, brand_name as brandName, company_name as companyName, ordered, description, status</span><br><span class=\"line\">    from tb_brand;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>而上面的 SQL 语句中的字段列表书写麻烦，如果表中还有更多的字段，同时其他的功能也需要查询这些字段时就显得我们的代码不够精炼。Mybatis 提供了 <code>sql</code>  片段可以提高 sql 的复用性。</p>\n<p><strong>SQL 片段：</strong></p>\n<ul>\n<li>\n<p>将需要复用的 SQL 片段抽取到  <code>sql</code>  标签中</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">sql</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;brand_column&quot;</span>&gt;</span></span><br><span class=\"line\">\tid, brand_name as brandName, company_name as companyName, ordered, description, status</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">sql</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>id 属性值是唯一标识，引用时也是通过该值进行引用。</p>\n</li>\n<li>\n<p>在原 sql 语句中进行引用</p>\n<p>使用  <code>include</code>  标签引用上述的 SQL 片段，而  <code>refid</code>  指定上述 SQL 片段的 id 值。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectAll&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;brand&quot;</span>&gt;</span></span><br><span class=\"line\">    select</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">&quot;brand_column&quot;</span> /&gt;</span></span><br><span class=\"line\">    from tb_brand;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"125-使用resultmap解决上述问题\"><a class=\"markdownIt-Anchor\" href=\"#125-使用resultmap解决上述问题\">#</a> 1.2.5  使用 resultMap 解决上述问题</h4>\n<p>起别名 + sql 片段的方式可以解决上述问题，但是它也存在问题。如果还有功能只需要查询部分字段，而不是查询所有字段，那么我们就需要再定义一个 SQL 片段，这就显得不是那么灵活。</p>\n<p>那么我们也可以使用 resultMap 来定义字段和属性的映射关系的方式解决上述问题。</p>\n<ul>\n<li>\n<p>在映射配置文件中使用 resultMap 定义 字段 和 属性 的映射关系</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;brandResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;brand&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            id：完成主键字段的映射</span></span><br><span class=\"line\"><span class=\"comment\">                column：表的列名</span></span><br><span class=\"line\"><span class=\"comment\">                property：实体类的属性名</span></span><br><span class=\"line\"><span class=\"comment\">            result：完成一般字段的映射</span></span><br><span class=\"line\"><span class=\"comment\">                column：表的列名</span></span><br><span class=\"line\"><span class=\"comment\">                property：实体类的属性名</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;brand_name&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;brandName&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;company_name&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;companyName&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：在上面只需要定义 字段名 和 属性名 不一样的映射，而一样的则不需要专门定义出来。</p>\n</blockquote>\n</li>\n<li>\n<p>SQL 语句正常编写</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectAll&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;brandResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from tb_brand;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"126-小结\"><a class=\"markdownIt-Anchor\" href=\"#126-小结\">#</a> 1.2.6  小结</h4>\n<p>实体类属性名 和 数据库表列名 不一致，不能自动封装数据</p>\n<ul>\n<li>== 起别名：== 在 SQL 语句中，对不一样的列名起别名，别名和实体类属性名一样\n<ul>\n<li>可以定义 <sql>片段，提升复用性</li>\n</ul>\n</li>\n<li>==resultMap：== 定义<resultMap> 完成不一致的属性名和列名的映射</li>\n</ul>\n<p>而我们最终选择使用 resultMap 的方式。查询映射配置文件中查询所有的 statement 书写如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;brandResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;brand&quot;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            id：完成主键字段的映射</span></span><br><span class=\"line\"><span class=\"comment\">                column：表的列名</span></span><br><span class=\"line\"><span class=\"comment\">                property：实体类的属性名</span></span><br><span class=\"line\"><span class=\"comment\">            result：完成一般字段的映射</span></span><br><span class=\"line\"><span class=\"comment\">                column：表的列名</span></span><br><span class=\"line\"><span class=\"comment\">                property：实体类的属性名</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;brand_name&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;brandName&quot;</span>/&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;company_name&quot;</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;companyName&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectAll&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;brandResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from tb_brand;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"13-查询详情\"><a class=\"markdownIt-Anchor\" href=\"#13-查询详情\">#</a> 1.3  查询详情</h3>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729180118287.png\" alt=\"image-20210729180118287\" style=\"zoom:80%;\" />\n<p>有些数据的属性比较多，在页面表格中无法全部实现，而只会显示部分，而其他属性数据的查询可以通过  <code>查看详情</code>  来进行查询，如上图所示。</p>\n<p>查看详情功能实现步骤：</p>\n<ul>\n<li>\n<p>编写接口方法：Mapper 接口</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729180604529.png\" alt=\"image-20210729180604529\" style=\"zoom:80%;\" />\n<ul>\n<li>\n<p>参数：id</p>\n<p>查看详情就是查询某一行数据，所以需要根据 id 进行查询。而 id 以后是由页面传递过来。</p>\n</li>\n<li>\n<p>结果：Brand</p>\n<p>根据 id 查询出来的数据只要一条，而将一条数据封装成一个 Brand 对象即可</p>\n</li>\n</ul>\n</li>\n<li>\n<p>编写 SQL 语句：SQL 映射文件</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729180709318.png\" alt=\"image-20210729180709318\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>执行方法、进行测试</p>\n</li>\n</ul>\n<h4 id=\"131-编写接口方法\"><a class=\"markdownIt-Anchor\" href=\"#131-编写接口方法\">#</a> 1.3.1  编写接口方法</h4>\n<p>在  <code>BrandMapper</code>  接口中定义根据 id 查询数据的方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 查看详情：根据Id查询</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">Brand <span class=\"title function_\">selectById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"132-编写sql语句\"><a class=\"markdownIt-Anchor\" href=\"#132-编写sql语句\">#</a> 1.3.2  编写 SQL 语句</h4>\n<p>在  <code>BrandMapper.xml</code>  映射配置文件中编写  <code>statement</code> ，使用  <code>resultMap</code>  而不是使用  <code>resultType</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectById&quot;</span>  <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;brandResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from tb_brand where id = #&#123;id&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：上述 SQL 中的 #{id} 先这样写，一会我们再详细讲解</p>\n</blockquote>\n<h4 id=\"133-编写测试方法\"><a class=\"markdownIt-Anchor\" href=\"#133-编写测试方法\">#</a> 1.3.3  编写测试方法</h4>\n<p>在  <code>test/java</code>  下的  <code>com.itheima.mapper</code>   包下的  <code>MybatisTest类中</code>  定义测试方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testSelectById</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//接收参数，该id以后需要传递过来</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1. 获取SqlSessionFactory</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">sqlSessionFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> sqlSessionFactory.openSession();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//3. 获取Mapper接口的代理对象</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">brandMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4. 执行方法</span></span><br><span class=\"line\">    <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> brandMapper.selectById(id);</span><br><span class=\"line\">    System.out.println(brand);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行测试方法结果如下：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729182223137.png\" alt=\"image-20210729182223137\" style=\"zoom:70%;\" />\n<h4 id=\"134-参数占位符\"><a class=\"markdownIt-Anchor\" href=\"#134-参数占位符\">#</a> 1.3.4  参数占位符</h4>\n<p>查询到的结果很好理解就是 id 为 1 的这行数据。而这里我们需要看控制台显示的 SQL 语句，能看到使用？进行占位。说明我们在映射配置文件中的写的  <code>#&#123;id&#125;</code>  最终会被？进行占位。接下来我们就聊聊映射配置文件中的参数占位符。</p>\n<p>mybatis 提供了两种参数占位符：</p>\n<ul>\n<li>\n<p>#{} ：执行 SQL 时，会将 #{} 占位符替换为？，将来自动设置参数值。从上述例子可以看出使用 #{} 底层使用的是  <code>PreparedStatement</code></p>\n</li>\n<li>\n<p>${} ：拼接 SQL。底层使用的是  <code>Statement</code> ，会存在 SQL 注入问题。如下图将 映射配置文件中的 #{} 替换成 ${} 来看效果</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectById&quot;</span>  <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;brandResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from tb_brand where id = $&#123;id&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>重新运行查看结果如下：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729184156019.png\" alt=\"image-20210729184156019\" style=\"zoom:70%;\" />\n</li>\n</ul>\n<blockquote>\n<p>== 注意：== 从上面两个例子可以看出，以后开发我们使用 #{} 参数占位符。</p>\n</blockquote>\n<h4 id=\"135-parametertype使用\"><a class=\"markdownIt-Anchor\" href=\"#135-parametertype使用\">#</a> 1.3.5  parameterType 使用</h4>\n<p>对于有参数的 mapper 接口方法，我们在映射配置文件中应该配置  <code>ParameterType</code>  来指定参数类型。只不过该属性都可以省略。如下图：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectById&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;int&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;brandResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from tb_brand where id = $&#123;id&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"136-sql语句中特殊字段处理\"><a class=\"markdownIt-Anchor\" href=\"#136-sql语句中特殊字段处理\">#</a> 1.3.6  SQL 语句中特殊字段处理</h4>\n<p>以后肯定会在 SQL 语句中写一下特殊字符，比如某一个字段大于某个值，如下图</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729184756094.png\" alt=\"image-20210729184756094\" style=\"zoom:80%;\" />\n<p>可以看出报错了，因为映射配置文件是 xml 类型的问题，而 &gt; &lt; 等这些字符在 xml 中有特殊含义，所以此时我们需要将这些符号进行转义，可以使用以下两种方式进行转义</p>\n<ul>\n<li>\n<p>转义字符</p>\n<p>下图的  <code>&amp;lt;</code>  就是  <code>&lt;</code>  的转义字符。</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729185128686.png\" alt=\"image-20210729185128686\" style=\"zoom:60%;\" />\n</li>\n<li>\n<![CDATA[内容]]>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729185030318.png\" alt=\"image-20210729185030318\" style=\"zoom:60%;\" />\n</li>\n</ul>\n<h3 id=\"14-多条件查询\"><a class=\"markdownIt-Anchor\" href=\"#14-多条件查询\">#</a> 1.4  多条件查询</h3>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729203804276.png\" alt=\"image-20210729203804276\"></p>\n<p>我们经常会遇到如上图所示的多条件查询，将多条件查询的结果展示在下方的数据列表中。而我们做这个功能需要分析最终的 SQL 语句应该是什么样，思考两个问题</p>\n<ul>\n<li>条件表达式</li>\n<li>如何连接</li>\n</ul>\n<p>条件字段  <code>企业名称</code>   和  <code>品牌名称</code>  需要进行模糊查询，所以条件应该是：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729204458815.png\" alt=\"image-20210729204458815\" style=\"zoom:70%;\" />\n<p>简单的分析后，我们来看功能实现的步骤：</p>\n<ul>\n<li>\n<p>编写接口方法</p>\n<ul>\n<li>参数：所有查询条件</li>\n<li>结果：List<Brand></li>\n</ul>\n</li>\n<li>\n<p>在映射配置文件中编写 SQL 语句</p>\n</li>\n<li>\n<p>编写测试方法并执行</p>\n</li>\n</ul>\n<h4 id=\"141-编写接口方法\"><a class=\"markdownIt-Anchor\" href=\"#141-编写接口方法\">#</a> 1.4.1  编写接口方法</h4>\n<p>在  <code>BrandMapper</code>  接口中定义多条件查询的方法。</p>\n<p>而该功能有三个参数，我们就需要考虑定义接口时，参数应该如何定义。Mybatis 针对多参数有多种实现</p>\n<ul>\n<li>\n<p>使用  <code>@Param(&quot;参数名称&quot;)</code>  标记每一个参数，在映射配置文件中就需要使用  <code>#&#123;参数名称&#125;</code>  进行占位</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;Brand&gt; <span class=\"title function_\">selectByCondition</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;status&quot;)</span> <span class=\"type\">int</span> status, <span class=\"meta\">@Param(&quot;companyName&quot;)</span> String companyName,<span class=\"meta\">@Param(&quot;brandName&quot;)</span> String brandName)</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>将多个参数封装成一个 实体对象 ，将该实体对象作为接口的方法参数。该方式要求在映射配置文件的 SQL 中使用  <code>#&#123;内容&#125;</code>  时，里面的内容必须和实体类属性名保持一致。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;Brand&gt; <span class=\"title function_\">selectByCondition</span><span class=\"params\">(Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>将多个参数封装到 map 集合中，将 map 集合作为接口的方法参数。该方式要求在映射配置文件的 SQL 中使用  <code>#&#123;内容&#125;</code>  时，里面的内容必须和 map 集合中键的名称一致。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;Brand&gt; selectByCondition(Map map);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"142-编写sql语句\"><a class=\"markdownIt-Anchor\" href=\"#142-编写sql语句\">#</a> 1.4.2  编写 SQL 语句</h4>\n<p>在  <code>BrandMapper.xml</code>  映射配置文件中编写  <code>statement</code> ，使用  <code>resultMap</code>  而不是使用  <code>resultType</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectByCondition&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;brandResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from tb_brand</span><br><span class=\"line\">    where status = #&#123;status&#125;</span><br><span class=\"line\">    and company_name like #&#123;companyName&#125;</span><br><span class=\"line\">    and brand_name like #&#123;brandName&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"143-编写测试方法\"><a class=\"markdownIt-Anchor\" href=\"#143-编写测试方法\">#</a> 1.4.3  编写测试方法</h4>\n<p>在  <code>test/java</code>  下的  <code>com.itheima.mapper</code>   包下的  <code>MybatisTest类中</code>  定义测试方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testSelectByCondition</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//接收参数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">status</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">companyName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;华为&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">brandName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;华为&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 处理参数</span></span><br><span class=\"line\">    companyName = <span class=\"string\">&quot;%&quot;</span> + companyName + <span class=\"string\">&quot;%&quot;</span>;</span><br><span class=\"line\">    brandName = <span class=\"string\">&quot;%&quot;</span> + brandName + <span class=\"string\">&quot;%&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1. 获取SqlSessionFactory</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">sqlSessionFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> sqlSessionFactory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//3. 获取Mapper接口的代理对象</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">brandMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4. 执行方法</span></span><br><span class=\"line\">\t<span class=\"comment\">//方式一 ：接口方法参数使用 @Param 方式调用的方法</span></span><br><span class=\"line\">    <span class=\"comment\">//List&lt;Brand&gt; brands = brandMapper.selectByCondition(status, companyName, brandName);</span></span><br><span class=\"line\">    <span class=\"comment\">//方式二 ：接口方法参数是 实体类对象 方式调用的方法</span></span><br><span class=\"line\">     <span class=\"comment\">//封装对象</span></span><br><span class=\"line\">    <span class=\"comment\">/* Brand brand = new Brand();</span></span><br><span class=\"line\"><span class=\"comment\">        brand.setStatus(status);</span></span><br><span class=\"line\"><span class=\"comment\">        brand.setCompanyName(companyName);</span></span><br><span class=\"line\"><span class=\"comment\">        brand.setBrandName(brandName);*/</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//List&lt;Brand&gt; brands = brandMapper.selectByCondition(brand);</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//方式三 ：接口方法参数是 map集合对象 方式调用的方法</span></span><br><span class=\"line\">    <span class=\"type\">Map</span> <span class=\"variable\">map</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>();</span><br><span class=\"line\">    map.put(<span class=\"string\">&quot;status&quot;</span> , status);</span><br><span class=\"line\">    map.put(<span class=\"string\">&quot;companyName&quot;</span>, companyName);</span><br><span class=\"line\">    map.put(<span class=\"string\">&quot;brandName&quot;</span> , brandName);</span><br><span class=\"line\">    List&lt;Brand&gt; brands = brandMapper.selectByCondition(map);</span><br><span class=\"line\">    System.out.println(brands);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"144-动态sql\"><a class=\"markdownIt-Anchor\" href=\"#144-动态sql\">#</a> 1.4.4  动态 SQL</h4>\n<p>上述功能实现存在很大的问题。用户在输入条件时，肯定不会所有的条件都填写，这个时候我们的 SQL 语句就不能那样写的</p>\n<p>例如用户只输入 当前状态 时，SQL 语句就是</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tb_brand <span class=\"keyword\">where</span> status <span class=\"operator\">=</span> #&#123;status&#125;</span><br></pre></td></tr></table></figure>\n<p>而用户如果只输入企业名称时，SQL 语句就是</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tb_brand <span class=\"keyword\">where</span> company_name <span class=\"keyword\">like</span> #&#123;companName&#125;</span><br></pre></td></tr></table></figure>\n<p>而用户如果输入了  <code>当前状态</code>  和  <code>企业名称 </code>  时，SQL 语句又不一样</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tb_brand <span class=\"keyword\">where</span> status <span class=\"operator\">=</span> #&#123;status&#125; <span class=\"keyword\">and</span> company_name <span class=\"keyword\">like</span> #&#123;companName&#125;</span><br></pre></td></tr></table></figure>\n<p>针对上述的需要，Mybatis 对动态 SQL 有很强大的支撑：</p>\n<blockquote>\n<ul>\n<li>\n<p>if</p>\n</li>\n<li>\n<p>choose (when, otherwise)</p>\n</li>\n<li>\n<p>trim (where, set)</p>\n</li>\n<li>\n<p>foreach</p>\n</li>\n</ul>\n</blockquote>\n<p>我们先学习 if 标签和 where 标签：</p>\n<ul>\n<li>\n<p>if 标签：条件判断</p>\n<ul>\n<li>test 属性：逻辑表达式</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectByCondition&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;brandResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from tb_brand</span><br><span class=\"line\">    where</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;status != null&quot;</span>&gt;</span></span><br><span class=\"line\">            and status = #&#123;status&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;companyName != null and companyName != &#x27;&#x27; &quot;</span>&gt;</span></span><br><span class=\"line\">            and company_name like #&#123;companyName&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;brandName != null and brandName != &#x27;&#x27; &quot;</span>&gt;</span></span><br><span class=\"line\">            and brand_name like #&#123;brandName&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如上的这种 SQL 语句就会根据传递的参数值进行动态的拼接。如果此时 status 和 companyName 有值那么就会值拼接这两个条件。</p>\n<p>执行结果如下：</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729212510291.png\" alt=\"image-20210729212510291\"></p>\n<p>但是它也存在问题，如果此时给的参数值是</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Map</span> <span class=\"variable\">map</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>();</span><br><span class=\"line\"><span class=\"comment\">// map.put(&quot;status&quot; , status);</span></span><br><span class=\"line\">map.put(<span class=\"string\">&quot;companyName&quot;</span>, companyName);</span><br><span class=\"line\">map.put(<span class=\"string\">&quot;brandName&quot;</span> , brandName);</span><br></pre></td></tr></table></figure>\n<p>拼接的 SQL 语句就变成了</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tb_brand <span class=\"keyword\">where</span> <span class=\"keyword\">and</span> company_name <span class=\"keyword\">like</span> ? <span class=\"keyword\">and</span> brand_name <span class=\"keyword\">like</span> ?</span><br></pre></td></tr></table></figure>\n<p>而上面的语句中 where 关键后直接跟 and 关键字，这就是一条错误的 SQL 语句。这个就可以使用 where 标签解决</p>\n</li>\n<li>\n<p>where 标签</p>\n<ul>\n<li>作用：\n<ul>\n<li>替换 where 关键字</li>\n<li>会动态的去掉第一个条件前的 and</li>\n<li>如果所有的参数没有值则不加 where 关键字</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectByCondition&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;brandResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from tb_brand</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;status != null&quot;</span>&gt;</span></span><br><span class=\"line\">            and status = #&#123;status&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;companyName != null and companyName != &#x27;&#x27; &quot;</span>&gt;</span></span><br><span class=\"line\">            and company_name like #&#123;companyName&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;brandName != null and brandName != &#x27;&#x27; &quot;</span>&gt;</span></span><br><span class=\"line\">            and brand_name like #&#123;brandName&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：需要给每个条件前都加上 and 关键字。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"15-单个条件动态sql\"><a class=\"markdownIt-Anchor\" href=\"#15-单个条件动态sql\">#</a> 1.5 单个条件（动态 SQL）</h3>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729213613029.png\" alt=\"image-20210729213613029\" style=\"zoom:80%;\" />\n<p>如上图所示，在查询时只能选择  <code>品牌名称</code> 、 <code>当前状态</code> 、 <code>企业名称</code>  这三个条件中的一个，但是用户到底选择哪儿一个，我们并不能确定。这种就属于单个条件的动态 SQL 语句。</p>\n<p>这种需求需要使用到   <code>choose（when，otherwise）标签</code>   实现，  而  <code>choose</code>  标签类似于 Java 中的 switch 语句。</p>\n<p>通过一个案例来使用这些标签</p>\n<h4 id=\"151-编写接口方法\"><a class=\"markdownIt-Anchor\" href=\"#151-编写接口方法\">#</a> 1.5.1  编写接口方法</h4>\n<p>在  <code>BrandMapper</code>  接口中定义单条件查询的方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 单条件动态查询</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@param</span> brand</span></span><br><span class=\"line\"><span class=\"comment\">  * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">List&lt;Brand&gt; <span class=\"title function_\">selectByConditionSingle</span><span class=\"params\">(Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"152-编写sql语句\"><a class=\"markdownIt-Anchor\" href=\"#152-编写sql语句\">#</a> 1.5.2  编写 SQL 语句</h4>\n<p>在  <code>BrandMapper.xml</code>  映射配置文件中编写  <code>statement</code> ，使用  <code>resultMap</code>  而不是使用  <code>resultType</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectByConditionSingle&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;brandResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from tb_brand</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">choose</span>&gt;</span><span class=\"comment\">&lt;!--相当于switch--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;status != null&quot;</span>&gt;</span><span class=\"comment\">&lt;!--相当于case--&gt;</span></span><br><span class=\"line\">                status = #&#123;status&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;companyName != null and companyName != &#x27;&#x27; &quot;</span>&gt;</span><span class=\"comment\">&lt;!--相当于case--&gt;</span></span><br><span class=\"line\">                company_name like #&#123;companyName&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">when</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;brandName != null and brandName != &#x27;&#x27;&quot;</span>&gt;</span><span class=\"comment\">&lt;!--相当于case--&gt;</span></span><br><span class=\"line\">                brand_name like #&#123;brandName&#125;</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">when</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">choose</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"153-编写测试方法\"><a class=\"markdownIt-Anchor\" href=\"#153-编写测试方法\">#</a> 1.5.3  编写测试方法</h4>\n<p>在  <code>test/java</code>  下的  <code>com.itheima.mapper</code>   包下的  <code>MybatisTest类中</code>  定义测试方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testSelectByConditionSingle</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//接收参数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">status</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">companyName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;华为&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">brandName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;华为&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 处理参数</span></span><br><span class=\"line\">    companyName = <span class=\"string\">&quot;%&quot;</span> + companyName + <span class=\"string\">&quot;%&quot;</span>;</span><br><span class=\"line\">    brandName = <span class=\"string\">&quot;%&quot;</span> + brandName + <span class=\"string\">&quot;%&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//封装对象</span></span><br><span class=\"line\">    <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>();</span><br><span class=\"line\">    <span class=\"comment\">//brand.setStatus(status);</span></span><br><span class=\"line\">    brand.setCompanyName(companyName);</span><br><span class=\"line\">    <span class=\"comment\">//brand.setBrandName(brandName);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1. 获取SqlSessionFactory</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">sqlSessionFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> sqlSessionFactory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//3. 获取Mapper接口的代理对象</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">brandMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\">    <span class=\"comment\">//4. 执行方法</span></span><br><span class=\"line\">    List&lt;Brand&gt; brands = brandMapper.selectByConditionSingle(brand);</span><br><span class=\"line\">    System.out.println(brands);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行测试方法结果如下：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729214548756.png\" alt=\"image-20210729214548756\" style=\"zoom:70%;\" />\n<h3 id=\"16-添加数据\"><a class=\"markdownIt-Anchor\" href=\"#16-添加数据\">#</a> 1.6  添加数据</h3>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729214917317.png\" alt=\"image-20210729214917317\" style=\"zoom:70%;\" />\n<p>如上图是我们平时在添加数据时展示的页面，而我们在该页面输入想要的数据后添加  <code>提交</code>  按钮，就会将这些数据添加到数据库中。接下来我们就来实现添加数据的操作。</p>\n<ul>\n<li>\n<p>编写接口方法</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729215351651.png\" alt=\"image-20210729215351651\" style=\"zoom:80%;\" />\n<p>参数：除了 id 之外的所有的数据。id 对应的是表中主键值，而主键我们是 <mark>自动增长</mark> 生成的。</p>\n</li>\n<li>\n<p>编写 SQL 语句</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729215537167.png\" alt=\"image-20210729215537167\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>编写测试方法并执行</p>\n</li>\n</ul>\n<p>明确了该功能实现的步骤后，接下来我们进行具体的操作。</p>\n<h4 id=\"161-编写接口方法\"><a class=\"markdownIt-Anchor\" href=\"#161-编写接口方法\">#</a> 1.6.1  编写接口方法</h4>\n<p>在  <code>BrandMapper</code>  接口中定义添加方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 添加</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"162-编写sql语句\"><a class=\"markdownIt-Anchor\" href=\"#162-编写sql语句\">#</a> 1.6.2  编写 SQL 语句</h4>\n<p>在  <code>BrandMapper.xml</code>  映射配置文件中编写添加数据的  <code>statement</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;add&quot;</span>&gt;</span></span><br><span class=\"line\">    insert into tb_brand (brand_name, company_name, ordered, description, status)</span><br><span class=\"line\">    values (#&#123;brandName&#125;, #&#123;companyName&#125;, #&#123;ordered&#125;, #&#123;description&#125;, #&#123;status&#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"163-编写测试方法\"><a class=\"markdownIt-Anchor\" href=\"#163-编写测试方法\">#</a> 1.6.3  编写测试方法</h4>\n<p>在  <code>test/java</code>  下的  <code>com.itheima.mapper</code>   包下的  <code>MybatisTest类中</code>  定义测试方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testAdd</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//接收参数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">status</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">companyName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;波导手机&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">brandName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;波导&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">description</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;手机中的战斗机&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">ordered</span> <span class=\"operator\">=</span> <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//封装对象</span></span><br><span class=\"line\">    <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>();</span><br><span class=\"line\">    brand.setStatus(status);</span><br><span class=\"line\">    brand.setCompanyName(companyName);</span><br><span class=\"line\">    brand.setBrandName(brandName);</span><br><span class=\"line\">    brand.setDescription(description);</span><br><span class=\"line\">    brand.setOrdered(ordered);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1. 获取SqlSessionFactory</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">sqlSessionFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> sqlSessionFactory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//SqlSession sqlSession = sqlSessionFactory.openSession(true); //设置自动提交事务，这种情况不需要手动提交事务了</span></span><br><span class=\"line\">    <span class=\"comment\">//3. 获取Mapper接口的代理对象</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">brandMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\">    <span class=\"comment\">//4. 执行方法</span></span><br><span class=\"line\">    brandMapper.add(brand);</span><br><span class=\"line\">    <span class=\"comment\">//提交事务</span></span><br><span class=\"line\">    sqlSession.commit();</span><br><span class=\"line\">    <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果如下：</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729220348255.png\" alt=\"image-20210729220348255\"></p>\n<h4 id=\"164-添加-主键返回\"><a class=\"markdownIt-Anchor\" href=\"#164-添加-主键返回\">#</a> 1.6.4  添加 - 主键返回</h4>\n<p>在数据添加成功后，有时候需要获取插入数据库数据的主键（主键是自增长）。</p>\n<p>比如：添加订单和订单项，如下图就是京东上的订单</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729221207962.png\" alt=\"image-20210729221207962\" style=\"zoom:80%;\" />\n<p>订单数据存储在订单表中，订单项存储在订单项表中。</p>\n<ul>\n<li>\n<p>添加订单数据</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729221049462.png\" alt=\"image-20210729221049462\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>添加订单项数据，订单项中需要设置所属订单的 id</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729221058898.png\" alt=\"image-20210729221058898\" style=\"zoom:80%;\" />\n</li>\n</ul>\n<p>明白了什么时候  <code>主键返回</code>  。接下来我们简单模拟一下，在添加完数据后打印 id 属性值，能打印出来说明已经获取到了。</p>\n<p>我们将上面添加品牌数据的案例中映射配置文件里  <code>statement</code>  进行修改，如下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;add&quot;</span> <span class=\"attr\">useGeneratedKeys</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">&quot;id&quot;</span>&gt;</span></span><br><span class=\"line\">    insert into tb_brand (brand_name, company_name, ordered, description, status)</span><br><span class=\"line\">    values (#&#123;brandName&#125;, #&#123;companyName&#125;, #&#123;ordered&#125;, #&#123;description&#125;, #&#123;status&#125;);</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在 insert 标签上添加如下属性：</p>\n<ul>\n<li>useGeneratedKeys：是够获取自动增长的主键值。true 表示获取</li>\n<li>keyProperty  ：指定将获取到的主键值封装到哪儿个属性里</li>\n</ul>\n</blockquote>\n<h3 id=\"17-修改\"><a class=\"markdownIt-Anchor\" href=\"#17-修改\">#</a> 1.7  修改</h3>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729222642700.png\" alt=\"image-20210729222642700\" style=\"zoom:80%;\" />\n<p>如图所示是修改页面，用户在该页面书写需要修改的数据，点击  <code>提交</code>  按钮，就会将数据库中对应的数据进行修改。注意一点，如果哪儿个输入框没有输入内容，我们是将表中数据对应字段值替换为空白还是保留字段之前的值？答案肯定是保留之前的数据。</p>\n<p>接下来我们就具体来实现</p>\n<h4 id=\"171-编写接口方法\"><a class=\"markdownIt-Anchor\" href=\"#171-编写接口方法\">#</a> 1.7.1  编写接口方法</h4>\n<p>在  <code>BrandMapper</code>  接口中定义修改方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 修改</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">update</span><span class=\"params\">(Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>上述方法参数 Brand 就是封装了需要修改的数据，而 id 肯定是有数据的，这也是和添加方法的区别。</p>\n</blockquote>\n<h4 id=\"172-编写sql语句\"><a class=\"markdownIt-Anchor\" href=\"#172-编写sql语句\">#</a> 1.7.2  编写 SQL 语句</h4>\n<p>在  <code>BrandMapper.xml</code>  映射配置文件中编写修改数据的  <code>statement</code> 。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;update&quot;</span>&gt;</span></span><br><span class=\"line\">    update tb_brand</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;brandName != null and brandName != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">            brand_name = #&#123;brandName&#125;,</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;companyName != null and companyName != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">            company_name = #&#123;companyName&#125;,</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;ordered != null&quot;</span>&gt;</span></span><br><span class=\"line\">            ordered = #&#123;ordered&#125;,</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;description != null and description != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class=\"line\">            description = #&#123;description&#125;,</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;status != null&quot;</span>&gt;</span></span><br><span class=\"line\">            status = #&#123;status&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\">    where id = #&#123;id&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><em>set</em> 标签可以用于动态包含需要更新的列，忽略其它不更新的列。</p>\n</blockquote>\n<h4 id=\"173-编写测试方法\"><a class=\"markdownIt-Anchor\" href=\"#173-编写测试方法\">#</a> 1.7.3  编写测试方法</h4>\n<p>在  <code>test/java</code>  下的  <code>com.itheima.mapper</code>   包下的  <code>MybatisTest类中</code>  定义测试方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testUpdate</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//接收参数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">status</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">companyName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;波导手机&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">brandName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;波导&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">description</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;波导手机,手机中的战斗机&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">ordered</span> <span class=\"operator\">=</span> <span class=\"number\">200</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> <span class=\"number\">6</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//封装对象</span></span><br><span class=\"line\">    <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Brand</span>();</span><br><span class=\"line\">    brand.setStatus(status);</span><br><span class=\"line\">    <span class=\"comment\">//        brand.setCompanyName(companyName);</span></span><br><span class=\"line\">    <span class=\"comment\">//        brand.setBrandName(brandName);</span></span><br><span class=\"line\">    <span class=\"comment\">//        brand.setDescription(description);</span></span><br><span class=\"line\">    <span class=\"comment\">//        brand.setOrdered(ordered);</span></span><br><span class=\"line\">    brand.setId(id);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1. 获取SqlSessionFactory</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">sqlSessionFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> sqlSessionFactory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//SqlSession sqlSession = sqlSessionFactory.openSession(true);</span></span><br><span class=\"line\">    <span class=\"comment\">//3. 获取Mapper接口的代理对象</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">brandMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\">    <span class=\"comment\">//4. 执行方法</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> brandMapper.update(brand);</span><br><span class=\"line\">    System.out.println(count);</span><br><span class=\"line\">    <span class=\"comment\">//提交事务</span></span><br><span class=\"line\">    sqlSession.commit();</span><br><span class=\"line\">    <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行测试方法结果如下：</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729224205522.png\" alt=\"image-20210729224205522\"></p>\n<p>从结果中 SQL 语句可以看出，只修改了  <code>status</code>   字段值，因为我们给的数据中只给 Brand 实体对象的  <code>status</code>  属性设置值了。这就是  <code>set</code>  标签的作用。</p>\n<h3 id=\"18-删除一行数据\"><a class=\"markdownIt-Anchor\" href=\"#18-删除一行数据\">#</a> 1.8  删除一行数据</h3>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729224549305.png\" alt=\"image-20210729224549305\"></p>\n<p>如上图所示，每行数据后面都有一个  <code>删除</code>  按钮，当用户点击了该按钮，就会将改行数据删除掉。那我们就需要思考，这种删除是根据什么进行删除呢？是通过主键 id 删除，因为 id 是表中数据的唯一标识。</p>\n<p>接下来就来实现该功能。</p>\n<h4 id=\"181-编写接口方法\"><a class=\"markdownIt-Anchor\" href=\"#181-编写接口方法\">#</a> 1.8.1  编写接口方法</h4>\n<p>在  <code>BrandMapper</code>  接口中定义根据 id 删除方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 根据id删除</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">deleteById</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"182-编写sql语句\"><a class=\"markdownIt-Anchor\" href=\"#182-编写sql语句\">#</a> 1.8.2  编写 SQL 语句</h4>\n<p>在  <code>BrandMapper.xml</code>  映射配置文件中编写删除一行数据的  <code>statement</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;deleteById&quot;</span>&gt;</span></span><br><span class=\"line\">    delete from tb_brand where id = #&#123;id&#125;;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"183-编写测试方法\"><a class=\"markdownIt-Anchor\" href=\"#183-编写测试方法\">#</a> 1.8.3  编写测试方法</h4>\n<p>在  <code>test/java</code>  下的  <code>com.itheima.mapper</code>   包下的  <code>MybatisTest类中</code>  定义测试方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testDeleteById</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//接收参数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> <span class=\"number\">6</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1. 获取SqlSessionFactory</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">sqlSessionFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> sqlSessionFactory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//SqlSession sqlSession = sqlSessionFactory.openSession(true);</span></span><br><span class=\"line\">    <span class=\"comment\">//3. 获取Mapper接口的代理对象</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">brandMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\">    <span class=\"comment\">//4. 执行方法</span></span><br><span class=\"line\">    brandMapper.deleteById(id);</span><br><span class=\"line\">    <span class=\"comment\">//提交事务</span></span><br><span class=\"line\">    sqlSession.commit();</span><br><span class=\"line\">    <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行过程只要没报错，直接到数据库查询数据是否还存在。</p>\n<h3 id=\"19-批量删除\"><a class=\"markdownIt-Anchor\" href=\"#19-批量删除\">#</a> 1.9  批量删除</h3>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210729225713894.png\" alt=\"image-20210729225713894\" style=\"zoom:70%;\" />\n<p>如上图所示，用户可以选择多条数据，然后点击上面的  <code>删除</code>  按钮，就会删除数据库中对应的多行数据。</p>\n<h4 id=\"191-编写接口方法\"><a class=\"markdownIt-Anchor\" href=\"#191-编写接口方法\">#</a> 1.9.1  编写接口方法</h4>\n<p>在  <code>BrandMapper</code>  接口中定义删除多行数据的方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 批量删除</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">deleteByIds</span><span class=\"params\">(<span class=\"type\">int</span>[] ids)</span>;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>参数是一个数组，数组中存储的是多条数据的 id</p>\n</blockquote>\n<h4 id=\"192-编写sql语句\"><a class=\"markdownIt-Anchor\" href=\"#192-编写sql语句\">#</a> 1.9.2  编写 SQL 语句</h4>\n<p>在  <code>BrandMapper.xml</code>  映射配置文件中编写删除多条数据的  <code>statement</code> 。</p>\n<p>编写 SQL 时需要遍历数组来拼接 SQL 语句。Mybatis 提供了  <code>foreach</code>  标签供我们使用</p>\n<p><strong>foreach 标签</strong></p>\n<p>用来迭代任何可迭代的对象（如数组，集合）。</p>\n<ul>\n<li>collection 属性：\n<ul>\n<li>mybatis 会将数组参数，封装为一个 Map 集合。\n<ul>\n<li>默认：array = 数组</li>\n<li>使用 @Param 注解改变 map 集合的默认 key 的名称</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>item 属性：本次迭代获取到的元素。</li>\n<li>separator 属性：集合项迭代之间的分隔符。 <code>foreach</code>  标签不会错误地添加多余的分隔符。也就是最后一次迭代不会加分隔符。</li>\n<li>open 属性：该属性值是在拼接 SQL 语句之前拼接的语句，只会拼接一次</li>\n<li>close 属性：该属性值是在拼接 SQL 语句拼接后拼接的语句，只会拼接一次</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;deleteByIds&quot;</span>&gt;</span></span><br><span class=\"line\">    delete from tb_brand where id</span><br><span class=\"line\">    in</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;array&quot;</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span>&gt;</span></span><br><span class=\"line\">        #&#123;id&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\">    ;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>假如数组中的 id 数据是 {1,2,3}，那么拼接后的 sql 语句就是：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> tb_brand <span class=\"keyword\">where</span> id <span class=\"keyword\">in</span> (<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"193-编写测试方法\"><a class=\"markdownIt-Anchor\" href=\"#193-编写测试方法\">#</a> 1.9.3  编写测试方法</h4>\n<p>在  <code>test/java</code>  下的  <code>com.itheima.mapper</code>   包下的  <code>MybatisTest类中</code>  定义测试方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">testDeleteByIds</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//接收参数</span></span><br><span class=\"line\">    <span class=\"type\">int</span>[] ids = &#123;<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1. 获取SqlSessionFactory</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">resource</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;mybatis-config.xml&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> Resources.getResourceAsStream(resource);</span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">sqlSessionFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> sqlSessionFactory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//SqlSession sqlSession = sqlSessionFactory.openSession(true);</span></span><br><span class=\"line\">    <span class=\"comment\">//3. 获取Mapper接口的代理对象</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">brandMapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\">    <span class=\"comment\">//4. 执行方法</span></span><br><span class=\"line\">    brandMapper.deleteByIds(ids);</span><br><span class=\"line\">    <span class=\"comment\">//提交事务</span></span><br><span class=\"line\">    sqlSession.commit();</span><br><span class=\"line\">    <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"110-mybatis参数传递\"><a class=\"markdownIt-Anchor\" href=\"#110-mybatis参数传递\">#</a> 1.10  Mybatis 参数传递</h3>\n<p>Mybatis 接口方法中可以接收各种各样的参数，如下：</p>\n<ul>\n<li>多个参数</li>\n<li>单个参数：单个参数又可以是如下类型\n<ul>\n<li>POJO 类型</li>\n<li>Map 集合类型</li>\n<li>Collection 集合类型</li>\n<li>List 集合类型</li>\n<li>Array 类型</li>\n<li>其他类型</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"1101-多个参数\"><a class=\"markdownIt-Anchor\" href=\"#1101-多个参数\">#</a> 1.10.1  多个参数</h4>\n<p>如下面的代码，就是接收两个参数，而接收多个参数需要使用  <code>@Param</code>  注解，那么为什么要加该注解呢？这个问题要弄明白就必须来研究 Mybatis 底层对于这些参数是如何处理的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User <span class=\"title function_\">select</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;username&quot;)</span> String username,<span class=\"meta\">@Param(&quot;password&quot;)</span> String password)</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;select&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;user&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect *</span><br><span class=\"line\">    from tb_user</span><br><span class=\"line\">    where </span><br><span class=\"line\">    \tusername=#&#123;username&#125;</span><br><span class=\"line\">    \tand password=#&#123;password&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>我们在接口方法中定义多个参数，Mybatis 会将这些参数封装成 Map 集合对象，值就是参数值，而键在没有使用  <code>@Param</code>  注解时有以下命名规则：</p>\n<ul>\n<li>\n<p>以 arg 开头  ：第一个参数就叫 arg0，第二个参数就叫 arg1，以此类推。如：</p>\n<blockquote>\n<p>map.put (“arg0”，参数值 1);</p>\n<p>map.put (“arg1”，参数值 2);</p>\n</blockquote>\n</li>\n<li>\n<p>以 param 开头 ： 第一个参数就叫 param1，第二个参数就叫 param2，依次类推。如：</p>\n<blockquote>\n<p>map.put (“param1”，参数值 1);</p>\n<p>map.put (“param2”，参数值 2);</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>代码验证：</strong></p>\n<ul>\n<li>\n<p>在  <code>UserMapper</code>  接口中定义如下方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User <span class=\"title function_\">select</span><span class=\"params\">(String username,String password)</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在  <code>UserMapper.xml</code>  映射配置文件中定义 SQL</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;select&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;user&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect *</span><br><span class=\"line\">    from tb_user</span><br><span class=\"line\">    where </span><br><span class=\"line\">    \tusername=#&#123;arg0&#125;</span><br><span class=\"line\">    \tand password=#&#123;arg1&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;select&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;user&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect *</span><br><span class=\"line\">    from tb_user</span><br><span class=\"line\">    where </span><br><span class=\"line\">    \tusername=#&#123;param1&#125;</span><br><span class=\"line\">    \tand password=#&#123;param2&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>运行代码结果如下</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210805230303461.png\" alt=\"image-20210805230303461\" style=\"zoom:80%;\" />\n<p>在映射配合文件的 SQL 语句中使用用  <code>arg</code>  开头的和  <code>param</code>  书写，代码的可读性会变的特别差，此时可以使用  <code>@Param</code>  注解。</p>\n</li>\n</ul>\n<p>在接口方法参数上使用  <code>@Param</code>  注解，Mybatis 会将  <code>arg</code>  开头的键名替换为对应注解的属性值。</p>\n<p><strong>代码验证：</strong></p>\n<ul>\n<li>\n<p>在  <code>UserMapper</code>  接口中定义如下方法，在  <code>username</code>  参数前加上  <code>@Param</code>  注解</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User <span class=\"title function_\">select</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;username&quot;)</span> String username, String password)</span>;</span><br></pre></td></tr></table></figure>\n<p>Mybatis 在封装 Map 集合时，键名就会变成如下：</p>\n<blockquote>\n<p>map.put (“username”，参数值 1);</p>\n<p>map.put (“arg1”，参数值 2);</p>\n<p>map.put (“param1”，参数值 1);</p>\n<p>map.put (“param2”，参数值 2);</p>\n</blockquote>\n</li>\n<li>\n<p>在  <code>UserMapper.xml</code>  映射配置文件中定义 SQL</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;select&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;user&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect *</span><br><span class=\"line\">    from tb_user</span><br><span class=\"line\">    where </span><br><span class=\"line\">    \tusername=#&#123;username&#125;</span><br><span class=\"line\">    \tand password=#&#123;param2&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>运行程序结果没有报错。而如果将  <code>#&#123;&#125;</code>  中的  <code>username</code>  还是写成   <code>arg0</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;select&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;user&quot;</span>&gt;</span></span><br><span class=\"line\">\tselect *</span><br><span class=\"line\">    from tb_user</span><br><span class=\"line\">    where </span><br><span class=\"line\">    \tusername=#&#123;arg0&#125;</span><br><span class=\"line\">    \tand password=#&#123;param2&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>运行程序则可以看到错误</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210805231727206.png\" alt=\"image-20210805231727206\"></p>\n</li>\n</ul>\n<p><mark>结论：以后接口参数是多个时，在每个参数上都使用  <code>@Param</code>  注解。这样代码的可读性更高。</mark></p>\n<h4 id=\"1102-单个参数\"><a class=\"markdownIt-Anchor\" href=\"#1102-单个参数\">#</a> 1.10.2  单个参数</h4>\n<ul>\n<li>\n<p>POJO 类型</p>\n<p>直接使用。要求  <code>属性名</code>  和  <code>参数占位符名称</code>  一致</p>\n</li>\n<li>\n<p>Map 集合类型</p>\n<p>直接使用。要求  <code>map集合的键名</code>  和  <code>参数占位符名称</code>  一致</p>\n</li>\n<li>\n<p>Collection 集合类型</p>\n<p>Mybatis 会将集合封装到 map 集合中，如下：</p>\n<blockquote>\n<p>map.put (“arg0”，collection 集合);</p>\n<p>map.put (“collection”，collection 集合；</p>\n</blockquote>\n<p><mark>可以使用  <code>@Param</code>  注解替换 map 集合中默认的 arg 键名。</mark></p>\n</li>\n<li>\n<p>List 集合类型</p>\n<p>Mybatis 会将集合封装到 map 集合中，如下：</p>\n<blockquote>\n<p>map.put (“arg0”，list 集合);</p>\n<p>map.put (“collection”，list 集合);</p>\n<p>map.put (“list”，list 集合);</p>\n</blockquote>\n<p><mark>可以使用  <code>@Param</code>  注解替换 map 集合中默认的 arg 键名。</mark></p>\n</li>\n<li>\n<p>Array 类型</p>\n<p>Mybatis 会将集合封装到 map 集合中，如下：</p>\n<blockquote>\n<p>map.put (“arg0”，数组);</p>\n<p>map.put (“array”，数组);</p>\n</blockquote>\n<p><mark>可以使用  <code>@Param</code>  注解替换 map 集合中默认的 arg 键名。</mark></p>\n</li>\n<li>\n<p>其他类型</p>\n<p>比如 int 类型， <code>参数占位符名称</code>  叫什么都可以。尽量做到见名知意</p>\n</li>\n</ul>\n<h2 id=\"2注解实现crud\"><a class=\"markdownIt-Anchor\" href=\"#2注解实现crud\">#</a> 2，注解实现 CRUD</h2>\n<p>使用注解开发会比配置文件开发更加方便。如下就是使用注解进行开发</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Select(value = &quot;select * from tb_user where id = #&#123;id&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> User <span class=\"title function_\">select</span><span class=\"params\">(<span class=\"type\">int</span> id)</span>;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><mark>注意：</mark></p>\n<ul>\n<li>注解是用来替换映射配置文件方式配置的，所以使用了注解，就不需要再映射配置文件中书写对应的  <code>statement</code></li>\n</ul>\n</blockquote>\n<p>Mybatis 针对 CURD 操作都提供了对应的注解，已经做到见名知意。如下：</p>\n<ul>\n<li>查询 ：@Select</li>\n<li>添加 ：@Insert</li>\n<li>修改 ：@Update</li>\n<li>删除 ：@Delete</li>\n</ul>\n<p>接下来我们做一个案例来使用 Mybatis 的注解开发</p>\n<p><strong>代码实现：</strong></p>\n<ul>\n<li>\n<p>将之前案例中  <code>UserMapper.xml</code>  中的 根据 id 查询数据 的  <code>statement</code>  注释掉</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210805235229938.png\" alt=\"image-20210805235229938\" style=\"zoom:70%;\" />\n</li>\n<li>\n<p>在  <code>UserMapper</code>  接口的  <code>selectById</code>  方法上添加注解</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210805235405070.png\" alt=\"image-20210805235405070\" style=\"zoom:70%;\" />\n</li>\n<li>\n<p>运行测试程序也能正常查询到数据</p>\n</li>\n</ul>\n<p>我们课程上只演示这一个查询的注解开发，其他的同学们下来可以自己实现，都是比较简单。</p>\n<p>== 注意：== 在官方文档中  <code>入门</code>  中有这样的一段话：</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210805234302849.png\" alt=\"image-20210805234302849\"></p>\n<p>所以，<mark>注解完成简单功能，配置文件完成复杂功能。</mark></p>\n<p>而我们之前写的动态 SQL 就是复杂的功能，如果用注解使用的话，就需要使用到 Mybatis 提供的 SQL 构建器来完成，而对应的代码如下：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210805234842497.png\" alt=\"image-20210805234842497\" style=\"zoom:70%;\" />\n<p>上述代码将 java 代码和 SQL 语句融到了一块，使得代码的可读性大幅度降低。</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF/",
            "url": "http://example.com/%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF/",
            "title": "cookie&session",
            "date_published": "2022-12-15T03:52:14.000Z",
            "content_html": "<h2 id=\"会话技术\"><a class=\"markdownIt-Anchor\" href=\"#会话技术\">#</a> 会话技术</h2>\n<p><strong>今日目标</strong></p>\n<blockquote>\n<ul>\n<li>\n<p>理解什么是会话跟踪技术</p>\n</li>\n<li>\n<p>掌握 Cookie 的使用</p>\n</li>\n<li>\n<p>掌握 Session 的使用</p>\n</li>\n<li>\n<p>完善用户登录注册案例的功能</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"1会话跟踪技术的概述\"><a class=\"markdownIt-Anchor\" href=\"#1会话跟踪技术的概述\">#</a> 1，会话跟踪技术的概述</h2>\n<p>对于 <code>会话跟踪</code> 这四个词，我们需要拆开来进行解释，首先要理解什么是 <code>会话</code> ，然后再去理解什么是 <code>会话跟踪</code> :</p>\n<ul>\n<li>\n<p>会话：用户打开浏览器，访问 web 服务器的资源，会话建立，直到有一方断开连接，会话结束。在一次会话中可以包含<mark>多次</mark>请求和响应。</p>\n<ul>\n<li>从浏览器发出请求到服务端响应数据给前端之后，一次会话 (在浏览器和服务器之间) 就被建立了</li>\n<li>会话被建立后，如果浏览器或服务端都没有被关闭，则会话就会持续建立着</li>\n<li>浏览器和服务器就可以继续使用该会话进行请求发送和响应，上述的整个过程就被称之为<mark>会话</mark>。</li>\n</ul>\n<p>用实际场景来理解下会话，比如在我们访问京东的时候，当打开浏览器进入京东首页后，浏览器和京东的服务器之间就建立了一次会话，后面的搜索商品，查看商品的详情，加入购物车等都是在这一次会话中完成。</p>\n<p>思考：下图中总共建立了几个会话？</p>\n<p><img data-src=\"assets/1629382713180.png\" alt=\"1629382713180\"></p>\n<p>每个浏览器都会与服务端建立了一个会话，加起来总共是<mark> 3</mark> 个会话。</p>\n</li>\n<li>\n<p>会话跟踪：一种维护浏览器状态的方法，服务器需要识别多次请求是否来自于同一浏览器，以便在同一次会话的多次请求间<mark>共享数据</mark>。</p>\n<ul>\n<li>服务器会收到多个请求，这多个请求可能来自多个浏览器，如上图中的 6 个请求来自 3 个浏览器</li>\n<li>服务器需要用来识别请求是否来自同一个浏览器</li>\n<li>服务器用来识别浏览器的过程，这个过程就是<mark>会话跟踪</mark></li>\n<li>服务器识别浏览器后就可以在同一个会话中多次请求之间来共享数据</li>\n</ul>\n<p>那么我们又有一个问题需要思考，一个会话中的多次请求为什么要共享数据呢？有了这个数据共享功能后能实现哪些功能呢？</p>\n<ul>\n<li>\n<p>购物车:  <code>加入购物车</code> 和 <code>去购物车结算</code> 是两次请求，但是后面这次请求要想展示前一次请求所添加的商品，就需要用到数据共享。</p>\n<p><img data-src=\"assets/1629383655260.png\" alt=\"1629383655260\"></p>\n</li>\n<li>\n<p>页面展示用户登录信息：很多网站，登录后访问多个功能发送多次请求后，浏览器上都会有当前登录用户的信息 [用户名]，比如百度、京东、码云等。</p>\n<p><img data-src=\"assets/1629383767654.png\" alt=\"1629383767654\"></p>\n</li>\n<li>\n<p>网站登录页面的 <code>记住我</code> 功能：当用户登录成功后，勾选 <code>记住我</code> 按钮后下次再登录的时候，网站就会自动填充用户名和密码，简化用户的登录操作，多次登录就会有多次请求，他们之间也涉及到共享数据</p>\n<p><img data-src=\"assets/1629383921990.png\" alt=\"1629383921990\"></p>\n</li>\n<li>\n<p>登录页面的验证码功能：生成验证码和输入验证码点击注册这也是两次请求，这两次请求的数据之间要进行对比，相同则允许注册，不同则拒绝注册，该功能的实现也需要在同一次会话中共享数据。</p>\n<p><img data-src=\"assets/1629384004179.png\" alt=\"1629384004179\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<p>通过这几个例子的讲解，相信大家对 <code>会话追踪</code> 技术已经有了一定的理解，该技术在实际开发中也非常重要。那么接下来我们就需要去学习下 <code>会话跟踪</code> 技术，在学习这些技术之前，我们需要思考：为什么现在浏览器和服务器不支持数据共享呢？</p>\n<ul>\n<li>浏览器和服务器之间使用的是 HTTP 请求来进行数据传输</li>\n<li>HTTP 协议是<mark>无状态</mark>的，每次浏览器向服务器请求时，服务器都会将该请求视为<mark>新的</mark>请求</li>\n<li>HTTP 协议设计成无状态的目的是让每次请求之间相互独立，互不影响</li>\n<li>请求与请求之间独立后，就无法实现多次请求之间的数据共享</li>\n</ul>\n<p>分析完具体的原因后，那么该如何实现会话跟踪技术呢？具体的实现方式有:</p>\n<p>(1) 客户端会话跟踪技术：<mark>Cookie</mark></p>\n<p>(2) 服务端会话跟踪技术：<mark>Session</mark></p>\n<p>这两个技术都可以实现会话跟踪，它们之间最大的区别:<mark>Cookie 是存储在浏览器端而 Session 是存储在服务器端</mark></p>\n<p>具体的学习思路为:</p>\n<ul>\n<li>CooKie 的基本使用、原理、使用细节</li>\n<li>Session 的基本使用、原理、使用细节</li>\n<li>Cookie 和 Session 的综合案例</li>\n</ul>\n<p><strong>小结</strong></p>\n<p>在这节中，我们主要介绍了下什么是会话和会话跟踪技术，需要注意的是:</p>\n<ul>\n<li>HTTP 协议是无状态的，靠 HTTP 协议是无法实现会话跟踪</li>\n<li>想要实现会话跟踪，就需要用到 Cookie 和 Session</li>\n</ul>\n<p>这个 Cookie 和 Session 具体该如何使用，接下来就先从 Cookie 来学起。</p>\n<h2 id=\"2cookie\"><a class=\"markdownIt-Anchor\" href=\"#2cookie\">#</a> 2，Cookie</h2>\n<p>学习 Cookie，我们主要解决下面几个问题:</p>\n<ul>\n<li>什么是 Cookie?</li>\n<li>Cookie 如何来使用？</li>\n<li>Cookie 是如何实现的？</li>\n<li>Cookie 的使用注意事项有哪些？</li>\n</ul>\n<h3 id=\"21-cookie的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#21-cookie的基本使用\">#</a> 2.1 Cookie 的基本使用</h3>\n<p><strong>1. 概念</strong></p>\n<p><mark>Cookie</mark>：客户端会话技术，将数据保存到客户端，以后每次请求都携带 Cookie 数据进行访问。</p>\n<p><strong>2.Cookie 的工作流程</strong></p>\n<p><img data-src=\"assets/1629386230207.png\" alt=\"1629386230207\"></p>\n<ul>\n<li>服务端提供了两个 Servlet，分别是 ServletA 和 ServletB</li>\n<li>浏览器发送 HTTP 请求 1 给服务端，服务端 ServletA 接收请求并进行业务处理</li>\n<li>服务端 ServletA 在处理的过程中可以创建一个 Cookie 对象并将 <code>name=zs</code>  的数据存入 Cookie</li>\n<li>服务端 ServletA 在响应数据的时候，会把 Cookie 对象响应给浏览器</li>\n<li>浏览器接收到响应数据，会把 Cookie 对象中的数据存储在浏览器内存中，此时浏览器和服务端就<mark>建立了一次会话</mark></li>\n<li><mark>在同一次会话</mark>中浏览器再次发送 HTTP 请求 2 给服务端 ServletB，浏览器会携带 Cookie 对象中的所有数据</li>\n<li>ServletB 接收到请求和数据后，就可以获取到存储在 Cookie 对象中的数据，这样同一个会话中的多次请求之间就实现了数据共享</li>\n</ul>\n<p><strong>3.Cookie 的基本使用</strong></p>\n<p>对于 Cookie 的使用，我们更关注的应该是后台代码如何操作 Cookie，对于 Cookie 的操作主要分两大类，本别是<mark>发送 Cookie</mark> 和<mark>获取 Cookie</mark>, 对于上面这两块内容，分别该如何实现呢？</p>\n<p>3.1 发送 Cookie</p>\n<ul>\n<li>创建 Cookie 对象，并设置数据</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie cookie = new Cookie(&quot;key&quot;,&quot;value&quot;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>发送 Cookie 到客户端：使用<mark> response</mark> 对象</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response.addCookie(cookie);</span><br></pre></td></tr></table></figure>\n<p>介绍完发送 Cookie 对应的步骤后，接下面通过一个案例来完成 Cookie 的发送，具体实现步骤为:</p>\n<blockquote>\n<p>需求：在 Servlet 中生成 Cookie 对象并存入数据，然后将数据发送给浏览器</p>\n<p>1. 创建 Maven 项目，项目名称为 cookie-demo，并在 pom.xml 添加依赖</p>\n<p>2. 编写 Servlet 类，名称为 AServlet</p>\n<p>3. 在 AServlet 中创建 Cookie 对象，存入数据，发送给前端</p>\n<p>4. 启动测试，在浏览器查看 Cookie 对象中的值</p>\n</blockquote>\n<p>(1) 创建 Maven 项目 cookie-demo，并在 pom.xml 添加依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--servlet--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--jsp--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--jstl--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>taglibs<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>standard<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.tomcat.maven<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>(2) 编写 Servlet 类，名称为 AServlet</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/aServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(3) 在 Servlet 中创建 Cookie 对象，存入数据，发送给前端</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/aServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//发送Cookie</span></span><br><span class=\"line\">        <span class=\"comment\">//1. 创建Cookie对象</span></span><br><span class=\"line\">        <span class=\"type\">Cookie</span> <span class=\"variable\">cookie</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Cookie</span>(<span class=\"string\">&quot;username&quot;</span>,<span class=\"string\">&quot;zs&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//2. 发送Cookie，response</span></span><br><span class=\"line\">        response.addCookie(cookie);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（4）启动测试，在浏览器查看 Cookie 对象中的值</p>\n<p>访问 <code>http://localhost:8080/cookie-demo/aServlet</code></p>\n<p>chrome 浏览器查看 Cookie 的值，有两种方式，分布式:</p>\n<p>方式一:</p>\n<p><img data-src=\"assets/1629389317463.png\" alt=\"1629389317463\"></p>\n<p>方式二：选中打开开发者工具或者 使用快捷键 F12 或者 Ctrl+Shift+I</p>\n<p><img data-src=\"assets/1629390237936.png\" alt=\"1629390237936\"></p>\n<p>3.2 获取 Cookie</p>\n<ul>\n<li>获取客户端携带的所有 Cookie，使用<mark> request</mark> 对象</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookie[] cookies = request.getCookies();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>遍历数组，获取每一个 Cookie 对象：for</li>\n<li>使用 Cookie 对象方法获取数据</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cookie.getName();</span><br><span class=\"line\">cookie.getValue();</span><br></pre></td></tr></table></figure>\n<p>介绍完获取 Cookie 对应的步骤后，接下面再通过一个案例来完成 Cookie 的获取，具体实现步骤为:</p>\n<blockquote>\n<p>需求：在 Servlet 中获取前一个案例存入在 Cookie 对象中的数据</p>\n<p>1. 编写一个新 Servlet 类，名称为 BServlet</p>\n<p>2. 在 BServlet 中使用 request 对象获取 Cookie 数组，遍历数组，从数据中获取指定名称对应的值</p>\n<p>3. 启动测试，在控制台打印出获取的值</p>\n</blockquote>\n<p>(1) 编写一个新 Servlet 类，名称为 BServlet</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/bServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（2）在 BServlet 中使用 request 对象获取 Cookie 数组，遍历数组，从数据中获取指定名称对应的值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/bServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取Cookie</span></span><br><span class=\"line\">        <span class=\"comment\">//1. 获取Cookie数组</span></span><br><span class=\"line\">        Cookie[] cookies = request.getCookies();</span><br><span class=\"line\">        <span class=\"comment\">//2. 遍历数组</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Cookie cookie : cookies) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//3. 获取数据</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> cookie.getName();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"string\">&quot;username&quot;</span>.equals(name))&#123;</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> cookie.getValue();</span><br><span class=\"line\">                System.out.println(name+<span class=\"string\">&quot;:&quot;</span>+value);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）启动测试，在控制台打印出获取的值</p>\n<p>访问 <code>http://localhost:8080/cookie-demo/bServlet</code></p>\n<p><img data-src=\"assets/1629391020081.png\" alt=\"1629391020081\"></p>\n<p>在 IDEA 控制台就能看到输出的结果:</p>\n<p><img data-src=\"assets/1629391061140.png\" alt=\"1629391061140\"></p>\n<p>== 思考:== 测试的时候</p>\n<ul>\n<li>在访问 AServlet 和 BServlet 的中间把关闭浏览器，重启浏览器后访问 BServlet 能否获取到 Cookie 中的数据？</li>\n</ul>\n<p>这个问题，我们会在 Cookie 的使用细节中讲，大家可以动手先试下。</p>\n<p><strong>小结</strong></p>\n<p>在这节中，我们主要讲解了 Cookie 的基本使用，包含两部分内容</p>\n<ul>\n<li>发送 Cookie:\n<ul>\n<li>创建 Cookie 对象，并设置值：Cookie cookie = new Cookie (“key”,“value”);</li>\n<li>发送 Cookie 到客户端使用的是 Reponse 对象:response.addCookie (cookie);</li>\n</ul>\n</li>\n<li>获取 Cookie:\n<ul>\n<li>使用 Request 对象获取 Cookie 数组：Cookie [] cookies = request.getCookies ();</li>\n<li>遍历数组</li>\n<li>获取数组中每个 Cookie 对象的值:cookie.getName () 和 cookie.getValue ()</li>\n</ul>\n</li>\n</ul>\n<p>介绍完 Cookie 的基本使用之后，那么 Cookie 的底层到底是如何实现一次会话两次请求之间的数据共享呢？</p>\n<h3 id=\"22-cookie的原理分析\"><a class=\"markdownIt-Anchor\" href=\"#22-cookie的原理分析\">#</a> 2.2 Cookie 的原理分析</h3>\n<p>对于 Cookie 的实现原理是基于 HTTP 协议的，其中设计到 HTTP 协议中的两个请求头信息:</p>\n<ul>\n<li>响应头:set-cookie</li>\n<li>请求头: cookie</li>\n</ul>\n<p><img data-src=\"assets/1629393289338.png\" alt=\"1629393289338\"></p>\n<ul>\n<li>前面的案例中已经能够实现，AServlet 给前端发送 Cookie,BServlet 从 request 中获取 Cookie 的功能</li>\n<li>对于 AServlet 响应数据的时候，Tomcat 服务器都是基于 HTTP 协议来响应数据</li>\n<li>当 Tomcat 发现后端要返回的是一个 Cookie 对象之后，Tomcat 就会在响应头中添加一行数据 == <code>Set-Cookie:username=zs</code> ==</li>\n<li>浏览器获取到响应结果后，从响应头中就可以获取到 <code>Set-Cookie</code>  对应值 <code>username=zs</code> , 并将数据存储在浏览器的内存中</li>\n<li>浏览器再次发送请求给 BServlet 的时候，浏览器会自动在请求头中添加 == <code>Cookie: username=zs</code> == 发送给服务端 BServlet</li>\n<li>Request 对象会把请求头中 cookie 对应的值封装成一个个 Cookie 对象，最终形成一个数组</li>\n<li>BServlet 通过 Request 对象获取到 Cookie [] 后，就可以从中获取自己需要的数据</li>\n</ul>\n<p>接下来，使用刚才的案例，把上述结论验证下:</p>\n<p>(1) 访问 AServlet 对应的地址 <code>http://localhost:8080/cookie-demo/aServlet</code></p>\n<p>使用 Chrom 浏览器打开开发者工具 (F12 或 Crtl+Shift+I) 进行查看<mark>响应头</mark>中的数据</p>\n<p><img data-src=\"assets/1629393428733.png\" alt=\"1629393428733\"></p>\n<p>（2）访问 BServlet 对应的地址 `http://localhost:8080/cookie-demo/bServlet</p>\n<p>使用 Chrom 浏览器打开开发者工具 (F12 或 Crtl+Shift+I) 进行查看<mark>请求头</mark>中的数据</p>\n<p><img data-src=\"assets/1629393578667.png\" alt=\"1629393578667\"></p>\n<h3 id=\"23-cookie的使用细节\"><a class=\"markdownIt-Anchor\" href=\"#23-cookie的使用细节\">#</a> 2.3 Cookie 的使用细节</h3>\n<p>在这节我们主要讲解两个知识，第一个是 Cookie 的存活时间，第二个是 Cookie 如何存储中文，首先来学习下 Cookie 的存活时间。</p>\n<h4 id=\"231-cookie的存活时间\"><a class=\"markdownIt-Anchor\" href=\"#231-cookie的存活时间\">#</a> 2.3.1 Cookie 的存活时间</h4>\n<p>前面让大家思考过一个问题:</p>\n<p><img data-src=\"assets/1629423321737.png\" alt=\"1629423321737\"></p>\n<p>(1) 浏览器发送请求给 AServlet,AServlet 会响应一个存有 <code>usernanme=zs</code>  的 Cookie 对象给浏览器</p>\n<p>(2) 浏览器接收到响应数据将 cookie 存入到浏览器内存中</p>\n<p>(3) 当浏览器再次发送请求给 BServlet,BServlet 就可以使用 Request 对象获取到 Cookie 数据</p>\n<p>(4) 在发送请求到 BServlet 之前，如果把浏览器关闭再打开进行访问，BServlet 能否获取到 Cookie 数据？</p>\n<p><mark>注意：浏览器关闭再打开不是指打开一个新的选显卡，而且必须是先关闭再打开，顺序不能变。</mark></p>\n<p>针对上面这个问题，通过演示，会发现，BServlet 中无法再获取到 Cookie 数据，这是为什么呢？</p>\n<ul>\n<li>默认情况下，Cookie 存储在浏览器内存中，当浏览器关闭，内存释放，则 Cookie 被销毁</li>\n</ul>\n<p>这个结论就印证了上面的演示效果，但是如果使用这种默认情况下的 Cookie, 有些需求就无法实现，比如:</p>\n<p><img data-src=\"assets/1629423629887.png\" alt=\"1629423629887\"></p>\n<p>上面这个网站的登录页面上有一个 <code>记住我</code> 的功能，这个功能大家都比较熟悉</p>\n<ul>\n<li>第一次输入用户名和密码并勾选 <code>记住我</code> 然后进行登录</li>\n<li>下次再登陆的时候，用户名和密码就会被自动填充，不需要再重新输入登录</li>\n<li>比如 <code>记住我</code> 这个功能需要记住用户名和密码一个星期，那么使用默认情况下的 Cookie 就会出现问题</li>\n<li>因为默认情况，浏览器一关，Cookie 就会从浏览器内存中删除，对于 <code>记住我</code> 功能就无法实现</li>\n</ul>\n<p>所以我们现在就遇到一个难题是如何将 Cookie 持久化存储？</p>\n<p>Cookie 其实已经为我们提供好了对应的 API 来完成这件事，这个 API 就是<mark> setMaxAge</mark>,</p>\n<ul>\n<li>设置 Cookie 存活时间</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setMaxAge(int seconds)</span><br></pre></td></tr></table></figure>\n<p>参数值为:</p>\n<p>1. 正数：将 Cookie 写入浏览器所在电脑的硬盘，持久化存储。到时间自动删除</p>\n<p>2. 负数：默认值，Cookie 在当前浏览器内存中，当浏览器关闭，则 Cookie 被销毁</p>\n<p>3. 零：删除对应 Cookie</p>\n<p>接下来，咱们就在 AServlet 中去设置 Cookie 的存活时间。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/aServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//发送Cookie</span></span><br><span class=\"line\">        <span class=\"comment\">//1. 创建Cookie对象</span></span><br><span class=\"line\">        <span class=\"type\">Cookie</span> <span class=\"variable\">cookie</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Cookie</span>(<span class=\"string\">&quot;username&quot;</span>,<span class=\"string\">&quot;zs&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//设置存活时间   ，1周 7天</span></span><br><span class=\"line\">        cookie.setMaxAge(<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">24</span>*<span class=\"number\">7</span>); <span class=\"comment\">//易阅读，需程序计算</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//cookie.setMaxAge(604800); //不易阅读(可以使用注解弥补)，程序少进行一次计算</span></span><br><span class=\"line\">        <span class=\"comment\">//2. 发送Cookie，response</span></span><br><span class=\"line\">        response.addCookie(cookie);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>修改完代码后，启动测试，访问 <code>http://localhost:8080/cookie-demo/aServlet</code></p>\n<ul>\n<li>访问一个 AServlet 后，把浏览器关闭重启后，再去访问 <code>http://localhost:8080/cookie-demo/bServet</code> , 能在控制台打印出 <code>username:zs</code> , 说明 Cookie 没有随着浏览器关闭而被销毁</li>\n<li>通过浏览器查看 Cookie 的内容，会发现 Cookie 的相关信息</li>\n</ul>\n<p><img data-src=\"assets/1629424844041.png\" alt=\"1629424844041\"></p>\n<h4 id=\"232-cookie存储中文\"><a class=\"markdownIt-Anchor\" href=\"#232-cookie存储中文\">#</a> 2.3.2 Cookie 存储中文</h4>\n<p>首先，先来演示一个效果，将之前 <code>username=zs</code>  的值改成 <code>username=张三</code> ，把汉字 <code>张三</code> 存入到 Cookie 中，看是什么效果:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/aServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"> \t\t<span class=\"comment\">//发送Cookie</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">Cookie</span> <span class=\"variable\">cookie</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Cookie</span>(<span class=\"string\">&quot;username&quot;</span>,value);</span><br><span class=\"line\">        <span class=\"comment\">//设置存活时间   ，1周 7天</span></span><br><span class=\"line\">        cookie.setMaxAge(<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">24</span>*<span class=\"number\">7</span>);</span><br><span class=\"line\">        <span class=\"comment\">//2. 发送Cookie，response</span></span><br><span class=\"line\">        response.addCookie(cookie);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>启动访问测试，访问 <code>http://localhost:8080/cookie-demo/aServlet</code>  会发现浏览器会提示错误信息</p>\n<p><img data-src=\"assets/1629425945465.png\" alt=\"1629425945465\"></p>\n<p>通过上面的案例演示，我们得到一个结论:</p>\n<ul>\n<li>Cookie 不能直接存储中文</li>\n</ul>\n<p>Cookie 不能存储中文，但是如果有这方面的需求，这个时候该如何解决呢？</p>\n<p>这个时候，我们可以使用之前学过的一个知识点叫 <code>URL编码</code> ，所以如果需要存储中文，就需要进行转码，具体的实现思路为:</p>\n<blockquote>\n<p>1. 在 AServlet 中对中文进行 URL 编码，采用 URLEncoder.encode ()，将编码后的值存入 Cookie 中</p>\n<p>2. 在 BServlet 中获取 Cookie 中的值，获取的值为 URL 编码后的值</p>\n<p>3. 将获取的值在进行 URL 解码，采用 URLDecoder.decode ()，就可以获取到对应的中文值</p>\n</blockquote>\n<p>(1) 在 AServlet 中对中文进行 URL 编码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/aServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//发送Cookie</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//对中文进行URL编码</span></span><br><span class=\"line\">        value = URLEncoder.encode(value, <span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;存储数据：&quot;</span>+value);</span><br><span class=\"line\">        <span class=\"comment\">//将编码后的值存入Cookie中</span></span><br><span class=\"line\">        <span class=\"type\">Cookie</span> <span class=\"variable\">cookie</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Cookie</span>(<span class=\"string\">&quot;username&quot;</span>,value);</span><br><span class=\"line\">        <span class=\"comment\">//设置存活时间   ，1周 7天</span></span><br><span class=\"line\">        cookie.setMaxAge(<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">24</span>*<span class=\"number\">7</span>);</span><br><span class=\"line\">        <span class=\"comment\">//2. 发送Cookie，response</span></span><br><span class=\"line\">        response.addCookie(cookie);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(2) 在 BServlet 中获取值，并对值进行解码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/bServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取Cookie</span></span><br><span class=\"line\">        <span class=\"comment\">//1. 获取Cookie数组</span></span><br><span class=\"line\">        Cookie[] cookies = request.getCookies();</span><br><span class=\"line\">        <span class=\"comment\">//2. 遍历数组</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Cookie cookie : cookies) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//3. 获取数据</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> cookie.getName();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"string\">&quot;username&quot;</span>.equals(name))&#123;</span><br><span class=\"line\">                <span class=\"type\">String</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> cookie.getValue();<span class=\"comment\">//获取的是URL编码后的值 %E5%BC%A0%E4%B8%89</span></span><br><span class=\"line\">                <span class=\"comment\">//URL解码</span></span><br><span class=\"line\">                value = URLDecoder.decode(value,<span class=\"string\">&quot;UTF-8&quot;</span>);</span><br><span class=\"line\">                System.out.println(name+<span class=\"string\">&quot;:&quot;</span>+value);<span class=\"comment\">//value解码后为 张三</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>至此，我们就可以将中文存入 Cookie 中进行使用。</p>\n<p><strong>小结</strong></p>\n<p>Cookie 的使用细节中，我们讲了 Cookie 的 <code>存活时间</code> 和 <code>存储中文</code> :</p>\n<ul>\n<li>\n<p>存活时间，需要掌握 setMaxAage () API 的使用</p>\n</li>\n<li>\n<p>存储中文，需要掌握 URL 编码和解码的使用</p>\n</li>\n</ul>\n<h2 id=\"3session\"><a class=\"markdownIt-Anchor\" href=\"#3session\">#</a> 3，Session</h2>\n<p>Cookie 已经能完成一次会话多次请求之间的数据共享，之前我们还提到过 Session 也可以实现，那么:</p>\n<ul>\n<li>什么是 Session?</li>\n<li>Session 如何来使用？</li>\n<li>Session 是如何实现的？</li>\n<li>Session 的使用注意事项有哪些？</li>\n</ul>\n<h3 id=\"31-session的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#31-session的基本使用\">#</a> 3.1 Session 的基本使用</h3>\n<p><strong>1. 概念</strong></p>\n<p><mark>Session</mark>：服务端会话跟踪技术：将数据保存到服务端。</p>\n<ul>\n<li>Session 是存储在服务端而 Cookie 是存储在客户端</li>\n<li>存储在客户端的数据容易被窃取和截获，存在很多不安全的因素</li>\n<li>存储在服务端的数据相比于客户端来说就更安全</li>\n</ul>\n<p><strong>2.Session 的工作流程</strong></p>\n<p><img data-src=\"assets/1629427173389.png\" alt=\"1629427173389\"></p>\n<ul>\n<li>在服务端的 AServlet 获取一个 Session 对象，把数据存入其中</li>\n<li>在服务端的 BServlet 获取到相同的 Session 对象，从中取出数据</li>\n<li>就可以实现一次会话中多次请求之间的数据共享了</li>\n<li>现在最大的问题是如何保证 AServlet 和 BServlet 使用的是同一个 Session 对象 (在原理分析会讲解)?</li>\n</ul>\n<p><strong>3.Session 的基本使用</strong></p>\n<p>在 JavaEE 中提供了 HttpSession 接口，来实现一次会话的多次请求之间数据共享功能。</p>\n<p>具体的使用步骤为:</p>\n<ul>\n<li>获取 Session 对象，使用的是 request 对象</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HttpSession session = request.getSession();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>Session 对象提供的功能:</p>\n<ul>\n<li>\n<p>存储数据到 session 域中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void setAttribute(String name, Object o)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>根据 key，获取值</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Object getAttribute(String name)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>根据 key，删除该键值对</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void removeAttribute(String name)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<p>介绍完 Session 相关的 API 后，接下来通过一个案例来完成对 Session 的使用，具体实现步骤为:</p>\n<blockquote>\n<p>需求：在一个 Servlet 中往 Session 中存入数据，在另一个 Servlet 中获取 Session 中存入的数据</p>\n<p>1. 创建名为 SessionDemo1 的 Servlet 类</p>\n<p>2. 创建名为 SessionDemo2 的 Servlet 类</p>\n<p>3. 在 SessionDemo1 的方法中：获取 Session 对象、存储数据</p>\n<p>4. 在 SessionDemo2 的方法中：获取 Session 对象、获取数据</p>\n<p>5. 启动测试</p>\n</blockquote>\n<p>(1) 创建名为 SessionDemo1 的 Servlet 类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/demo1&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SessionDemo1</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(2) 创建名为 SessionDemo2 的 Servlet 类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/demo2&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SessionDemo2</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(3) SessionDemo1: 获取 Session 对象、存储数据</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/demo1&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SessionDemo1</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//存储到Session中</span></span><br><span class=\"line\">        <span class=\"comment\">//1. 获取Session对象</span></span><br><span class=\"line\">        <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> request.getSession();</span><br><span class=\"line\">        <span class=\"comment\">//2. 存储数据</span></span><br><span class=\"line\">        session.setAttribute(<span class=\"string\">&quot;username&quot;</span>,<span class=\"string\">&quot;zs&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(4) SessionDemo2: 获取 Session 对象、获取数据</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/demo2&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SessionDemo2</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取数据，从session中</span></span><br><span class=\"line\">        <span class=\"comment\">//1. 获取Session对象</span></span><br><span class=\"line\">        <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> request.getSession();</span><br><span class=\"line\">        <span class=\"comment\">//2. 获取数据</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> session.getAttribute(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">        System.out.println(username);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(5) 启动测试，</p>\n<ul>\n<li>先访问 <code>http://localhost:8080/cookie-demo/demo1</code> , 将数据存入 Session</li>\n<li>在访问 <code>http://localhost:8080/cookie-demo/demo2</code> , 从 Session 中获取数据</li>\n<li>查看控制台</li>\n</ul>\n<p><img data-src=\"assets/1629428292373.png\" alt=\"1629428292373\"></p>\n<p>通过案例的效果，能看到 Session 是能够在一次会话中两次请求之间共享数据。</p>\n<p><strong>小结</strong></p>\n<p>至此 Session 的基本使用就已经完成了，重点要掌握的是:</p>\n<ul>\n<li>\n<p>Session 的获取</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HttpSession session = request.getSession();</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>Session 常用方法的使用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void setAttribute(String name, Object o)</span><br><span class=\"line\">Object getAttribute(String name)</span><br></pre></td></tr></table></figure>\n<p>** 注意:**Session 中可以存储的是一个 Object 类型的数据，也就是说 Session 中可以存储任意数据类型。</p>\n</li>\n</ul>\n<p>介绍完 Session 的基本使用之后，那么 Session 的底层到底是如何实现一次会话两次请求之间的数据共享呢？</p>\n<h3 id=\"32-session的原理分析\"><a class=\"markdownIt-Anchor\" href=\"#32-session的原理分析\">#</a> 3.2 Session 的原理分析</h3>\n<ul>\n<li>Session 是基于 Cookie 实现的</li>\n</ul>\n<p>这句话其实不太能详细的说明 Session 的底层实现，接下来，咱们一步步来分析下 Session 的具体实现原理:</p>\n<p>(1) 前提条件</p>\n<p><img data-src=\"assets/1629429063101.png\" alt=\"1629429063101\"></p>\n<p>Session 要想实现一次会话多次请求之间的数据共享，就必须要保证多次请求获取 Session 的对象是同一个。</p>\n<p>那么它们是一个对象么？要验证这个结论也很简单，只需要在上面案例中的两个 Servlet 中分别打印下 Session 对象</p>\n<p>SessionDemo1</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/demo1&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SessionDemo1</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//存储到Session中</span></span><br><span class=\"line\">        <span class=\"comment\">//1. 获取Session对象</span></span><br><span class=\"line\">        <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> request.getSession();</span><br><span class=\"line\">        System.out.println(session);</span><br><span class=\"line\">        <span class=\"comment\">//2. 存储数据</span></span><br><span class=\"line\">        session.setAttribute(<span class=\"string\">&quot;username&quot;</span>,<span class=\"string\">&quot;zs&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>SessionDemo2</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/demo2&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SessionDemo2</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取数据，从session中</span></span><br><span class=\"line\">        <span class=\"comment\">//1. 获取Session对象</span></span><br><span class=\"line\">        <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> request.getSession();</span><br><span class=\"line\">        System.out.println(session);</span><br><span class=\"line\">        <span class=\"comment\">//2. 获取数据</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> session.getAttribute(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">        System.out.println(username);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>启动测试，分别访问</p>\n<p><code>http://localhost:8080/cookie-demo/demo1</code></p>\n<p><code>http://localhost:8080/cookie-demo/demo2</code></p>\n<p><img data-src=\"assets/1629429239409.png\" alt=\"1629429239409\"></p>\n<p>通过打印可以得到如下结论:</p>\n<ul>\n<li>两个 Servlet 类中获取的 Session 对象是同一个</li>\n<li>把 demo1 和 demo2 请求刷新多次，控制台最终打印的结果都是同一个</li>\n</ul>\n<p>那么问题又来了，如果新开一个浏览器，访问 demo1 或者 demo2, 打印在控制台的 Session 还是同一个对象么？</p>\n<p><img data-src=\"assets/1629429788264.png\" alt=\"1629429788264\"></p>\n<p><mark>注意：在一台电脑上演示的时候，如果是相同的浏览器必须要把浏览器全部关掉重新打开，才算新开的一个浏览器。</mark></p>\n<p>当然也可以使用不同的浏览器进行测试，就不需要把之前的浏览器全部关闭。</p>\n<p>测试的结果：如果是不同浏览器或者重新打开浏览器后，打印的 Session 就不一样了。</p>\n<p>所以 Session 实现的也是一次会话中的多次请求之间的数据共享。</p>\n<p>那么最主要的问题就来了，Session 是如何保证在一次会话中获取的 Session 对象是同一个呢？</p>\n<p><img data-src=\"assets/1629430754825.png\" alt=\"1629430754825\"></p>\n<p>(1) demo1 在第一次获取 session 对象的时候，session 对象会有一个唯一的标识，假如是 <code>id:10</code></p>\n<p>(2) demo1 在 session 中存入其他数据并处理完成所有业务后，需要通过 Tomcat 服务器响应结果给浏览器</p>\n<p>(3) Tomcat 服务器发现业务处理中使用了 session 对象，就会把 session 的唯一标识 <code>id:10</code>  当做一个 cookie，添加 <code>Set-Cookie:JESSIONID=10</code>  到响应头中，并响应给浏览器</p>\n<p>(4) 浏览器接收到响应结果后，会把响应头中的 coookie 数据存储到浏览器的内存中</p>\n<p>(5) 浏览器在同一会话中访问 demo2 的时候，会把 cookie 中的数据按照 <code>cookie: JESSIONID=10</code>  的格式添加到请求头中并发送给服务器 Tomcat</p>\n<p>(6) demo2 获取到请求后，从请求头中就读取 cookie 中的 JSESSIONID 值为 10，然后就会到服务器内存中寻找 <code>id:10</code>  的 session 对象，如果找到了，就直接返回该对象，如果没有则新创建一个 session 对象</p>\n<p>(7) 关闭打开浏览器后，因为浏览器的 cookie 已被销毁，所以就没有 JESSIONID 的数据，服务端获取到的 session 就是一个全新的 session 对象</p>\n<p>至此， <code>Session是基于Cookie来实现的</code> 这就话，我们就解释完了，接下来通过实例来演示下:</p>\n<p>(1) 使用 chrome 浏览器访问 <code>http://localhost:8080/cookie-demo/demo1</code> , 打开开发者模式 (F12 或 Ctrl+Shift+I), 查看 == 响应头 (Response Headers)== 数据:</p>\n<p><img data-src=\"assets/1629430891071.png\" alt=\"1629430891071\"></p>\n<p>(2) 使用 chrome 浏览器再次访问 <code>http://localhost:8080/cookie-demo/demo2</code> ，查看 == 请求头 (Request Headers)== 数据:</p>\n<p><img data-src=\"assets/1629431299195.png\" alt=\"1629431299195\"></p>\n<p><strong>小结</strong></p>\n<p>介绍完 Session 的原理，我们只需要记住</p>\n<ul>\n<li>Session 是基于 Cookie 来实现的</li>\n</ul>\n<h3 id=\"33-session的使用细节\"><a class=\"markdownIt-Anchor\" href=\"#33-session的使用细节\">#</a> 3.3 Session 的使用细节</h3>\n<p>这节我们会主要讲解两个知识，第一个是 Session 的钝化和活化，第二个是 Session 的销毁，首先来学习什么是 Session 的钝化和活化？</p>\n<h4 id=\"331-session钝化与活化\"><a class=\"markdownIt-Anchor\" href=\"#331-session钝化与活化\">#</a> 3.3.1 Session 钝化与活化</h4>\n<p>首先需要大家思考的问题是:</p>\n<ul>\n<li>服务器重启后，Session 中的数据是否还在？</li>\n</ul>\n<p>要想回答这个问题，我们可以先看下下面这幅图，</p>\n<p><img data-src=\"assets/1629438984314.png\" alt=\"1629438984314\"></p>\n<p>(1) 服务器端 AServlet 和 BServlet 共用的 session 对象应该是存储在服务器的内存中</p>\n<p>(2) 服务器重新启动后，内存中的数据应该是已经被释放，对象也应该都销毁了</p>\n<p>所以 session 数据应该也已经不存在了。但是如果 session 不存在会引发什么问题呢？</p>\n<p>举个例子说明下，</p>\n<p>(1) 用户把需要购买的商品添加到购物车，因为要实现同一个会话多次请求数据共享，所以假设把数据存入 Session 对象中</p>\n<p>(2) 用户正要付钱的时候接到一个电话，付钱的动作就搁浅了</p>\n<p>(3) 正在用户打电话的时候，购物网站因为某些原因需要重启</p>\n<p>(4) 重启后 session 数据被销毁，购物车中的商品信息也就会随之而消失</p>\n<p>(5) 用户想再次发起支付，就会出为问题</p>\n<p>所以说对于 session 的数据，我们应该做到就算服务器重启了，也应该能把数据保存下来才对。</p>\n<p>分析了这么多，那么 Tomcat 服务器在重启的时候，session 数据到底会不会保存以及是如何保存的，我们可以通过实际案例来演示下:</p>\n<p><mark>注意：这里所说的关闭和启动应该要确保是正常的关闭和启动。</mark></p>\n<p>那如何才是正常关闭 Tomcat 服务器呢？</p>\n<p>需要使用命令行的方式来启动和停止 Tomcat 服务器:</p>\n<p><mark>启动</mark>：进入到项目 pom.xml 所在目录，执行 <code>tomcat7:run</code></p>\n<p><img data-src=\"assets/1629439800328.png\" alt=\"1629439800328\"></p>\n<p><mark>停止</mark>：在启动的命令行界面，输入 <code>ctrl+c</code></p>\n<p><img data-src=\"assets/1629439879596.png\" alt=\"1629439879596\"></p>\n<p>有了上述两个正常启动和关闭的方式后，接下来的测试流程是:</p>\n<p>(1) 先启动 Tomcat 服务器</p>\n<p>(2) 访问 <code>http://localhost:8080/cookie-demo/demo1</code>  将数据存入 session 中</p>\n<p>(3) 正确停止 Tomcat 服务器</p>\n<p>(4) 再次重新启动 Tomcat 服务器</p>\n<p>(5) 访问 <code>http://localhost:8080/cookie-demo/demo2</code>  查看是否能获取到 session 中的数据</p>\n<p><img data-src=\"assets/1629440018238.png\" alt=\"1629440018238\"></p>\n<p>经过测试，会发现只要服务器是正常关闭和启动，session 中的数据是可以被保存下来的。</p>\n<p>那么 Tomcat 服务器到底是如何做到的呢？</p>\n<p>具体的原因就是：Session 的钝化和活化:</p>\n<ul>\n<li>\n<p>钝化：在服务器正常关闭后，Tomcat 会自动将 Session 数据写入硬盘的文件中</p>\n<ul>\n<li>\n<p>钝化的数据路径为: <code>项目目录\\target\\tomcat\\work\\Tomcat\\localhost\\项目名称\\SESSIONS.ser</code></p>\n<p><img data-src=\"assets/1629440576828.png\" alt=\"1629440576828\"></p>\n</li>\n</ul>\n</li>\n<li>\n<p>活化：再次启动服务器后，从文件中加载数据到 Session 中</p>\n<ul>\n<li>数据加载到 Session 中后，路径中的 <code>SESSIONS.ser</code>  文件会被删除掉</li>\n</ul>\n</li>\n</ul>\n<p>对于上述的整个过程，大家只需要了解下即可。因为所有的过程都是 Tomcat 自己完成的，不需要我们参与。</p>\n<p><strong>小结</strong></p>\n<p>Session 的钝化和活化介绍完后，需要我们注意的是:</p>\n<ul>\n<li>\n<p>session 数据存储在服务端，服务器重启后，session 数据会被保存</p>\n</li>\n<li>\n<p>浏览器被关闭启动后，重新建立的连接就已经是一个全新的会话，获取的 session 数据也是一个新的对象</p>\n</li>\n<li>\n<p>session 的数据要想共享，浏览器不能关闭，所以 session 数据不能长期保存数据</p>\n</li>\n<li>\n<p>cookie 是存储在客户端，是可以长期保存</p>\n</li>\n</ul>\n<h4 id=\"332-session销毁\"><a class=\"markdownIt-Anchor\" href=\"#332-session销毁\">#</a> 3.3.2 Session 销毁</h4>\n<p>session 的销毁会有两种方式:</p>\n<ul>\n<li>\n<p>默认情况下，无操作，30 分钟自动销毁</p>\n<ul>\n<li>\n<p>对于这个失效时间，是可以通过配置进行修改的</p>\n<ul>\n<li>\n<p>在项目的 web.xml 中配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">version</span>=<span class=\"string\">&quot;3.1&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">session-config</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">session-timeout</span>&gt;</span>100<span class=\"tag\">&lt;/<span class=\"name\">session-timeout</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">session-config</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>如果没有配置，默认是 30 分钟，默认值是在 Tomcat 的 web.xml 配置文件中写死的</p>\n<p><img data-src=\"assets/1629441687613.png\" alt=\"1629441687613\"></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>调用 Session 对象的 invalidate () 进行销毁</p>\n<ul>\n<li>\n<p>在 SessionDemo2 类中添加 session 销毁的方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/demo2&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SessionDemo2</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取数据，从session中</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1. 获取Session对象</span></span><br><span class=\"line\">        <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> request.getSession();</span><br><span class=\"line\">        System.out.println(session);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 销毁</span></span><br><span class=\"line\">        session.invalidate();</span><br><span class=\"line\">        <span class=\"comment\">//2. 获取数据</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> session.getAttribute(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">        System.out.println(username);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>启动访问测试，先访问 demo1 将数据存入到 session，再次访问 demo2 从 session 中获取数据</p>\n<p><img data-src=\"assets/1629441900843.png\" alt=\"1629441900843\"></p>\n</li>\n<li>\n<p>该销毁方法一般会在用户退出的时候，需要将 session 销毁掉。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Cookie 和 Session 小结</strong></p>\n<ul>\n<li>Cookie 和 Session 都是来完成一次会话内多次请求间<mark>数据共享</mark>的。</li>\n</ul>\n<p>所需两个对象放在一块，就需要思考:</p>\n<p>Cookie 和 Session 的区别是什么？</p>\n<p>Cookie 和 Session 的应用场景分别是什么？</p>\n<ul>\n<li>区别:\n<ul>\n<li>存储位置：Cookie 是将数据存储在客户端，Session 将数据存储在服务端</li>\n<li>安全性：Cookie 不安全，Session 安全</li>\n<li>数据大小：Cookie 最大 3KB，Session 无大小限制</li>\n<li>存储时间：Cookie 可以通过 setMaxAge () 长期存储，Session 默认 30 分钟</li>\n<li>服务器性能：Cookie 不占服务器资源，Session 占用服务器资源</li>\n</ul>\n</li>\n<li>应用场景:\n<ul>\n<li>购物车：使用 Cookie 来存储</li>\n<li>以登录用户的名称展示：使用 Session 来存储</li>\n<li>记住我功能：使用 Cookie 来存储</li>\n<li>验证码：使用 session 来存储</li>\n</ul>\n</li>\n<li>结论\n<ul>\n<li>Cookie 是用来保证用户在未登录情况下的身份识别</li>\n<li>Session 是用来保存用户登录后的数据</li>\n</ul>\n</li>\n</ul>\n<p>介绍完 Cookie 和 Session 以后，具体用哪个还是需要根据具体的业务进行具体分析。</p>\n<h2 id=\"4用户登录注册案例\"><a class=\"markdownIt-Anchor\" href=\"#4用户登录注册案例\">#</a> 4，用户登录注册案例</h2>\n<h3 id=\"41-需求分析\"><a class=\"markdownIt-Anchor\" href=\"#41-需求分析\">#</a> 4.1 需求分析</h3>\n<p>需求说明：</p>\n<ol>\n<li>\n<p>完成用户登录功能，如果用户勾选 “记住用户” ，则下次访问登录页面<mark>自动</mark>填充用户名密码</p>\n</li>\n<li>\n<p>完成注册功能，并实现<mark>验证码</mark>功能</p>\n</li>\n</ol>\n<p><img data-src=\"assets/1629442826981.png\" alt=\"1629442826981\"></p>\n<h3 id=\"42-用户登录功能\"><a class=\"markdownIt-Anchor\" href=\"#42-用户登录功能\">#</a> 4.2 用户登录功能</h3>\n<ol>\n<li>需求:</li>\n</ol>\n<p><img data-src=\"assets/1629443152010.png\" alt=\"1629443152010\"></p>\n<ul>\n<li>用户登录成功后，跳转到列表页面，并在页面上展示当前登录的用户名称</li>\n<li>用户登录失败后，跳转回登录页面，并在页面上展示对应的错误信息</li>\n</ul>\n<ol start=\"2\">\n<li>实现流程分析</li>\n</ol>\n<p><img data-src=\"assets/1629443379531.png\" alt=\"1629443379531\"></p>\n<p>(1) 前端通过表单发送请求和数据给 Web 层的 LoginServlet</p>\n<p>(2) 在 LoginServlet 中接收请求和数据 [用户名和密码]</p>\n<p>(3) LoginServlet 接收到请求和数据后，调用 Service 层完成根据用户名和密码查询用户对象</p>\n<p>(4) 在 Service 层需要编写 UserService 类，在类中实现 login 方法，方法中调用 Dao 层的 UserMapper</p>\n<p>(5) 在 UserMapper 接口中，声明一个根据用户名和密码查询用户信息的方法</p>\n<p>(6) Dao 层把数据查询出来以后，将返回数据封装到 User 对象，将对象交给 Service 层</p>\n<p>(7) Service 层将数据返回给 Web 层</p>\n<p>(8) Web 层获取到 User 对象后，判断 User 对象，如果为 Null, 则将错误信息响应给登录页面，如果不为 Null，则跳转到列表页面，并把当前登录用户的信息存入 Session 携带到列表页面。</p>\n<ol start=\"3\">\n<li>具体实现</li>\n</ol>\n<p>(1) 完成 Dao 层的代码编写</p>\n<p>(1.1) 将 <code>04-资料\\1. 登录注册案例\\2. MyBatis环境\\UserMapper.java</code>  放到 com.itheima.mapper` 包下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserMapper</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据用户名和密码查询用户对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> username</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> password</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Select(&quot;select * from tb_user where username = #&#123;username&#125; and password = #&#123;password&#125;&quot;)</span></span><br><span class=\"line\">    User <span class=\"title function_\">select</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;username&quot;)</span> String username,<span class=\"meta\">@Param(&quot;password&quot;)</span>  String password)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据用户名查询用户对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> username</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Select(&quot;select * from tb_user where username = #&#123;username&#125;&quot;)</span></span><br><span class=\"line\">    User <span class=\"title function_\">selectByUsername</span><span class=\"params\">(String username)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加用户</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> user</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Insert(&quot;insert into tb_user values(null,#&#123;username&#125;,#&#123;password&#125;)&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(User user)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(1.2) 将 <code>04-资料\\1. 登录注册案例\\2. MyBatis环境\\User.java</code>  放到 <code>com.itheima.pojo</code>  包下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">User</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getId</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setId</span><span class=\"params\">(Integer id)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getUsername</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setUsername</span><span class=\"params\">(String username)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.username = username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPassword</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setPassword</span><span class=\"params\">(String password)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.password = password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;User&#123;&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;id=&quot;</span> + id +</span><br><span class=\"line\">                <span class=\"string\">&quot;, username=&#x27;&quot;</span> + username + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;, password=&#x27;&quot;</span> + password + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(1.3) 将 <code>04-资料\\1. 登录注册案例\\2. MyBatis环境\\UserMapper.xml</code>  放入到 resources/com/itheima/mapper` 目录下:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.itheima.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>(2) 完成 Service 层的代码编写</p>\n<p>(2.1) 在 <code>com.itheima.service</code>  包下，创建 UserService 类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.使用工具类获取SqlSessionFactory</span></span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">factory</span> <span class=\"operator\">=</span> SqlSessionFactoryUtils.getSqlSessionFactory();</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 登录方法</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> username</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> password</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> User <span class=\"title function_\">login</span><span class=\"params\">(String username,String password)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//2. 获取SqlSession</span></span><br><span class=\"line\">        <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">        <span class=\"comment\">//3. 获取UserMapper</span></span><br><span class=\"line\">        <span class=\"type\">UserMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">        <span class=\"comment\">//4. 调用方法</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> mapper.select(username, password);</span><br><span class=\"line\">        <span class=\"comment\">//释放资源</span></span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(3) 完成页面和 Web 层的代码编写</p>\n<p>(3.1) 将 <code>04-资料\\1. 登录注册案例\\1. 静态页面</code> 拷贝到项目的 <code>webapp</code>  目录下:</p>\n<p><img data-src=\"assets/1629444649629.png\" alt=\"1629444649629\"></p>\n<p>(3.2) 将 login.html 内容修改成 login.jsp</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;login&lt;/title&gt;</span><br><span class=\"line\">    &lt;link href=<span class=\"string\">&quot;css/login.css&quot;</span> rel=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id=<span class=\"string\">&quot;loginDiv&quot;</span> style=<span class=\"string\">&quot;height: 350px&quot;</span>&gt;</span><br><span class=\"line\">    &lt;form action=<span class=\"string\">&quot;/brand-demo/loginServlet&quot;</span> method=<span class=\"string\">&quot;post&quot;</span> id=<span class=\"string\">&quot;form&quot;</span>&gt;</span><br><span class=\"line\">        &lt;h1 id=<span class=\"string\">&quot;loginMsg&quot;</span>&gt;LOGIN IN&lt;/h1&gt;</span><br><span class=\"line\">        &lt;div id=<span class=\"string\">&quot;errorMsg&quot;</span>&gt;用户名或密码不正确&lt;/div&gt;</span><br><span class=\"line\">        &lt;p&gt;Username:&lt;input id=<span class=\"string\">&quot;username&quot;</span> name=<span class=\"string\">&quot;username&quot;</span> type=<span class=\"string\">&quot;text&quot;</span>&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;Password:&lt;input id=<span class=\"string\">&quot;password&quot;</span> name=<span class=\"string\">&quot;password&quot;</span> type=<span class=\"string\">&quot;password&quot;</span>&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;Remember:&lt;input id=<span class=\"string\">&quot;remember&quot;</span> name=<span class=\"string\">&quot;remember&quot;</span> type=<span class=\"string\">&quot;checkbox&quot;</span>&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;div id=<span class=\"string\">&quot;subDiv&quot;</span>&gt;</span><br><span class=\"line\">            &lt;input type=<span class=\"string\">&quot;submit&quot;</span> class=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;login up&quot;</span>&gt;</span><br><span class=\"line\">            &lt;input type=<span class=\"string\">&quot;reset&quot;</span> class=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;reset&quot;</span>&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">            &lt;a href=<span class=\"string\">&quot;register.html&quot;</span>&gt;没有账号？&lt;/a&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>(3.3) 创建 LoginServlet 类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/loginServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">UserService</span> <span class=\"variable\">service</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserService</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 获取用户名和密码</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\">   </span><br><span class=\"line\">        <span class=\"comment\">//2. 调用service查询</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> service.login(username, password);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3. 判断</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(user != <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//登录成功，跳转到查询所有的BrandServlet</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">//将登陆成功后的user对象，存储到session</span></span><br><span class=\"line\">            <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> request.getSession();</span><br><span class=\"line\">            session.setAttribute(<span class=\"string\">&quot;user&quot;</span>,user);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">contextPath</span> <span class=\"operator\">=</span> request.getContextPath();</span><br><span class=\"line\">            response.sendRedirect(contextPath+<span class=\"string\">&quot;/selectAllServlet&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 登录失败,</span></span><br><span class=\"line\">            <span class=\"comment\">// 存储错误信息到request</span></span><br><span class=\"line\">            request.setAttribute(<span class=\"string\">&quot;login_msg&quot;</span>,<span class=\"string\">&quot;用户名或密码错误&quot;</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 跳转到login.jsp</span></span><br><span class=\"line\">            request.getRequestDispatcher(<span class=\"string\">&quot;/login.jsp&quot;</span>).forward(request,response);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(3.4) 在 brand.jsp 中<body>标签下添加欢迎当前用户的提示信息:</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h1&gt;$&#123;user.username&#125;,欢迎您&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n<p>(3.5) 修改 login.jsp，将错误信息使用 EL 表达式来获取</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改前内容:&lt;div id=<span class=\"string\">&quot;errorMsg&quot;</span>&gt;用户名或密码不正确&lt;/div&gt;</span><br><span class=\"line\">修改后内容: &lt;div id=<span class=\"string\">&quot;errorMsg&quot;</span>&gt;$&#123;login_msg&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>(4) 启动，访问测试</p>\n<p>(4.1) 进入登录页面，输入错误的用户名或密码</p>\n<p><img data-src=\"assets/1629445376407.png\" alt=\"1629445376407\"></p>\n<p>(4.2) 输入正确的用户和密码信息</p>\n<p><img data-src=\"assets/1629445415216.png\" alt=\"1629445415216\"></p>\n<p><strong>小结</strong></p>\n<ul>\n<li>在 LoginServlet 中，将登录成功的用户数据存入 session 中，方法在列表页面中获取当前登录用户信息进行展示</li>\n<li>在 LoginServlet 中，将登录失败的错误信息存入到 request 中，如果存入到 session 中就会出现这次会话的所有请求都有登录失败的错误信息，这个是不需要的，所以不用存入到 session 中</li>\n</ul>\n<h3 id=\"43-记住我-设置cookie\"><a class=\"markdownIt-Anchor\" href=\"#43-记住我-设置cookie\">#</a> 4.3 记住我 - 设置 Cookie</h3>\n<ol>\n<li>需求:</li>\n</ol>\n<p>如果用户勾选 “记住用户” ，则下次访问登陆页面自动填充用户名密码。这样可以提升用户的体验。</p>\n<p><img data-src=\"assets/1629445835281.png\" alt=\"1629445835281\"></p>\n<p>对应上面这个需求，最大的问题就是：如何自动填充用户名和密码？</p>\n<ol start=\"2\">\n<li>实现流程分析</li>\n</ol>\n<p>因为 <code>记住我</code> 功能要实现的效果是，就算用户把浏览器关闭过几天再来访问也能自动填充，所以需要将登陆信息存入一个可以长久保存，并且能够在浏览器关闭重新启动后依然有效的地方，就是我们前面讲的<mark> Cookie</mark>, 所以:</p>\n<ul>\n<li>\n<p>将用户名和密码写入<mark> Cookie</mark> 中，并且持久化存储 Cookie, 下次访问浏览器会自动携带 Cookie</p>\n</li>\n<li>\n<p>在页面获取 Cookie 数据后，设置到用户名和密码框中</p>\n</li>\n<li>\n<p>何时写入 Cookie?</p>\n<ul>\n<li>用户必须登陆成功后才需要写</li>\n<li>用户必须在登录页面勾选了 <code>记住我</code> 的复选框</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"assets/1629446248511.png\" alt=\"1629446248511\"></p>\n<p>(1) 前端需要在发送请求和数据的时候，多携带一个用户是否勾选 <code>Remember</code>  的数据</p>\n<p>(2) LoginServlet 获取到数据后，调用 Service 完成用户名和密码的判定</p>\n<p>(3) 登录成功，并且用户在前端勾选了 <code>记住我</code> ，需要往 Cookie 中写入用户名和密码的数据，并设置 Cookie 存活时间</p>\n<p>(4) 设置成功后，将数据响应给前端</p>\n<ol start=\"3\">\n<li>具体实现</li>\n</ol>\n<p>(1) 在 login.jsp 为复选框设置值</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;login&lt;/title&gt;</span><br><span class=\"line\">    &lt;link href=<span class=\"string\">&quot;css/login.css&quot;</span> rel=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id=<span class=\"string\">&quot;loginDiv&quot;</span> style=<span class=\"string\">&quot;height: 350px&quot;</span>&gt;</span><br><span class=\"line\">    &lt;form action=<span class=\"string\">&quot;/brand-demo/loginServlet&quot;</span> method=<span class=\"string\">&quot;post&quot;</span> id=<span class=\"string\">&quot;form&quot;</span>&gt;</span><br><span class=\"line\">        &lt;h1 id=<span class=\"string\">&quot;loginMsg&quot;</span>&gt;LOGIN IN&lt;/h1&gt;</span><br><span class=\"line\">        &lt;div id=<span class=\"string\">&quot;errorMsg&quot;</span>&gt;$&#123;login_msg&#125;&lt;/div&gt;</span><br><span class=\"line\">        &lt;p&gt;Username:&lt;input id=<span class=\"string\">&quot;username&quot;</span> name=<span class=\"string\">&quot;username&quot;</span> type=<span class=\"string\">&quot;text&quot;</span>&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;Password:&lt;input id=<span class=\"string\">&quot;password&quot;</span> name=<span class=\"string\">&quot;password&quot;</span> type=<span class=\"string\">&quot;password&quot;</span>&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;Remember:&lt;input id=<span class=\"string\">&quot;remember&quot;</span> name=<span class=\"string\">&quot;remember&quot;</span> value=<span class=\"string\">&quot;1&quot;</span> type=<span class=\"string\">&quot;checkbox&quot;</span>&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;div id=<span class=\"string\">&quot;subDiv&quot;</span>&gt;</span><br><span class=\"line\">            &lt;input type=<span class=\"string\">&quot;submit&quot;</span> class=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;login up&quot;</span>&gt;</span><br><span class=\"line\">            &lt;input type=<span class=\"string\">&quot;reset&quot;</span> class=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;reset&quot;</span>&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">            &lt;a href=<span class=\"string\">&quot;register.html&quot;</span>&gt;没有账号？&lt;/a&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>(2) 在 LoginServlet 获取复选框的值并在登录成功后进行设置 Cookie</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/loginServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LoginServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">UserService</span> <span class=\"variable\">service</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserService</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 获取用户名和密码</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取复选框数据</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">remember</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;remember&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 调用service查询</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> service.login(username, password);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3. 判断</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(user != <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//登录成功，跳转到查询所有的BrandServlet</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//判断用户是否勾选记住我，字符串写前面是为了避免出现空指针异常</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"string\">&quot;1&quot;</span>.equals(remember))&#123;</span><br><span class=\"line\">                <span class=\"comment\">//勾选了，发送Cookie</span></span><br><span class=\"line\">                <span class=\"comment\">//1. 创建Cookie对象</span></span><br><span class=\"line\">                <span class=\"type\">Cookie</span> <span class=\"variable\">c_username</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Cookie</span>(<span class=\"string\">&quot;username&quot;</span>,username);</span><br><span class=\"line\">                <span class=\"type\">Cookie</span> <span class=\"variable\">c_password</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Cookie</span>(<span class=\"string\">&quot;password&quot;</span>,password);</span><br><span class=\"line\">                <span class=\"comment\">// 设置Cookie的存活时间</span></span><br><span class=\"line\">                c_username.setMaxAge( <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span> * <span class=\"number\">7</span>);</span><br><span class=\"line\">                c_password.setMaxAge( <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span> * <span class=\"number\">7</span>);</span><br><span class=\"line\">                <span class=\"comment\">//2. 发送</span></span><br><span class=\"line\">                response.addCookie(c_username);</span><br><span class=\"line\">                response.addCookie(c_password);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//将登陆成功后的user对象，存储到session</span></span><br><span class=\"line\">            <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> request.getSession();</span><br><span class=\"line\">            session.setAttribute(<span class=\"string\">&quot;user&quot;</span>,user);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">contextPath</span> <span class=\"operator\">=</span> request.getContextPath();</span><br><span class=\"line\">            response.sendRedirect(contextPath+<span class=\"string\">&quot;/selectAllServlet&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 登录失败,</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 存储错误信息到request</span></span><br><span class=\"line\">            request.setAttribute(<span class=\"string\">&quot;login_msg&quot;</span>,<span class=\"string\">&quot;用户名或密码错误&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 跳转到login.jsp</span></span><br><span class=\"line\">            request.getRequestDispatcher(<span class=\"string\">&quot;/login.jsp&quot;</span>).forward(request,response);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(3) 启动访问测试，</p>\n<p>只有当前用户名和密码输入正确，并且勾选了 Remeber 的复选框，在响应头中才可以看得 cookie 的相关数据</p>\n<p><img data-src=\"assets/1629447232217.png\" alt=\"1629447232217\"></p>\n<h3 id=\"44-记住我-获取cookie\"><a class=\"markdownIt-Anchor\" href=\"#44-记住我-获取cookie\">#</a> 4.4 记住我 - 获取 Cookie</h3>\n<ol>\n<li>需求</li>\n</ol>\n<p>登录成功并勾选了 Remeber 后，后端返回给前端的 Cookie 数据就已经存储好了，接下来就需要在页面获取 Cookie 中的数据，并把数据设置到登录页面的用户名和密码框中。</p>\n<p><img data-src=\"assets/1629449100282.png\" alt=\"1629449100282\"></p>\n<p>如何在页面直接获取 Cookie 中的值呢？</p>\n<ol start=\"2\">\n<li>实现流程分析</li>\n</ol>\n<p>在页面可以使用 EL 表达式，${cookie.<mark>key</mark>.value}</p>\n<p>key: 指的是存储在 cookie 中的键名称</p>\n<p><img data-src=\"assets/1629449234735.png\" alt=\"1629449234735\"></p>\n<p>(1) 在 login.jsp 用户名的表单输入框使用 value 值给表单元素添加默认值，value 可以使用 <code>$&#123;cookie.username.value&#125;</code></p>\n<p>(2) 在 login.jsp 密码的表单输入框使用 value 值给表单元素添加默认值，value 可以使用 <code>$&#123;cookie.password.value&#125;</code></p>\n<ol start=\"3\">\n<li>具体实现</li>\n</ol>\n<p>(1) 修改 login.jsp 页面</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;login&lt;/title&gt;</span><br><span class=\"line\">    &lt;link href=<span class=\"string\">&quot;css/login.css&quot;</span> rel=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div id=<span class=\"string\">&quot;loginDiv&quot;</span> style=<span class=\"string\">&quot;height: 350px&quot;</span>&gt;</span><br><span class=\"line\">    &lt;form action=<span class=\"string\">&quot;/brand-demo/loginServlet&quot;</span> method=<span class=\"string\">&quot;post&quot;</span> id=<span class=\"string\">&quot;form&quot;</span>&gt;</span><br><span class=\"line\">        &lt;h1 id=<span class=\"string\">&quot;loginMsg&quot;</span>&gt;LOGIN IN&lt;/h1&gt;</span><br><span class=\"line\">        &lt;div id=<span class=\"string\">&quot;errorMsg&quot;</span>&gt;$&#123;login_msg&#125;&lt;/div&gt;</span><br><span class=\"line\">        &lt;p&gt;Username:&lt;input id=<span class=\"string\">&quot;username&quot;</span> name=<span class=\"string\">&quot;username&quot;</span> value=<span class=\"string\">&quot;$&#123;cookie.username.value&#125;&quot;</span> type=<span class=\"string\">&quot;text&quot;</span>&gt;&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;p&gt;Password:&lt;input id=<span class=\"string\">&quot;password&quot;</span> name=<span class=\"string\">&quot;password&quot;</span> value=<span class=\"string\">&quot;$&#123;cookie.password.value&#125;&quot;</span> type=<span class=\"string\">&quot;password&quot;</span>&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;Remember:&lt;input id=<span class=\"string\">&quot;remember&quot;</span> name=<span class=\"string\">&quot;remember&quot;</span> value=<span class=\"string\">&quot;1&quot;</span> type=<span class=\"string\">&quot;checkbox&quot;</span>&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;div id=<span class=\"string\">&quot;subDiv&quot;</span>&gt;</span><br><span class=\"line\">            &lt;input type=<span class=\"string\">&quot;submit&quot;</span> class=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;login up&quot;</span>&gt;</span><br><span class=\"line\">            &lt;input type=<span class=\"string\">&quot;reset&quot;</span> class=<span class=\"string\">&quot;button&quot;</span> value=<span class=\"string\">&quot;reset&quot;</span>&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;</span><br><span class=\"line\">            &lt;a href=<span class=\"string\">&quot;register.html&quot;</span>&gt;没有账号？&lt;/a&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>访问测试，重新访问登录页面，就可以看得用户和密码已经被填充。</li>\n</ol>\n<p><img data-src=\"assets/1629449530886.png\" alt=\"1629449530886\"></p>\n<h3 id=\"45-用户注册功能\"><a class=\"markdownIt-Anchor\" href=\"#45-用户注册功能\">#</a> 4.5 用户注册功能</h3>\n<ol>\n<li>需求</li>\n</ol>\n<ul>\n<li>注册功能：保存用户信息到数据库</li>\n<li>验证码功能\n<ul>\n<li>展示验证码：展示验证码图片，并可以点击切换</li>\n<li>校验验证码：验证码填写不正确，则注册失败</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"assets/1629449648793.png\" alt=\"1629449648793\"></p>\n<ol start=\"2\">\n<li>实现流程分析</li>\n</ol>\n<p><img data-src=\"assets/1629449720005.png\" alt=\"1629449720005\"></p>\n<p>(1) 前端通过表单发送请求和数据给 Web 层的 RegisterServlet</p>\n<p>(2) 在 RegisterServlet 中接收请求和数据 [用户名和密码]</p>\n<p>(3) RegisterServlet 接收到请求和数据后，调用 Service 层完成用户信息的保存</p>\n<p>(4) 在 Service 层需要编写 UserService 类，在类中实现 register 方法，需要判断用户是否已经存在，如果不存在，则完成用户数据的保存</p>\n<p>(5) 在 UserMapper 接口中，声明两个方法，一个是根据用户名查询用户信息方法，另一个是保存用户信息方法</p>\n<p>(6) 在 UserService 类中保存成功则返回 true，失败则返回 false, 将数据返回给 Web 层</p>\n<p>(7) Web 层获取到结果后，如果返回的是 true, 则提示 <code>注册成功</code> ，并转发到登录页面，如果返回 false 则提示 <code>用户名已存在</code> 并转发到注册页面</p>\n<ol start=\"3\">\n<li>具体实现</li>\n</ol>\n<p>(1) Dao 层代码参考资料中的内容完成</p>\n<p>(2) 编写 Service 层代码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.使用工具类获取SqlSessionFactory</span></span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">factory</span> <span class=\"operator\">=</span> SqlSessionFactoryUtils.getSqlSessionFactory();</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 注册方法</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">register</span><span class=\"params\">(User user)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//2. 获取SqlSession</span></span><br><span class=\"line\">        <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">        <span class=\"comment\">//3. 获取UserMapper</span></span><br><span class=\"line\">        <span class=\"type\">UserMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">        <span class=\"comment\">//4. 判断用户名是否存在</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">u</span> <span class=\"operator\">=</span> mapper.selectByUsername(user.getUsername());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(u == <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 用户名不存在，注册</span></span><br><span class=\"line\">            mapper.add(user);</span><br><span class=\"line\">            sqlSession.commit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> u == <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(3) 完成页面和 Web 层的代码编写</p>\n<p>(3.1) 将 register.html 内容修改成 register.jsp</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=<span class=\"string\">&quot;en&quot;</span>&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;欢迎注册&lt;/title&gt;</span><br><span class=\"line\">    &lt;link href=<span class=\"string\">&quot;css/register.css&quot;</span> rel=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;div class=<span class=\"string\">&quot;form-div&quot;</span>&gt;</span><br><span class=\"line\">    &lt;div class=<span class=\"string\">&quot;reg-content&quot;</span>&gt;</span><br><span class=\"line\">        &lt;h1&gt;欢迎注册&lt;/h1&gt;</span><br><span class=\"line\">        &lt;span&gt;已有帐号？&lt;/span&gt; &lt;a href=<span class=\"string\">&quot;login.html&quot;</span>&gt;登录&lt;/a&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;form id=<span class=\"string\">&quot;reg-form&quot;</span> action=<span class=\"string\">&quot;/brand-demo/registerServlet&quot;</span> method=<span class=\"string\">&quot;post&quot;</span>&gt;</span><br><span class=\"line\">        &lt;table&gt;</span><br><span class=\"line\">            &lt;tr&gt;</span><br><span class=\"line\">                &lt;td&gt;用户名&lt;/td&gt;</span><br><span class=\"line\">                &lt;td class=<span class=\"string\">&quot;inputs&quot;</span>&gt;</span><br><span class=\"line\">                    &lt;input name=<span class=\"string\">&quot;username&quot;</span> type=<span class=\"string\">&quot;text&quot;</span> id=<span class=\"string\">&quot;username&quot;</span>&gt;</span><br><span class=\"line\">                    &lt;br&gt;</span><br><span class=\"line\">                    &lt;span id=<span class=\"string\">&quot;username_err&quot;</span> class=<span class=\"string\">&quot;err_msg&quot;</span> style=<span class=\"string\">&quot;display:none&quot;</span>&gt;用户名不太受欢迎&lt;/span&gt;</span><br><span class=\"line\">                &lt;/td&gt;</span><br><span class=\"line\">            &lt;/tr&gt;</span><br><span class=\"line\">            &lt;tr&gt;</span><br><span class=\"line\">                &lt;td&gt;密码&lt;/td&gt;</span><br><span class=\"line\">                &lt;td class=<span class=\"string\">&quot;inputs&quot;</span>&gt;</span><br><span class=\"line\">                    &lt;input name=<span class=\"string\">&quot;password&quot;</span> type=<span class=\"string\">&quot;password&quot;</span> id=<span class=\"string\">&quot;password&quot;</span>&gt;</span><br><span class=\"line\">                    &lt;br&gt;</span><br><span class=\"line\">                    &lt;span id=<span class=\"string\">&quot;password_err&quot;</span> class=<span class=\"string\">&quot;err_msg&quot;</span> style=<span class=\"string\">&quot;display: none&quot;</span>&gt;密码格式有误&lt;/span&gt;</span><br><span class=\"line\">                &lt;/td&gt;</span><br><span class=\"line\">            &lt;/tr&gt;</span><br><span class=\"line\">            &lt;tr&gt;</span><br><span class=\"line\">                &lt;td&gt;验证码&lt;/td&gt;</span><br><span class=\"line\">                &lt;td class=<span class=\"string\">&quot;inputs&quot;</span>&gt;</span><br><span class=\"line\">                    &lt;input name=<span class=\"string\">&quot;checkCode&quot;</span> type=<span class=\"string\">&quot;text&quot;</span> id=<span class=\"string\">&quot;checkCode&quot;</span>&gt;</span><br><span class=\"line\">                    &lt;img src=<span class=\"string\">&quot;imgs/a.jpg&quot;</span>&gt;</span><br><span class=\"line\">                    &lt;a href=<span class=\"string\">&quot;#&quot;</span> id=<span class=\"string\">&quot;changeImg&quot;</span> &gt;看不清？&lt;/a&gt;</span><br><span class=\"line\">                &lt;/td&gt;</span><br><span class=\"line\">            &lt;/tr&gt;</span><br><span class=\"line\">        &lt;/table&gt;</span><br><span class=\"line\">        &lt;div class=<span class=\"string\">&quot;buttons&quot;</span>&gt;</span><br><span class=\"line\">            &lt;input value=<span class=\"string\">&quot;注 册&quot;</span> type=<span class=\"string\">&quot;submit&quot;</span> id=<span class=\"string\">&quot;reg_btn&quot;</span>&gt;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">        &lt;br class=<span class=\"string\">&quot;clear&quot;</span>&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>(3.2) 编写 RegisterServlet</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/registerServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RegisterServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">UserService</span> <span class=\"variable\">service</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserService</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">       <span class=\"comment\">//1. 获取用户名和密码数据</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">        user.setUsername(username);</span><br><span class=\"line\">        user.setPassword(password);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 调用service 注册</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> service.register(user);</span><br><span class=\"line\">        <span class=\"comment\">//3. 判断注册成功与否</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag)&#123;</span><br><span class=\"line\">             <span class=\"comment\">//注册功能，跳转登陆页面</span></span><br><span class=\"line\">            request.setAttribute(<span class=\"string\">&quot;register_msg&quot;</span>,<span class=\"string\">&quot;注册成功，请登录&quot;</span>);</span><br><span class=\"line\">            request.getRequestDispatcher(<span class=\"string\">&quot;/login.jsp&quot;</span>).forward(request,response);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//注册失败，跳转到注册页面</span></span><br><span class=\"line\"></span><br><span class=\"line\">            request.setAttribute(<span class=\"string\">&quot;register_msg&quot;</span>,<span class=\"string\">&quot;用户名已存在&quot;</span>);</span><br><span class=\"line\">            request.getRequestDispatcher(<span class=\"string\">&quot;/register.jsp&quot;</span>).forward(request,response);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(3.3) 需要在页面上展示后台返回的错误信息，需要修改 register.jsp</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改前:&lt;span id=<span class=\"string\">&quot;username_err&quot;</span> class=<span class=\"string\">&quot;err_msg&quot;</span> style=<span class=\"string\">&quot;display:none&quot;</span>&gt;用户名不太受欢迎&lt;/span&gt;</span><br><span class=\"line\">修改后:&lt;span id=<span class=\"string\">&quot;username_err&quot;</span> class=<span class=\"string\">&quot;err_msg&quot;</span>&gt;$&#123;register_msg&#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<p>(3.4) 如果注册成功，需要把成功信息展示在登录页面，所以也需要修改 login.jsp</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改前:&lt;div id=<span class=\"string\">&quot;errorMsg&quot;</span>&gt;$&#123;login_msg&#125;&lt;/div&gt;</span><br><span class=\"line\">修改后:&lt;div id=<span class=\"string\">&quot;errorMsg&quot;</span>&gt;$&#123;login_msg&#125; $&#123;register_msg&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>(3.5) 修改 login.jsp，将注册跳转地址修改为 register.jsp</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改前：&lt;a href=<span class=\"string\">&quot;register.html&quot;</span>&gt;没有账号？&lt;/a&gt;</span><br><span class=\"line\">修改后: &lt;a href=<span class=\"string\">&quot;register.jsp&quot;</span>&gt;没有账号？&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n<p>(3.6) 启动测试，</p>\n<p>如果是注册的用户信息已经存在:</p>\n<p><img data-src=\"assets/1629451535605.png\" alt=\"1629451535605\"></p>\n<p>如果注册的用户信息不存在，注册成功:</p>\n<p><img data-src=\"assets/1629451567428.png\" alt=\"1629451567428\"></p>\n<h3 id=\"46-验证码-展示\"><a class=\"markdownIt-Anchor\" href=\"#46-验证码-展示\">#</a> 4.6 验证码 - 展示</h3>\n<ol>\n<li>需求分析</li>\n</ol>\n<p>展示验证码：展示验证码图片，并可以点击切换</p>\n<p><img data-src=\"assets/1629451646831.png\" alt=\"1629451646831\"></p>\n<p>验证码的生成是通过工具类来实现的，具体的工具类参考</p>\n<p><code>04-资料\\1. 登录注册案例\\CheckCodeUtil.java</code></p>\n<p>在该工具类中编写 main 方法进行测试:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//生成验证码的图片位置</span></span><br><span class=\"line\">    <span class=\"type\">OutputStream</span> <span class=\"variable\">fos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;d://a.jpg&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//checkCode为最终验证码的数据</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">checkCode</span> <span class=\"operator\">=</span> CheckCodeUtil.outputVerifyImage(<span class=\"number\">100</span>, <span class=\"number\">50</span>, fos, <span class=\"number\">4</span>);</span><br><span class=\"line\">    System.out.println(checkCode);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>生成完验证码以后，我们就可以知晓:</p>\n<ul>\n<li>验证码就是使用 Java 代码生成的一张图片</li>\n<li>验证码的作用：防止机器自动注册，攻击服务器</li>\n</ul>\n<ol start=\"2\">\n<li>实现流程分析</li>\n</ol>\n<p><img data-src=\"assets/1629452623289.png\" alt=\"1629452623289\"></p>\n<p>(1) 前端发送请求给 CheckCodeServlet</p>\n<p>(2) CheckCodeServlet 接收到请求后，生成验证码图片，将图片用 Reponse 对象的输出流写回到前端</p>\n<p>思考：如何将图片写回到前端浏览器呢？</p>\n<p>(1) Java 中已经有工具类生成验证码图片，测试类中只是把图片生成到磁盘上<br>\n (2) 生成磁盘的过程中使用的是 OutputStream 流，如何把这个图片生成在页面呢？<br>\n(3) 前面在将 Reponse 对象的时候，它有一个方法可以获取其字节输出流，getOutputStream ()<br>\n(4) 综上所述，我们可以把写往磁盘的流对象更好成 Response 的字节流，即可完成图片响应给前端</p>\n<ol start=\"3\">\n<li>具体实现</li>\n</ol>\n<p>(1) 修改 Register.jsp 页面，将验证码的图片从后台获取</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;tr&gt;</span><br><span class=\"line\">    &lt;td&gt;验证码&lt;/td&gt;</span><br><span class=\"line\">        &lt;td class=<span class=\"string\">&quot;inputs&quot;</span>&gt;</span><br><span class=\"line\">        &lt;input name=<span class=\"string\">&quot;checkCode&quot;</span> type=<span class=\"string\">&quot;text&quot;</span> id=<span class=\"string\">&quot;checkCode&quot;</span>&gt;</span><br><span class=\"line\">        &lt;img id=<span class=\"string\">&quot;checkCodeImg&quot;</span> src=<span class=\"string\">&quot;/brand-demo/checkCodeServlet&quot;</span>&gt;</span><br><span class=\"line\">        &lt;a href=<span class=\"string\">&quot;#&quot;</span> id=<span class=\"string\">&quot;changeImg&quot;</span> &gt;看不清？&lt;/a&gt;</span><br><span class=\"line\">    &lt;/td&gt;</span><br><span class=\"line\">&lt;/tr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    document.getElementById(<span class=\"string\">&quot;changeImg&quot;</span>).onclick = function () &#123;</span><br><span class=\"line\">       \t<span class=\"comment\">//路径后面添加时间戳的目的是避免浏览器进行缓存静态资源</span></span><br><span class=\"line\">        document.getElementById(<span class=\"string\">&quot;checkCodeImg&quot;</span>).src = <span class=\"string\">&quot;/brand-demo/checkCodeServlet?&quot;</span>+<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().getMilliseconds();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>(2) 编写 CheckCodeServlet 类，用来接收请求生成验证码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/checkCodeServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CheckCodeServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 生成验证码</span></span><br><span class=\"line\">        <span class=\"type\">ServletOutputStream</span> <span class=\"variable\">os</span> <span class=\"operator\">=</span> response.getOutputStream();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">checkCode</span> <span class=\"operator\">=</span> CheckCodeUtil.outputVerifyImage(<span class=\"number\">100</span>, <span class=\"number\">50</span>, os, <span class=\"number\">4</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"47验证码-校验\"><a class=\"markdownIt-Anchor\" href=\"#47验证码-校验\">#</a> 4.7 验证码 - 校验</h3>\n<ol>\n<li>需求</li>\n</ol>\n<ul>\n<li>判断程序生成的验证码 和 用户输入的验证码 是否一样，如果不一样，则阻止注册</li>\n<li>验证码图片访问和提交注册表单是<mark>两次</mark>请求，所以要将程序生成的验证码存入 Session 中</li>\n</ul>\n<p><img data-src=\"assets/1629452835571.png\" alt=\"1629452835571\"></p>\n<p>思考：为什么要把验证码数据存入到 Session 中呢？</p>\n<ul>\n<li>生成验证码和校验验证码是两次请求，此处就需要在一个会话的两次请求之间共享数据</li>\n<li>验证码属于安全数据类的，所以我们选中 Session 来存储验证码数据。</li>\n</ul>\n<ol start=\"2\">\n<li>实现流程分析</li>\n</ol>\n<p><img data-src=\"assets/1629452966499.png\" alt=\"1629452966499\"></p>\n<p>(1) 在 CheckCodeServlet 中生成验证码的时候，将验证码数据存入 Session 对象</p>\n<p>(2) 前端将验证码和注册数据提交到后台，交给 RegisterServlet 类</p>\n<p>(3) RegisterServlet 类接收到请求和数据后，其中就有验证码，和 Session 中的验证码进行对比</p>\n<p>(4) 如果一致，则完成注册，如果不一致，则提示错误信息</p>\n<ol start=\"3\">\n<li>具体实现</li>\n</ol>\n<p>(1) 修改 CheckCodeServlet 类，将验证码存入 Session 对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/checkCodeServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CheckCodeServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 生成验证码</span></span><br><span class=\"line\">        <span class=\"type\">ServletOutputStream</span> <span class=\"variable\">os</span> <span class=\"operator\">=</span> response.getOutputStream();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">checkCode</span> <span class=\"operator\">=</span> CheckCodeUtil.outputVerifyImage(<span class=\"number\">100</span>, <span class=\"number\">50</span>, os, <span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 存入Session</span></span><br><span class=\"line\">        <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> request.getSession();</span><br><span class=\"line\">        session.setAttribute(<span class=\"string\">&quot;checkCodeGen&quot;</span>,checkCode);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(2) 在 RegisterServlet 中，获取页面的和 session 对象中的验证码，进行对比</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.web;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.itheima.service.UserService;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.annotation.WebServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/registerServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RegisterServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">UserService</span> <span class=\"variable\">service</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserService</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">       <span class=\"comment\">//1. 获取用户名和密码数据</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;username&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;password&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">        user.setUsername(username);</span><br><span class=\"line\">        user.setPassword(password);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 获取用户输入的验证码</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">checkCode</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;checkCode&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 程序生成的验证码，从Session获取</span></span><br><span class=\"line\">        <span class=\"type\">HttpSession</span> <span class=\"variable\">session</span> <span class=\"operator\">=</span> request.getSession();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">checkCodeGen</span> <span class=\"operator\">=</span> (String) session.getAttribute(<span class=\"string\">&quot;checkCodeGen&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 比对</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!checkCodeGen.equalsIgnoreCase(checkCode))&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            request.setAttribute(<span class=\"string\">&quot;register_msg&quot;</span>,<span class=\"string\">&quot;验证码错误&quot;</span>);</span><br><span class=\"line\">            request.getRequestDispatcher(<span class=\"string\">&quot;/register.jsp&quot;</span>).forward(request,response);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 不允许注册</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//2. 调用service 注册</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> service.register(user);</span><br><span class=\"line\">        <span class=\"comment\">//3. 判断注册成功与否</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag)&#123;</span><br><span class=\"line\">             <span class=\"comment\">//注册功能，跳转登陆页面</span></span><br><span class=\"line\"></span><br><span class=\"line\">            request.setAttribute(<span class=\"string\">&quot;register_msg&quot;</span>,<span class=\"string\">&quot;注册成功，请登录&quot;</span>);</span><br><span class=\"line\">            request.getRequestDispatcher(<span class=\"string\">&quot;/login.jsp&quot;</span>).forward(request,response);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//注册失败，跳转到注册页面</span></span><br><span class=\"line\"></span><br><span class=\"line\">            request.setAttribute(<span class=\"string\">&quot;register_msg&quot;</span>,<span class=\"string\">&quot;用户名已存在&quot;</span>);</span><br><span class=\"line\">            request.getRequestDispatcher(<span class=\"string\">&quot;/register.jsp&quot;</span>).forward(request,response);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>至此，用户的注册登录功能就已经完成了。</p>\n<p>(8)</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/computer-science/java/course-1/javaweb/",
            "url": "http://example.com/computer-science/java/course-1/javaweb/",
            "title": "javaWeb",
            "date_published": "2022-12-15T03:52:14.000Z",
            "content_html": "<h2 id=\"综合案例\"><a class=\"markdownIt-Anchor\" href=\"#综合案例\">#</a> 综合案例</h2>\n<p><strong>今日目标：</strong></p>\n<blockquote>\n<ul>\n<li>能够完成查询所有功能</li>\n<li>能够完成添加功能</li>\n<li>能够理解 BaseServlet 思想</li>\n<li>能够完成批量删除功能</li>\n<li>能够完成分页查询功能</li>\n<li>能够完成条件查询功能</li>\n</ul>\n</blockquote>\n<h2 id=\"1功能介绍\"><a class=\"markdownIt-Anchor\" href=\"#1功能介绍\">#</a> 1，功能介绍</h2>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210825171411003.png\" alt=\"image-20210825171411003\"></p>\n<p>以上是我们在综合案例要实现的功能。对数据的除了对数据的增删改查功能外，还有一些复杂的功能，如  <code>批量删除</code> 、 <code>分页查询</code> 、 <code>条件查询</code>  等功能</p>\n<ul>\n<li><code>批量删除</code>  功能：每条数据前都有复选框，当我选中多条数据并点击  <code>批量删除</code>  按钮后，会发送请求到后端并删除数据库中指定的多条数据。</li>\n<li><code>分页查询</code>  功能：当数据库中有很多数据时，我们不可能将所有的数据展示在一页里，这个时候就需要分页展示数据。</li>\n<li><code>条件查询</code>  功能：数据库量大的时候，我们就需要精确的查询一些想看到的数据，这个时候就需要通过条件查询。</li>\n</ul>\n<p>这里的  <code>修改品牌</code>  和  <code>删除品牌</code>  功能在课程上不做讲解，留作同学来下的练习。</p>\n<h2 id=\"2环境准备\"><a class=\"markdownIt-Anchor\" href=\"#2环境准备\">#</a> 2，环境准备</h2>\n<p>环境准备我们主要完成以下两件事即可</p>\n<ul>\n<li>将资料的 brand-case 模块导入到 idea 中</li>\n<li>执行资料中提供的 tb_brand.sql 脚本</li>\n</ul>\n<h3 id=\"21-工程准备\"><a class=\"markdownIt-Anchor\" href=\"#21-工程准备\">#</a> 2.1  工程准备</h3>\n<p>将  <code>04-资料\\01-初始工程</code>  中的  <code>brand-case</code>  工程导入到我们自己的 idea 中。工程结构如下：</p>\n<img data-src=\"../../../../../网上借助资料/JavaWeb/ITheima--JAVAWEB/day14-综合案例/ppt/assets/image-20210825195522904.png\" alt=\"image-20210825195522904\" style=\"zoom:80%;\" />\n<h3 id=\"22-创建表\"><a class=\"markdownIt-Anchor\" href=\"#22-创建表\">#</a> 2.2  创建表</h3>\n<p>下面是创建表的语句</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 删除tb_brand表</span></span><br><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> if <span class=\"keyword\">exists</span> tb_brand;</span><br><span class=\"line\"><span class=\"comment\">-- 创建tb_brand表</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> tb_brand (</span><br><span class=\"line\">    <span class=\"comment\">-- id 主键</span></span><br><span class=\"line\">    id           <span class=\"type\">int</span> <span class=\"keyword\">primary</span> key auto_increment,</span><br><span class=\"line\">    <span class=\"comment\">-- 品牌名称</span></span><br><span class=\"line\">    brand_name   <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 企业名称</span></span><br><span class=\"line\">    company_name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 排序字段</span></span><br><span class=\"line\">    ordered      <span class=\"type\">int</span>,</span><br><span class=\"line\">    <span class=\"comment\">-- 描述信息</span></span><br><span class=\"line\">    description  <span class=\"type\">varchar</span>(<span class=\"number\">100</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 状态：0：禁用  1：启用</span></span><br><span class=\"line\">    status       <span class=\"type\">int</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">-- 添加数据</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> tb_brand (brand_name, company_name, ordered, description, status)</span><br><span class=\"line\"><span class=\"keyword\">values</span> </span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;三只松鼠&#x27;</span>, <span class=\"string\">&#x27;三只松鼠股份有限公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;好吃不上火&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;三只松鼠&#x27;</span>, <span class=\"string\">&#x27;三只松鼠股份有限公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;好吃不上火&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;三只松鼠&#x27;</span>, <span class=\"string\">&#x27;三只松鼠股份有限公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;好吃不上火&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"3查询所有功能\"><a class=\"markdownIt-Anchor\" href=\"#3查询所有功能\">#</a> 3，查询所有功能</h2>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210825200138600.png\" alt=\"image-20210825200138600\"></p>\n<p>如上图所示是查询所有品牌数据在页面展示的效果。要实现这个功能，要先搞明白如下问题：</p>\n<ul>\n<li>\n<p>什么时候发送异步请求？</p>\n<p>页面加载完毕后就需要在页面上看到所有的品牌数据。所以在  <code>mounted()</code>  这个构造函数中写发送异步请求的代码。</p>\n</li>\n<li>\n<p>请求需要携带参数吗？</p>\n<p>查询所有功能不需要携带什么参数。</p>\n</li>\n<li>\n<p>响应的数据格式是什么样？</p>\n<p>后端是需要将  <code>List&lt;Brand&gt;</code>  对象转换为 JSON 格式的数据并响应回给浏览器。响应数据格式如下：</p>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210825201634849.png\" alt=\"image-20210825201634849\"></p>\n</li>\n</ul>\n<p>整体流程如下</p>\n<p><img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153828.png\" alt=\"image-20210825200332542\"></p>\n<p>我们先实现后端程序，然后再实现前端程序。</p>\n<h3 id=\"31-后端实现\"><a class=\"markdownIt-Anchor\" href=\"#31-后端实现\">#</a> 3.1 后端实现</h3>\n<h4 id=\"311-dao方法实现\"><a class=\"markdownIt-Anchor\" href=\"#311-dao方法实现\">#</a> 3.1.1  dao 方法实现</h4>\n<p>在  <code>com.itheima.mapper.BrandMapper</code>  接口中定义抽象方法，并使用  <code>@Select</code>  注解编写 sql 语句</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询所有</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"meta\">@Select(&quot;select * from tb_brand&quot;)</span></span><br><span class=\"line\">List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure>\n<p>由于表中有些字段名和实体类中的属性名没有对应，所以需要在  <code>com/itheima/mapper/BrandMapper.xml</code>  映射配置文件中定义结果映射 ，使用 <code>resultMap</code>  标签。映射配置文件内容如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.itheima.mapper.BrandMapper&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;brandResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;brand&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;brandName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;brand_name&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;companyName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;company_name&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>定义完结果映射关系后，在接口  <code>selectAll()</code>  方法上引用该结构映射。使用  <code>@ResultMap(&quot;brandResultMap&quot;)</code>  注解</p>\n<p>完整接口的  <code>selectAll()</code>  方法如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询所有</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"meta\">@Select(&quot;select * from tb_brand&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ResultMap(&quot;brandResultMap&quot;)</span></span><br><span class=\"line\">List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"312-service方法实现\"><a class=\"markdownIt-Anchor\" href=\"#312-service方法实现\">#</a> 3.1.2  service 方法实现</h4>\n<p>在  <code>com.itheima.service</code>  包下创建  <code>BrandService</code>  接口，在该接口中定义查询所有的抽象方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BrandService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询所有</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>并在  <code>com.itheima.service</code>  下再创建  <code>impl</code>  包； <code>impl</code>  表示是放 service 层接口的实现类的包。 在该包下创建名为  <code>BrandServiceImpl</code>  类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BrandServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BrandService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此处为什么要给 service 定义接口呢？因为 service 定义了接口后，在 servlet 中就可以使用多态的形式创建 Service 实现类的对象，如下：</p>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153836.png\" alt=\"image-20210825203843142\" style=\"zoom:80%;\" />\n<p>这里使用多态是因为方便我们后期解除  <code>Servlet</code>  和  <code>service</code>  的耦合。从上面的代码我们可以看到  <code>SelectAllServlet</code>  类和  <code>BrandServiceImpl</code>  类之间是耦合在一起的，如果后期  <code>BrandService</code>  有其它更好的实现类（例如叫  <code>BrandServiceImpl</code> ），那就需要修改  <code>SelectAllServlet</code>  类中的代码。后面我们学习了  <code>Spring</code>  框架后就可以解除  <code>SelectAllServlet</code>  类和红色框括起来的代码耦合。而现在咱们还做不到解除耦合，在这里只需要理解为什么定义接口即可。</p>\n<p><code>BrandServiceImpl</code>  类代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BrandServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BrandService</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1. 创建SqlSessionFactory 工厂对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">factory</span> <span class=\"operator\">=</span> SqlSessionFactoryUtils.getSqlSessionFactory();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">        <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">        <span class=\"comment\">//3. 获取BrandMapper</span></span><br><span class=\"line\">        <span class=\"type\">BrandMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4. 调用方法</span></span><br><span class=\"line\">        List&lt;Brand&gt; brands = mapper.selectAll();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> brands;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"313-servlet实现\"><a class=\"markdownIt-Anchor\" href=\"#313-servlet实现\">#</a> 3.1.3  servlet 实现</h4>\n<p>在  <code>com.itheima.web.servlet</code>  包下定义名为  <code>SelectAllServlet</code>  的查询所有的  <code>servlet</code> 。该  <code>servlet</code>  逻辑如下：</p>\n<ul>\n<li>调用 service 的  <code>selectAll()</code>  方法查询所有的品牌数据，并接口返回结果</li>\n<li>将返回的结果转换为 json 数据</li>\n<li>响应 json 数据</li>\n</ul>\n<p>代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/selectAllServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SelectAllServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">BrandService</span> <span class=\"variable\">brandService</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BrandServiceImpl</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 调用service查询</span></span><br><span class=\"line\">        List&lt;Brand&gt; brands = brandService.selectAll();</span><br><span class=\"line\">        <span class=\"comment\">//2. 转为JSON</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jsonString</span> <span class=\"operator\">=</span> JSON.toJSONString(brands);</span><br><span class=\"line\">        <span class=\"comment\">//3. 写数据</span></span><br><span class=\"line\">        response.setContentType(<span class=\"string\">&quot;text/json;charset=utf-8&quot;</span>); <span class=\"comment\">//告知浏览器响应的数据是什么， 告知浏览器使用什么字符集进行解码</span></span><br><span class=\"line\">        response.getWriter().write(jsonString);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"314-测试后端程序\"><a class=\"markdownIt-Anchor\" href=\"#314-测试后端程序\">#</a> 3.1.4  测试后端程序</h4>\n<p>在浏览器输入访问 servlet 的资源路径  <code>http://localhost:8080/brand-case/selectAllServlet</code>  ，如果没有报错，并能看到如下信息表明后端程序没有问题</p>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210825205133752.png\" alt=\"image-20210825205133752\"></p>\n<h3 id=\"32-前端实现\"><a class=\"markdownIt-Anchor\" href=\"#32-前端实现\">#</a> 3.2  前端实现</h3>\n<p>前端需要在页面加载完毕后发送 ajax 请求，所以发送请求的逻辑应该放在  <code>mounted()</code>  钩子函数中。而响应回来的数据需要赋值给表格绑定的数据模型，从下图可以看出表格绑定的数据模型是  <code>tableData</code></p>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153765.png\" alt=\"image-20210825220436889\" style=\"zoom:70%;\" />\n<p>前端代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">mounted</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//当页面加载完成后，发送异步请求，获取数据</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>:<span class=\"string\">&quot;get&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/selectAllServlet&quot;</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">        _this.<span class=\"property\">tableData</span> = resp.<span class=\"property\">data</span>;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4添加功能\"><a class=\"markdownIt-Anchor\" href=\"#4添加功能\">#</a> 4，添加功能</h2>\n<img data-src=\"../../../../../网上借助资料/JavaWeb/ITheima--JAVAWEB/day14-综合案例/ppt/assets/image-20210825221138245.png\" alt=\"image-20210825221138245\" style=\"zoom:70%;\" />\n<p>上图是添加数据的对话框，当点击  <code>提交</code>  按钮后就需要将数据提交到后端，并将数据保存到数据库中。下图是整体的流程：</p>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210825221329231.png\" alt=\"image-20210825221329231\"></p>\n<p>页面发送请求时，需要将输入框输入的内容提交给后端程序，而这里是以 json 格式进行传递的。而具体的数据格式如下：</p>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210826185917510.png\" alt=\"image-20210826185917510\"></p>\n<blockquote>\n<p><mark>注意：由于是添加数据，所以上述 json 数据中 id 是没有值的。</mark></p>\n</blockquote>\n<h3 id=\"41-后端实现\"><a class=\"markdownIt-Anchor\" href=\"#41-后端实现\">#</a> 4.1  后端实现</h3>\n<h4 id=\"411-dao方法实现\"><a class=\"markdownIt-Anchor\" href=\"#411-dao方法实现\">#</a> 4.1.1  dao 方法实现</h4>\n<p>在  <code>BrandMapper</code>  接口中定义  <code>add()</code>  添加方法，并使用  <code>@Insert</code>  注解编写 sql 语句</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> brand</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"meta\">@Insert(&quot;insert into tb_brand values(null,#&#123;brandName&#125;,#&#123;companyName&#125;,#&#123;ordered&#125;,#&#123;description&#125;,#&#123;status&#125;)&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"412-service方法实现\"><a class=\"markdownIt-Anchor\" href=\"#412-service方法实现\">#</a> 4.1.2  service 方法实现</h4>\n<p>在  <code>BrandService</code>  接口中定义  <code>add()</code>  添加数据的业务逻辑方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> brand</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n<p>在  <code>BrandServiceImpl</code>  类中重写  <code>add()</code>  方法，并进行业务逻辑实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(Brand brand)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//3. 获取BrandMapper</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4. 调用方法</span></span><br><span class=\"line\">    mapper.add(brand);</span><br><span class=\"line\">    sqlSession.commit();<span class=\"comment\">//提交事务</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><mark>注意：增删改操作一定要提交事务。</mark></p>\n</blockquote>\n<h4 id=\"413-servlet实现\"><a class=\"markdownIt-Anchor\" href=\"#413-servlet实现\">#</a> 4.1.3  servlet 实现</h4>\n<p>在  <code>com.itheima.web.servlet</code>  包写定义名为  <code>AddServlet</code>  的 Servlet。该 Servlet 的逻辑如下：</p>\n<ul>\n<li>接收页面提交的数据。页面到时候提交的数据是 json 格式的数据，所以此处需要使用输入流读取数据</li>\n<li>将接收到的数据转换为  <code>Brand</code>  对象</li>\n<li>调用 service 的  <code>add()</code>  方法进行添加的业务逻辑处理</li>\n<li>给浏览器响应添加成功的标识，这里直接给浏览器响应  <code>success</code>  字符串表示成功</li>\n</ul>\n<p>servlet 代码实现如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/addServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AddServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">BrandService</span> <span class=\"variable\">brandService</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BrandServiceImpl</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1. 接收品牌数据</span></span><br><span class=\"line\">        <span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> request.getReader();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">params</span> <span class=\"operator\">=</span> br.readLine();<span class=\"comment\">//json字符串</span></span><br><span class=\"line\">        <span class=\"comment\">//转为Brand对象</span></span><br><span class=\"line\">        <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> JSON.parseObject(params, Brand.class);</span><br><span class=\"line\">        <span class=\"comment\">//2. 调用service添加</span></span><br><span class=\"line\">        brandService.add(brand);</span><br><span class=\"line\">        <span class=\"comment\">//3. 响应成功的标识</span></span><br><span class=\"line\">        response.getWriter().write(<span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"42-前端实现\"><a class=\"markdownIt-Anchor\" href=\"#42-前端实现\">#</a> 4.2  前端实现</h3>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153038.png\" alt=\"image-20210825223121993\" style=\"zoom:60%;\" />\n<p>上图左边是页面效果，里面的  <code>提交</code>  按钮可以通过上图右边看出绑定了一个 单击事件，而该事件绑定的是  <code>addBrand</code>  函数，所以添加数据功能的逻辑代码应该写在  <code>addBrand()</code>   函数中。在此方法中需要发送异步请求并将表单中输入的数据作为参数进行传递。如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加数据</span></span><br><span class=\"line\"><span class=\"title function_\">addBrand</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 发送ajax请求，添加数据</span></span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/addServlet&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>:_this.<span class=\"property\">brand</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">       \t<span class=\"comment\">//响应数据的处理逻辑</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在  <code>then</code>  函数中的匿名函数是成功后的回调函数，而  <code>resp.data</code>  就可以获取到响应回来的数据，如果值是  <code>success</code>  表示数据添加成功。成功后我们需要做一下逻辑处理：</p>\n<ol>\n<li>\n<p><strong>关闭新增对话框窗口</strong></p>\n<p>如下图所示是添加数据的对话框代码，从代码中可以看到此对话框绑定了  <code>dialogVisible</code>  数据模型，只需要将该数据模型的值设置为 false，就可以关闭新增对话框窗口了。</p>\n<img data-src=\"../../../../../网上借助资料/JavaWeb/ITheima--JAVAWEB/day14-综合案例/ppt/assets/image-20210825223933953.png\" alt=\"image-20210825223933953\" style=\"zoom:70%;\" />\n</li>\n<li>\n<p><strong>重新查询数据</strong></p>\n<p>数据添加成功与否，用户只要能在页面上查看到数据说明添加成功。而此处需要重新发送异步请求获取所有的品牌数据，而这段代码在  <code>查询所有</code>  功能中已经实现，所以我们可以将此功能代码进行抽取，抽取到一个  <code>selectAll()</code>  函数中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 查询所有数据</span></span><br><span class=\"line\"><span class=\"title function_\">selectAll</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>:<span class=\"string\">&quot;get&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/selectAllServlet&quot;</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">        _this.<span class=\"property\">tableData</span> = resp.<span class=\"property\">data</span>;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么就需要将  <code>mounted()</code>  钩子函数中代码改进为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">mounted</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//当页面加载完成后，发送异步请求，获取数据</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">selectAll</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>同时在新增响应的回调中调用  <code>selectAll()</code>  进行数据的重新查询。</p>\n</li>\n<li>\n<p><strong>弹出消息给用户提示添加成功</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153755.png\" alt=\"image-20210825224958220\"></p>\n<p>上图左边就是 elementUI 官网提供的成功提示代码，而上图右边是具体的效果。</p>\n<blockquote>\n<p><mark>注意：上面的 this 需要的是表示 VUE 对象的 this。</mark></p>\n</blockquote>\n</li>\n</ol>\n<p>综上所述，前端代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加数据</span></span><br><span class=\"line\"><span class=\"title function_\">addBrand</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 发送ajax请求，添加数据</span></span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/addServlet&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>:_this.<span class=\"property\">brand</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(resp.<span class=\"property\">data</span> == <span class=\"string\">&quot;success&quot;</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//添加成功</span></span><br><span class=\"line\">            <span class=\"comment\">//关闭窗口</span></span><br><span class=\"line\">            _this.<span class=\"property\">dialogVisible</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重新查询数据</span></span><br><span class=\"line\">            _this.<span class=\"title function_\">selectAll</span>();</span><br><span class=\"line\">            <span class=\"comment\">// 弹出消息提示</span></span><br><span class=\"line\">            _this.$message(&#123;</span><br><span class=\"line\">                <span class=\"attr\">message</span>: <span class=\"string\">&#x27;恭喜你，添加成功&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5servlet优化\"><a class=\"markdownIt-Anchor\" href=\"#5servlet优化\">#</a> 5，servlet 优化</h2>\n<h3 id=\"51-问题导入\"><a class=\"markdownIt-Anchor\" href=\"#51-问题导入\">#</a> 5.1  问题导入</h3>\n<p><mark>Web 层的 Servlet 个数太多了，不利于管理和编写</mark></p>\n<p>通过之前的两个功能，我们发现每一个功能都需要定义一个  <code>servlet</code> ，一个模块需要实现增删改查功能，就需要 4 个  <code>servlet</code> ，模块一多就会造成 <code>servlet</code>  泛滥。此时我们就想  <code>servlet</code>  能不能像  <code>service</code>  一样，一个模块只定义一个  <code>servlet</code> ，而每一个功能只需要在该  <code>servlet</code>  中定义对应的方法。例如下面代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/brand/*&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BrandServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//查询所有</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">selectAll</span><span class=\"params\">(...)</span> &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//添加数据</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(...)</span> &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">     <span class=\"comment\">//修改数据</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">update</span><span class=\"params\">(...)</span> &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//删除删除</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">delete</span><span class=\"params\">(...)</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>而我们知道发送请求  <code>servlet</code> ， <code>tomcat</code>  会自动的调用  <code>service()</code>  方法，之前我们在自定义的  <code>servlet</code>  中重写  <code>doGet()</code>  方法和  <code>doPost()</code>  方法，当我们访问该  <code>servlet</code>  时会根据请求方式将请求分发给  <code>doGet()</code>  或者  <code>doPost()</code>   方法，如下图</p>\n<img data-src=\"../../../../../网上借助资料/JavaWeb/ITheima--JAVAWEB/day14-综合案例/ppt/assets/image-20210826184103210.png\" alt=\"image-20210826184103210\" style=\"zoom:80%;\" />\n<p>那么我们也可以仿照这样请求分发的思想，在  <code>service()</code>  方法中根据具体的操作调用对应的方法，如：查询所有就调用  <code>selectAll()</code>  方法，添加企业信息就调用  <code>add()</code>  方法。</p>\n<p>为了做到通用，我们定义一个通用的  <code>servlet</code>  类，在定义其他的  <code>servlet</code>  是不需要继承  <code>HttpServlet</code> ，而继承我们定义的  <code>BaseServlet</code> ，在 <code> BaseServlet</code>  中调用具体  <code>servlet</code> （如 <code>BrandServlet</code> ）中的对应方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaseServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">service</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//进行请求的分发</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>BrandServlet</code>  定义就需要修改为如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/brand/*&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BrandServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//用户实现分页查询</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">selectAll</span><span class=\"params\">(...)</span> &#123;&#125; </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//添加企业信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(...)</span> &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//修改企业信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">update</span><span class=\"params\">(...)</span> &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//删除企业信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">delete</span><span class=\"params\">(...)</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么如何在  <code>BaseServlet</code>  中调用对应的方法呢？比如查询所有就调用  <code>selectAll()</code>  方法。</p>\n<p>可以<mark>规定在发送请求时，请求资源的二级路径（/brandServlet/selectAll）和需要调用的方法名相同</mark>，如：</p>\n<p>查询所有数据的路径以后就需要写成：  <code>http://localhost:8080/brand-case/brandServlet/selectAll</code></p>\n<p>添加数据的路径以后就需要写成：  <code>http://localhost:8080/brand-case/brandServlet/add</code></p>\n<p>修改数据的路径以后就需要写成：  <code>http://localhost:8080/brand-case/brandServlet/update</code></p>\n<p>删除数据的路径以后就需要写成：  <code>http://localhost:8080/brand-case/brandServlet/delete</code></p>\n<p>这样的话，在  <code>BaseServlet</code>  中就需要获取到资源的二级路径作为方法名，然后调用该方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaseServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">service</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 获取请求路径</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">uri</span> <span class=\"operator\">=</span> req.getRequestURI(); <span class=\"comment\">// 例如路径为：/brand-case/brand/selectAll</span></span><br><span class=\"line\">        <span class=\"comment\">//2. 获取最后一段路径，方法名</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">index</span> <span class=\"operator\">=</span> uri.lastIndexOf(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">methodName</span> <span class=\"operator\">=</span> uri.substring(index + <span class=\"number\">1</span>); <span class=\"comment\">//  获取到资源的二级路径  selectAll</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 执行方法</span></span><br><span class=\"line\">        <span class=\"comment\">//2.1 获取BrandServlet /UserServlet 字节码对象 Class</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(this);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        Class&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseServlet</span>&gt; cls = <span class=\"built_in\">this</span>.getClass();</span><br><span class=\"line\">        <span class=\"comment\">//2.2 获取方法 Method对象</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Method</span> <span class=\"variable\">method</span> <span class=\"operator\">=</span> cls.getMethod(methodName,？？？);</span><br><span class=\"line\">            <span class=\"comment\">//4,调用该方法</span></span><br><span class=\"line\">            method.invoke(<span class=\"built_in\">this</span>,？？？);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NoSuchMethodException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IllegalAccessException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InvocationTargetException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过上面代码发现根据方法名获取对应方法的  <code>Method</code>  对象时需要指定方法参数的字节码对象。解决这个问题，可以将方法的参数类型规定死，而方法中可能需要用到  <code>request</code>  对象和  <code>response</code>  对象，所以指定方法的参数为  <code>HttpServletRequest</code>  和  <code>HttpServletResponse</code> ，那么  <code>BrandServlet</code>  代码就可以改进为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/brand/*&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BrandServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseServlet</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//用户实现分页查询</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">selectAll</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//添加企业信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//修改企业信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">update</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//删除企业信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">delete</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>BaseServlet 代码可以改进为：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaseServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//根据请求的最后一段路径来进行方法分发</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">service</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 获取请求路径</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">uri</span> <span class=\"operator\">=</span> req.getRequestURI(); <span class=\"comment\">// 例如路径为：/brand-case/brand/selectAll</span></span><br><span class=\"line\">        <span class=\"comment\">//2. 获取最后一段路径，方法名</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">index</span> <span class=\"operator\">=</span> uri.lastIndexOf(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">methodName</span> <span class=\"operator\">=</span> uri.substring(index + <span class=\"number\">1</span>); <span class=\"comment\">//  获取到资源的二级路径  selectAll   </span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 执行方法</span></span><br><span class=\"line\">        <span class=\"comment\">//2.1 获取BrandServlet /UserServlet 字节码对象 Class</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(this);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        Class&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseServlet</span>&gt; cls = <span class=\"built_in\">this</span>.getClass();</span><br><span class=\"line\">        <span class=\"comment\">//2.2 获取方法 Method对象</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;   </span><br><span class=\"line\">            <span class=\"type\">Method</span> <span class=\"variable\">method</span> <span class=\"operator\">=</span> cls.getMethod(methodName, HttpServletRequest.class, HttpServletResponse.class);</span><br><span class=\"line\">            <span class=\"comment\">//2.3 执行方法</span></span><br><span class=\"line\">            method.invoke(<span class=\"built_in\">this</span>,req,resp);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NoSuchMethodException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IllegalAccessException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InvocationTargetException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"52-代码优化\"><a class=\"markdownIt-Anchor\" href=\"#52-代码优化\">#</a> 5.2  代码优化</h3>\n<h4 id=\"521-后端优化\"><a class=\"markdownIt-Anchor\" href=\"#521-后端优化\">#</a> 5.2.1  后端优化</h4>\n<p>定义了  <code>BaseServlet</code>  后，针对品牌模块我们定义一个  <code>BrandServlet</code>  的 Servlet，并使其继承  <code>BaseServlet</code>  。在 <code>BrandServlet</code>  中定义 以下功能的方法：</p>\n<ul>\n<li><code>查询所有</code>   功能：方法名声明为  <code>selectAll</code>  ，并将之前的  <code>SelectAllServlet</code>  中的逻辑代码拷贝到该方法中</li>\n<li><code>添加数据</code>  功能：方法名声明为  <code>add</code>  ，并将之前的  <code>AddServlet</code>  中的逻辑代码拷贝到该方法中</li>\n</ul>\n<p>具体代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/brand/*&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BrandServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">BaseServlet</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">BrandService</span> <span class=\"variable\">brandService</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BrandServiceImpl</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">selectAll</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 调用service查询</span></span><br><span class=\"line\">        List&lt;Brand&gt; brands = brandService.selectAll();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 转为JSON</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jsonString</span> <span class=\"operator\">=</span> JSON.toJSONString(brands);</span><br><span class=\"line\">        <span class=\"comment\">//3. 写数据</span></span><br><span class=\"line\">        response.setContentType(<span class=\"string\">&quot;text/json;charset=utf-8&quot;</span>);</span><br><span class=\"line\">        response.getWriter().write(jsonString);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1. 接收品牌数据</span></span><br><span class=\"line\">        <span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> request.getReader();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">params</span> <span class=\"operator\">=</span> br.readLine();<span class=\"comment\">//json字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//转为Brand对象</span></span><br><span class=\"line\">        <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> JSON.parseObject(params, Brand.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2. 调用service添加</span></span><br><span class=\"line\">        brandService.add(brand);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3. 响应成功的标识</span></span><br><span class=\"line\">        response.getWriter().write(<span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"522-前端优化\"><a class=\"markdownIt-Anchor\" href=\"#522-前端优化\">#</a> 5.2.2  前端优化</h4>\n<p>页面中之前发送的请求的路径都需要进行修改， <code>selectAll()</code>  函数中发送异步请求的  <code>url</code>  应该改为  <code>http://localhost:8080/brand-case/brand/selectAll</code>  。具体代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 查询分页数据</span></span><br><span class=\"line\"><span class=\"title function_\">selectAll</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>:<span class=\"string\">&quot;get&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/brand/selectAll&quot;</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">        _this.<span class=\"property\">tableData</span> = resp.<span class=\"property\">data</span>;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>addBrand()</code>  函数中发送异步请求的  <code>url</code>  应该改为  <code>http://localhost:8080/brand-case/brand/add</code>  。具体代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加数据</span></span><br><span class=\"line\"><span class=\"title function_\">addBrand</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//console.log(this.brand);</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 发送ajax请求，添加数据</span></span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/brand/add&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>:_this.<span class=\"property\">brand</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(resp.<span class=\"property\">data</span> == <span class=\"string\">&quot;success&quot;</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//添加成功</span></span><br><span class=\"line\">            <span class=\"comment\">//关闭窗口</span></span><br><span class=\"line\">            _this.<span class=\"property\">dialogVisible</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重新查询数据</span></span><br><span class=\"line\">            _this.<span class=\"title function_\">selectAll</span>();</span><br><span class=\"line\">            <span class=\"comment\">// 弹出消息提示</span></span><br><span class=\"line\">            _this.$message(&#123;</span><br><span class=\"line\">                <span class=\"attr\">message</span>: <span class=\"string\">&#x27;恭喜你，添加成功&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6批量删除\"><a class=\"markdownIt-Anchor\" href=\"#6批量删除\">#</a> 6，批量删除</h2>\n<img data-src=\"../../../../../网上借助资料/JavaWeb/ITheima--JAVAWEB/day14-综合案例/ppt/assets/image-20210826185420668.png\" alt=\"image-20210826185420668\" style=\"zoom:70%;\" />\n<p>如上图所示点击多条数据前的复选框就意味着要删除这些数据，而点击了  <code>批量删除</code>  按钮后，需要让用户确认一下，因为有可能是用户误操作的，当用户确定后需要给后端发送请求并携带者需要删除数据的多个 id 值，后端程序删除数据库中的数据。具体的流程如下：</p>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210826201651241.png\" alt=\"image-20210826201651241\"></p>\n<p><mark>注意：</mark></p>\n<p>前端发送请求时需要将要删除的多个 id 值以 json 格式提交给后端，而该 json 格式数据如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span><span class=\"number\">1</span><span class=\"punctuation\">,</span><span class=\"number\">2</span><span class=\"punctuation\">,</span><span class=\"number\">3</span><span class=\"punctuation\">,</span><span class=\"number\">4</span><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"61-后端实现\"><a class=\"markdownIt-Anchor\" href=\"#61-后端实现\">#</a> 6.1  后端实现</h3>\n<h4 id=\"611-dao方法实现\"><a class=\"markdownIt-Anchor\" href=\"#611-dao方法实现\">#</a> 6.1.1  dao 方法实现</h4>\n<p>在  <code>BrandMapper</code>  接口中定义  <code>deleteByIds()</code>  添加方法，由于这里面要用到动态 sql ，属于复杂的 sql 操作，建议使用映射配置文件。</p>\n<p>接口方法声明如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 批量删除</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ids</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">deleteByIds</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;ids&quot;)</span> <span class=\"type\">int</span>[] ids)</span>;</span><br></pre></td></tr></table></figure>\n<p>在  <code>BrandMapper.xml</code>  映射配置文件中添加 statement</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;deleteByIds&quot;</span>&gt;</span></span><br><span class=\"line\">    delete from tb_brand where id in</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">foreach</span> <span class=\"attr\">collection</span>=<span class=\"string\">&quot;ids&quot;</span> <span class=\"attr\">item</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">separator</span>=<span class=\"string\">&quot;,&quot;</span> <span class=\"attr\">open</span>=<span class=\"string\">&quot;(&quot;</span> <span class=\"attr\">close</span>=<span class=\"string\">&quot;)&quot;</span>&gt;</span></span><br><span class=\"line\">        #&#123;id&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">foreach</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"612-service方法实现\"><a class=\"markdownIt-Anchor\" href=\"#612-service方法实现\">#</a> 6.1.2  service 方法实现</h4>\n<p>在  <code>BrandService</code>  接口中定义  <code>deleteByIds()</code>  批量删除的业务逻辑方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 批量删除</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ids</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">deleteByIds</span><span class=\"params\">( <span class=\"type\">int</span>[] ids)</span>;</span><br></pre></td></tr></table></figure>\n<p>在  <code>BrandServiceImpl</code>  类中重写  <code>deleteByIds()</code>  方法，并进行业务逻辑实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">deleteByIds</span><span class=\"params\">(<span class=\"type\">int</span>[] ids)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//3. 获取BrandMapper</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4. 调用方法</span></span><br><span class=\"line\">    mapper.deleteByIds(ids);</span><br><span class=\"line\"></span><br><span class=\"line\">    sqlSession.commit();<span class=\"comment\">//提交事务</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"613-servlet实现\"><a class=\"markdownIt-Anchor\" href=\"#613-servlet实现\">#</a> 6.1.3  servlet 实现</h4>\n<p>在  <code>BrandServlet</code>  类中定义  <code>deleteByIds()</code>   方法。而该方法的逻辑如下：</p>\n<ul>\n<li>接收页面提交的数据。页面到时候提交的数据是 json 格式的数据，所以此处需要使用输入流读取数据</li>\n<li>接收页面提交的数据。页面到时候提交的数据是 json 格式的数据，所以此处需要使用输入流读取数据</li>\n<li>将接收到的数据转换为  <code>int[]</code>  数组</li>\n<li>调用 service 的  <code>deleteByIds()</code>  方法进行批量删除的业务逻辑处理</li>\n<li>给浏览器响应添加成功的标识，这里直接给浏览器响应  <code>success</code>  字符串表示成功</li>\n</ul>\n<p>servlet 中  <code>deleteByIds()</code>  方法代码实现如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">deleteByIds</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1. 接收数据 json  [1,2,3]</span></span><br><span class=\"line\">    <span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> request.getReader();</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">params</span> <span class=\"operator\">=</span> br.readLine();<span class=\"comment\">//json字符串</span></span><br><span class=\"line\">    <span class=\"comment\">//转为 int[]</span></span><br><span class=\"line\">    <span class=\"type\">int</span>[] ids = JSON.parseObject(params, <span class=\"type\">int</span>[].class);</span><br><span class=\"line\">    <span class=\"comment\">//2. 调用service添加</span></span><br><span class=\"line\">    brandService.deleteByIds(ids);</span><br><span class=\"line\">    <span class=\"comment\">//3. 响应成功的标识</span></span><br><span class=\"line\">    response.getWriter().write(<span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"62-前端实现\"><a class=\"markdownIt-Anchor\" href=\"#62-前端实现\">#</a> 6.2  前端实现</h3>\n<p>此功能的前端代码实现稍微有点麻烦，分为以下几步实现</p>\n<h4 id=\"621-获取选中的id值\"><a class=\"markdownIt-Anchor\" href=\"#621-获取选中的id值\">#</a> 6.2.1  获取选中的 id 值</h4>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153037.png\" alt=\"image-20210826223103884\" style=\"zoom:70%;\" />\n<p>从上图可以看出表格复选框绑定了一个  <code>selection-change</code>  事件，该事件是当选择项发生变化时会触发。该事件绑定了  <code>handleSelectionChange</code>  函数，而该函数有一个参数  <code>val</code>  ，该参数是获取选中行的数据，如下</p>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153441.png\" alt=\"image-20210826223750518\" style=\"zoom:70%;\" />\n<p>而我们只需要将所有选中数据的 id 值提交给服务端即可，获取 id 的逻辑我们书写在  <code>批量删除</code>  按钮绑定的函数中。</p>\n<p>在  <code>批量删除</code>  按钮绑定单击事件，并给绑定触发时调用的函数，如下</p>\n<img data-src=\"../../../../../网上借助资料/JavaWeb/ITheima--JAVAWEB/day14-综合案例/ppt/assets/image-20210826224121445.png\" alt=\"image-20210826224121445\" style=\"zoom:70%;\" />\n<p>并在 Vue 对象中的 methods 中定义  <code>deleteByIds()</code>  函数，在该函数中从  <code>multipleSelection</code>  数据模型中获取所选数据的 id 值。要完成这个功能需要在 Vue 对象中定义一个数据模型  <code>selectedIds:[]</code> ，在  <code>deleteByIds()</code>  函数中遍历  <code>multipleSelection</code>  数组，并获取到每一个所选数据的 id 值存储到  <code>selectedIds</code>  数组中，代码实现如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 创建id数组 [1,2,3], 从 this.multipleSelection 获取即可</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">multipleSelection</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> selectionElement = <span class=\"variable language_\">this</span>.<span class=\"property\">multipleSelection</span>[i];</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">selectedIds</span>[i] = selectionElement.<span class=\"property\">id</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"622-发送异步请求\"><a class=\"markdownIt-Anchor\" href=\"#622-发送异步请求\">#</a> 6.2.2  发送异步请求</h4>\n<p>使用 axios 发送异步请求并经上一步获取到的存储所有的 id 数组作为请求参数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//2. 发送AJAX请求</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 发送ajax请求，添加数据</span></span><br><span class=\"line\"><span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/brand/deleteByIds&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>:_this.<span class=\"property\">selectedIds</span></span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(resp.<span class=\"property\">data</span> == <span class=\"string\">&quot;success&quot;</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//删除成功</span></span><br><span class=\"line\">        <span class=\"comment\">// 重新查询数据</span></span><br><span class=\"line\">        _this.<span class=\"title function_\">selectAll</span>();</span><br><span class=\"line\">        <span class=\"comment\">// 弹出消息提示</span></span><br><span class=\"line\">        _this.$message(&#123;</span><br><span class=\"line\">            <span class=\"attr\">message</span>: <span class=\"string\">&#x27;恭喜你，删除成功&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"623-确定框实现\"><a class=\"markdownIt-Anchor\" href=\"#623-确定框实现\">#</a> 6.2.3  确定框实现</h4>\n<p>由于删除操作是比较危险的；有时候可能是由于用户的误操作点击了  <code>批量删除</code>  按钮，所以在点击了按钮后需要先给用户确认提示。而确认框在  <code>elementUI</code>  中也提供了，如下图</p>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210826225742852.png\" alt=\"image-20210826225742852\"></p>\n<p>而在点击  <code>确定</code>  按钮后需要执行之前删除的逻辑。因此前端代码实现如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">// 批量删除</span></span><br><span class=\"line\"><span class=\"title function_\">deleteByIds</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 弹出确认提示框</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.$confirm(<span class=\"string\">&#x27;此操作将删除该数据, 是否继续?&#x27;</span>, <span class=\"string\">&#x27;提示&#x27;</span>, &#123;</span><br><span class=\"line\">        <span class=\"attr\">confirmButtonText</span>: <span class=\"string\">&#x27;确定&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">cancelButtonText</span>: <span class=\"string\">&#x27;取消&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;warning&#x27;</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//用户点击确认按钮</span></span><br><span class=\"line\">        <span class=\"comment\">//1. 创建id数组 [1,2,3], 从 this.multipleSelection 获取即可</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"variable language_\">this</span>.<span class=\"property\">multipleSelection</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> selectionElement = <span class=\"variable language_\">this</span>.<span class=\"property\">multipleSelection</span>[i];</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">selectedIds</span>[i] = selectionElement.<span class=\"property\">id</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//2. 发送AJAX请求</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 发送ajax请求，添加数据</span></span><br><span class=\"line\">        <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/brand/deleteByIds&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">data</span>:_this.<span class=\"property\">selectedIds</span></span><br><span class=\"line\">        &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(resp.<span class=\"property\">data</span> == <span class=\"string\">&quot;success&quot;</span>)&#123;</span><br><span class=\"line\">                <span class=\"comment\">//删除成功</span></span><br><span class=\"line\">                <span class=\"comment\">// 重新查询数据</span></span><br><span class=\"line\">                _this.<span class=\"title function_\">selectAll</span>();</span><br><span class=\"line\">                <span class=\"comment\">// 弹出消息提示</span></span><br><span class=\"line\">                _this.$message(&#123;</span><br><span class=\"line\">                    <span class=\"attr\">message</span>: <span class=\"string\">&#x27;恭喜你，删除成功&#x27;</span>,</span><br><span class=\"line\">                    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span></span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//用户点击取消按钮</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.$message(&#123;</span><br><span class=\"line\">            <span class=\"attr\">type</span>: <span class=\"string\">&#x27;info&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">message</span>: <span class=\"string\">&#x27;已取消删除&#x27;</span></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7分页查询\"><a class=\"markdownIt-Anchor\" href=\"#7分页查询\">#</a> 7，分页查询</h2>\n<p>我们之前做的  <code>查询所有</code>  功能中将数据库中所有的数据查询出来并展示到页面上，试想如果数据库中的数据有很多（假设有十几万条）的时候，将数据全部展示出来肯定不现实，那如何解决这个问题呢？几乎所有的网站都会使用分页解决这个问题。每次只展示一页的数据，比如一页展示 10 条数据，如果还想看其他的数据，可以通过点击页码进行查询</p>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210826230648031.png\" alt=\"image-20210826230648031\"></p>\n<h3 id=\"71-分析\"><a class=\"markdownIt-Anchor\" href=\"#71-分析\">#</a> 7.1  分析</h3>\n<h4 id=\"711-分页查询sql\"><a class=\"markdownIt-Anchor\" href=\"#711-分页查询sql\">#</a> 7.1.1  分页查询 sql</h4>\n<p>分页查询也是从数据库进行查询的，所以我们要分页对应的 SQL 语句应该怎么写。分页查询使用  <code>LIMIT</code>  关键字，格式为：<mark> <code>LIMIT 开始索引 每页显示的条数</code> </mark>。以后前端页面在发送请求携带参数时，它并不明确开始索引是什么，但是它知道查询第几页。所以  <code>开始索引</code>  需要在后端进行计算，计算的公式是 ：<mark>开始索引 = （当前页码 -  1）*  每页显示条数</mark></p>\n<p>比如查询第一页的数据的 SQL 语句是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from tb_brand  limit 0,5;</span><br></pre></td></tr></table></figure>\n<p>查询第二页的数据的 SQL 语句是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from tb_brand  limit 5,5;</span><br></pre></td></tr></table></figure>\n<p>查询第三页的数据的 SQL 语句是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from tb_brand  limit 10,5;</span><br></pre></td></tr></table></figure>\n<h4 id=\"712-前后端数据分析\"><a class=\"markdownIt-Anchor\" href=\"#712-前后端数据分析\">#</a> 7.1.2  前后端数据分析</h4>\n<p>分页查询功能时候比较复杂的，所以我们要先分析清楚以下两个问题：</p>\n<ul>\n<li>\n<p><strong>前端需要传递什么参数给后端</strong></p>\n<p>根据上一步对分页查询 SQL 语句分析得出，前端需要给后端两个参数</p>\n<ul>\n<li>当前页码 ： currentPage</li>\n<li>每页显示条数：pageSize</li>\n</ul>\n</li>\n<li>\n<p><strong>后端需要响应什么数据给前端</strong></p>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153022.png\" alt=\"image-20210826231842293\" style=\"zoom:80%;\" />\n<p>上图是分页查询页面展示的效果，从上面我们可以看出需要响应以下联股份数据</p>\n<ul>\n<li>当前页需要展示的数据。我们在后端一般会存储到 List 集合中</li>\n<li>总共记录数。在上图页面中需要展示总的记录数，所以这部分数据也需要。总的页面 elementUI 的分页组件会自动计算，我们不需要关心</li>\n</ul>\n<p>而这两部分需要封装到 PageBean 对象中，并将该对象转换为 json 格式的数据响应回给浏览器</p>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153086.png\" alt=\"image-20210826232158234\" style=\"zoom:65%;\" />\n</li>\n</ul>\n<p>通过上面的分析我们需要先在  <code>pojo</code>  包下创建  <code>PageBean</code>  类，为了做到通过会将其定义成泛型类，代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分页查询的JavaBean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PageBean</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 总记录数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> totalCount;</span><br><span class=\"line\">    <span class=\"comment\">// 当前页数据</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;T&gt; rows;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getTotalCount</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> totalCount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setTotalCount</span><span class=\"params\">(<span class=\"type\">int</span> totalCount)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.totalCount = totalCount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;T&gt; <span class=\"title function_\">getRows</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rows;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setRows</span><span class=\"params\">(List&lt;T&gt; rows)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.rows = rows;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"713-流程分析\"><a class=\"markdownIt-Anchor\" href=\"#713-流程分析\">#</a> 7.1.3  流程分析</h4>\n<p>后端需要响应 <code>总记录数</code>  和  <code>当前页的数据</code>  两部分数据给前端，所以在  <code>BrandMapper</code>   接口中需要定义两个方法：</p>\n<ul>\n<li>selectByPage () ：查询当前页的数据的方法</li>\n<li>selectTotalCount () ：查询总记录的方法</li>\n</ul>\n<p>整体流程如下：</p>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210826232620404.png\" alt=\"image-20210826232620404\"></p>\n<h3 id=\"72-后端实现\"><a class=\"markdownIt-Anchor\" href=\"#72-后端实现\">#</a> 7.2  后端实现</h3>\n<h4 id=\"721-dao方法实现\"><a class=\"markdownIt-Anchor\" href=\"#721-dao方法实现\">#</a> 7.2.1  dao 方法实现</h4>\n<p>在  <code>BrandMapper</code>  接口中定义  <code>selectByPage()</code>  方法进行分页查询，代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分页查询</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> begin</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> size</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"meta\">@Select(&quot;select * from tb_brand limit #&#123;begin&#125; , #&#123;size&#125;&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ResultMap(&quot;brandResultMap&quot;)</span></span><br><span class=\"line\">List&lt;Brand&gt; <span class=\"title function_\">selectByPage</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;begin&quot;)</span> <span class=\"type\">int</span> begin,<span class=\"meta\">@Param(&quot;size&quot;)</span> <span class=\"type\">int</span> size)</span>;</span><br></pre></td></tr></table></figure>\n<p>在  <code>BrandMapper</code>  接口中定义  <code>selectTotalCount()</code>  方法进行统计记录数，代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询总记录数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"meta\">@Select(&quot;select count(*) from tb_brand &quot;)</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">selectTotalCount</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"722-service方法实现\"><a class=\"markdownIt-Anchor\" href=\"#722-service方法实现\">#</a> 7.2.2  service 方法实现</h4>\n<p>在  <code>BrandService</code>  接口中定义  <code>selectByPage()</code>  分页查询数据的业务逻辑方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分页查询</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> currentPage  当前页码</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> pageSize   每页展示条数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    PageBean&lt;Brand&gt;  <span class=\"title function_\">selectByPage</span><span class=\"params\">(<span class=\"type\">int</span> currentPage,<span class=\"type\">int</span> pageSize)</span>;</span><br></pre></td></tr></table></figure>\n<p>在  <code>BrandServiceImpl</code>  类中重写  <code>selectByPage()</code>  方法，并进行业务逻辑实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> PageBean&lt;Brand&gt; <span class=\"title function_\">selectByPage</span><span class=\"params\">(<span class=\"type\">int</span> currentPage, <span class=\"type\">int</span> pageSize)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//3. 获取BrandMapper</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\">    <span class=\"comment\">//4. 计算开始索引</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">begin</span> <span class=\"operator\">=</span> (currentPage - <span class=\"number\">1</span>) * pageSize;</span><br><span class=\"line\">    <span class=\"comment\">// 计算查询条目数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> pageSize;</span><br><span class=\"line\">    <span class=\"comment\">//5. 查询当前页数据</span></span><br><span class=\"line\">    List&lt;Brand&gt; rows = mapper.selectByPage(begin, size);</span><br><span class=\"line\">    <span class=\"comment\">//6. 查询总记录数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">totalCount</span> <span class=\"operator\">=</span> mapper.selectTotalCount();</span><br><span class=\"line\">    <span class=\"comment\">//7. 封装PageBean对象</span></span><br><span class=\"line\">    PageBean&lt;Brand&gt; pageBean = <span class=\"keyword\">new</span> <span class=\"title class_\">PageBean</span>&lt;&gt;();</span><br><span class=\"line\">    pageBean.setRows(rows);</span><br><span class=\"line\">    pageBean.setTotalCount(totalCount);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//8. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pageBean;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"723-servlet实现\"><a class=\"markdownIt-Anchor\" href=\"#723-servlet实现\">#</a> 7.2.3  servlet 实现</h4>\n<p>在  <code>BrandServlet</code>  类中定义  <code>selectByPage()</code>   方法。而该方法的逻辑如下：</p>\n<ul>\n<li>获取页面提交的  <code>当前页码</code>  和  <code>每页显示条目数</code>  两个数据。这两个参数是在 url 后进行拼接的，格式是   <code>url?currentPage=1&amp;pageSize=5</code> 。获取这样的参数需要使用  <code>requet.getparameter()</code>  方法获取。</li>\n<li>调用 service 的  <code>selectByPage()</code>  方法进行分页查询的业务逻辑处理</li>\n<li>将查询到的数据转换为 json 格式的数据</li>\n<li>响应 json 数据</li>\n</ul>\n<p>servlet 中  <code>selectByPage()</code>  方法代码实现如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">selectByPage</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1. 接收 当前页码 和 每页展示条数    url?currentPage=1&amp;pageSize=5</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">_currentPage</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;currentPage&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">_pageSize</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;pageSize&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">currentPage</span> <span class=\"operator\">=</span> Integer.parseInt(_currentPage);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">pageSize</span> <span class=\"operator\">=</span> Integer.parseInt(_pageSize);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2. 调用service查询</span></span><br><span class=\"line\">    PageBean&lt;Brand&gt; pageBean = brandService.selectByPage(currentPage, pageSize);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2. 转为JSON</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">jsonString</span> <span class=\"operator\">=</span> JSON.toJSONString(pageBean);</span><br><span class=\"line\">    <span class=\"comment\">//3. 写数据</span></span><br><span class=\"line\">    response.setContentType(<span class=\"string\">&quot;text/json;charset=utf-8&quot;</span>);</span><br><span class=\"line\">    response.getWriter().write(jsonString);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"724-测试\"><a class=\"markdownIt-Anchor\" href=\"#724-测试\">#</a> 7.2.4  测试</h4>\n<p>在浏览器上地址栏输入  <code>http://localhost:8080/brand-case/brand/selectByPage?currentPage=1&amp;pageSize=5</code>  ，查询到以下数据</p>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210828184610060.png\" alt=\"image-20210828184610060\"></p>\n<h3 id=\"73-前端实现\"><a class=\"markdownIt-Anchor\" href=\"#73-前端实现\">#</a> 7.3  前端实现</h3>\n<h4 id=\"731-selectall-代码改进\"><a class=\"markdownIt-Anchor\" href=\"#731-selectall-代码改进\">#</a> 7.3.1  selectAll 代码改进</h4>\n<p><code>selectAll()</code>  函数之前是查询所有数据，现需要改成分页查询。 请求路径应改为  <code>http://localhost:8080/brand-case/brand/selectByPage?currentPage=1&amp;pageSize=5</code>  ，而  <code>currentPage</code>   和  <code>pageSize</code>   是需要携带的参数，分别是 当前页码 和 每页显示的条目数。</p>\n<p>刚才我们对后端代码进行测试可以看出响应回来的数据，所以在异步请求的成功回调函数（ <code>then</code>  中的匿名函数）中给页面表格的数据模型赋值  <code>_this.tableData = resp.data.rows;</code> 。整体代码如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"><span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/brand/selectByPage？currentPage=1&amp;pageSize=5&quot;</span></span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//设置表格数据</span></span><br><span class=\"line\">    _this.<span class=\"property\">tableData</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">rows</span>; <span class=\"comment\">// &#123;rows:[],totalCount:100&#125;</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>响应的数据中还有总记录数，要进行总记录数展示需要在页面绑定数据模型</p>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153610.png\" alt=\"image-20210828185553407\" style=\"zoom:70%;\" />\n<blockquote>\n<p><mark>注意：该数据模型需要在 Vue 对象中声明出来。</mark></p>\n</blockquote>\n<p>那异步请求的代码就可以优化为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"><span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/brand/selectByPage?currentPage=1&amp;pageSize=5&quot;</span></span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//设置表格数据</span></span><br><span class=\"line\">    _this.<span class=\"property\">tableData</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">rows</span>; <span class=\"comment\">// &#123;rows:[],totalCount:100&#125;</span></span><br><span class=\"line\">    <span class=\"comment\">//设置总记录数</span></span><br><span class=\"line\">    _this.<span class=\"property\">totalCount</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">totalCount</span>;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>而页面中分页组件给  <code>当前页码</code>  和  <code>每页显示的条目数</code>  都绑定了数据模型</p>\n<img data-src=\"../../../../../网上借助资料/JavaWeb/ITheima--JAVAWEB/day14-综合案例/ppt/assets/image-20210828191752872.png\" alt=\"image-20210828191752872\" style=\"zoom:80%;\" />\n<p>所以  <code>selectAll()</code>  函数中发送异步请求的资源路径中不能将当前页码和 每页显示条目数写死，代码就可以优化为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"><span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/brand/selectByPage?currentPage=&quot;</span>+<span class=\"variable language_\">this</span>.<span class=\"property\">currentPage</span>+<span class=\"string\">&quot;&amp;pageSize=&quot;</span> + <span class=\"variable language_\">this</span>.<span class=\"property\">pageSize</span></span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">resp</span> =&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//设置表格数据</span></span><br><span class=\"line\">    _this.<span class=\"property\">tableData</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">rows</span>; <span class=\"comment\">// &#123;rows:[],totalCount:100&#125;</span></span><br><span class=\"line\">    <span class=\"comment\">//设置总记录数</span></span><br><span class=\"line\">    _this.<span class=\"property\">totalCount</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">totalCount</span>;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"732-改变每页条目数\"><a class=\"markdownIt-Anchor\" href=\"#732-改变每页条目数\">#</a> 7.3.2  改变每页条目数</h4>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153822.png\" alt=\"image-20210828192937340\" style=\"zoom:80%;\" />\n<p>当我们改变每页显示的条目数后，需要重新发送异步请求。而下图是分页组件代码， <code>@size-change</code>  就是每页显示的条目数发生变化时会触发的事件</p>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153199.png\" alt=\"image-20210828193143116\" style=\"zoom:80%;\" />\n<p>而该事件绑定了一个  <code>handleSizeChange</code>  函数，整个逻辑如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">handleSizeChange</span>(<span class=\"params\">val</span>) &#123; <span class=\"comment\">//我们选择的是 ‘5条/页’ 此值就是 5.而我们选择了 `10条/页` 此值就是 10</span></span><br><span class=\"line\">    <span class=\"comment\">// 重新设置每页显示的条数</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">pageSize</span>  = val; </span><br><span class=\"line\">    <span class=\"comment\">//调用 selectAll 函数重新分页查询数据</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">selectAll</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"733-改变当前页码\"><a class=\"markdownIt-Anchor\" href=\"#733-改变当前页码\">#</a> 7.3.3  改变当前页码</h4>\n<p>当我们改变页码时，需要重新发送异步请求。而下图是分页组件代码， <code>@current-change</code>  就是页码发生变化时会触发的事件</p>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153498.png\" alt=\"image-20210828193713913\" style=\"zoom:80%;\" />\n<p>而该事件绑定了一个  <code>handleSizeChange</code>  函数，整个逻辑如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">handleCurrentChange</span>(<span class=\"params\">val</span>) &#123; <span class=\"comment\">//val 就是改变后的页码</span></span><br><span class=\"line\">    <span class=\"comment\">// 重新设置当前页码</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">currentPage</span>  = val;</span><br><span class=\"line\">    <span class=\"comment\">//调用 selectAll 函数重新分页查询数据</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">selectAll</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8条件查询\"><a class=\"markdownIt-Anchor\" href=\"#8条件查询\">#</a> 8，条件查询</h2>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153505.png\" alt=\"image-20210828212019663\" style=\"zoom:60%;\" />\n<p>上图就是用来输入条件查询的条件数据的。要做条件查询功能，先明确以下三个问题</p>\n<ul>\n<li>\n<p>3 个条件之间什么关系？</p>\n<p>同时满足，所用 SQL 中多个条件需要使用 and 关键字连接</p>\n</li>\n<li>\n<p>3 个条件必须全部填写吗？</p>\n<p>不需要。想根据哪儿个条件查询就写那个，所以这里需要使用动态 sql 语句</p>\n</li>\n<li>\n<p>条件查询需要分页吗？</p>\n<p>需要</p>\n</li>\n</ul>\n<p>根据上面三个问题的明确，我们就可以确定 sql 语句了：</p>\n<img data-src=\"../../../../../网上借助资料/JavaWeb/ITheima--JAVAWEB/day14-综合案例/ppt/assets/image-20210828213116559.png\" alt=\"image-20210828213116559\" style=\"zoom:70%;\" /> \n<p>整个条件分页查询流程如下</p>\n<p><img data-src=\"../../../../../%E7%BD%91%E4%B8%8A%E5%80%9F%E5%8A%A9%E8%B5%84%E6%96%99/JavaWeb/ITheima--JAVAWEB/day14-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/ppt/assets/image-20210828224859135.png\" alt=\"image-20210828224859135\"></p>\n<h3 id=\"81-后端实现\"><a class=\"markdownIt-Anchor\" href=\"#81-后端实现\">#</a> 8.1  后端实现</h3>\n<h4 id=\"811-dao实现\"><a class=\"markdownIt-Anchor\" href=\"#811-dao实现\">#</a> 8.1.1  dao 实现</h4>\n<p>在  <code>BrandMapper</code>  接口中定义  <code>selectByPageAndCondition()</code>  方法 和  <code>selectTotalCountByCondition</code>  方法，用来进行条件分页查询功能，方法如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分页条件查询</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> begin</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> size</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">List&lt;Brand&gt; <span class=\"title function_\">selectByPageAndCondition</span><span class=\"params\">(<span class=\"meta\">@Param(&quot;begin&quot;)</span> <span class=\"type\">int</span> begin,<span class=\"meta\">@Param(&quot;size&quot;)</span> <span class=\"type\">int</span> size,<span class=\"meta\">@Param(&quot;brand&quot;)</span> Brand brand)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据条件查询总记录数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">selectTotalCountByCondition</span><span class=\"params\">(Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n<p>参数：</p>\n<ul>\n<li><code>begin</code>  分页查询的起始索引</li>\n<li><code>size</code>  分页查询的每页条目数</li>\n<li><code>brand</code>  用来封装条件的对象</li>\n</ul>\n<p>由于这是一个复杂的查询语句，需要使用动态 sql；所以我们在映射配置文件中书写 sql 语句。 <code>brand_name</code>  字段和  <code>company_name</code>  字段需要进行模糊查询，所以需要使用  <code>%</code>  占位符。映射配置文件中 statement 书写如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--查询满足条件的数据并进行分页--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectByPageAndCondition&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;brandResultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    select *</span><br><span class=\"line\">    from tb_brand</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;brand.brandName != null and brand.brandName != &#x27;&#x27; &quot;</span>&gt;</span></span><br><span class=\"line\">            and  brand_name like #&#123;brand.brandName&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;brand.companyName != null and brand.companyName != &#x27;&#x27; &quot;</span>&gt;</span></span><br><span class=\"line\">            and  company_name like #&#123;brand.companyName&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;brand.status != null&quot;</span>&gt;</span></span><br><span class=\"line\">            and  status = #&#123;brand.status&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">    limit #&#123;begin&#125; , #&#123;size&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--查询满足条件的数据条目数--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectTotalCountByCondition&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;java.lang.Integer&quot;</span>&gt;</span></span><br><span class=\"line\">    select count(*)</span><br><span class=\"line\">    from tb_brand</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;brandName != null and brandName != &#x27;&#x27; &quot;</span>&gt;</span></span><br><span class=\"line\">            and  brand_name like #&#123;brandName&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;companyName != null and companyName != &#x27;&#x27; &quot;</span>&gt;</span></span><br><span class=\"line\">            and  company_name like #&#123;companyName&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;status != null&quot;</span>&gt;</span></span><br><span class=\"line\">            and  status = #&#123;status&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"812-service实现\"><a class=\"markdownIt-Anchor\" href=\"#812-service实现\">#</a> 8.1.2  service 实现</h4>\n<p>在  <code>BrandService</code>  接口中定义  <code>selectByPageAndCondition()</code>  分页查询数据的业务逻辑方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分页条件查询</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> currentPage</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> pageSize</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> brand</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">PageBean&lt;Brand&gt;  <span class=\"title function_\">selectByPageAndCondition</span><span class=\"params\">(<span class=\"type\">int</span> currentPage,<span class=\"type\">int</span> pageSize,Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n<p>在  <code>BrandServiceImpl</code>  类中重写  <code>selectByPageAndCondition()</code>  方法，并进行业务逻辑实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"keyword\">public</span> PageBean&lt;Brand&gt; <span class=\"title function_\">selectByPageAndCondition</span><span class=\"params\">(<span class=\"type\">int</span> currentPage, <span class=\"type\">int</span> pageSize, Brand brand)</span> &#123;</span><br><span class=\"line\">       <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">       <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">       <span class=\"comment\">//3. 获取BrandMapper</span></span><br><span class=\"line\">       <span class=\"type\">BrandMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//4. 计算开始索引</span></span><br><span class=\"line\">       <span class=\"type\">int</span> <span class=\"variable\">begin</span> <span class=\"operator\">=</span> (currentPage - <span class=\"number\">1</span>) * pageSize;</span><br><span class=\"line\">       <span class=\"comment\">// 计算查询条目数</span></span><br><span class=\"line\">       <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> pageSize;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">// 处理brand条件，模糊表达式</span></span><br><span class=\"line\">       <span class=\"type\">String</span> <span class=\"variable\">brandName</span> <span class=\"operator\">=</span> brand.getBrandName();</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (brandName != <span class=\"literal\">null</span> &amp;&amp; brandName.length() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">           brand.setBrandName(<span class=\"string\">&quot;%&quot;</span> + brandName + <span class=\"string\">&quot;%&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"type\">String</span> <span class=\"variable\">companyName</span> <span class=\"operator\">=</span> brand.getCompanyName();</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (companyName != <span class=\"literal\">null</span> &amp;&amp; companyName.length() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">           brand.setCompanyName(<span class=\"string\">&quot;%&quot;</span> + companyName + <span class=\"string\">&quot;%&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//5. 查询当前页数据</span></span><br><span class=\"line\">       List&lt;Brand&gt; rows = mapper.selectByPageAndCondition(begin, size, brand);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//6. 查询总记录数</span></span><br><span class=\"line\">       <span class=\"type\">int</span> <span class=\"variable\">totalCount</span> <span class=\"operator\">=</span> mapper.selectTotalCountByCondition(brand);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//7. 封装PageBean对象</span></span><br><span class=\"line\">       PageBean&lt;Brand&gt; pageBean = <span class=\"keyword\">new</span> <span class=\"title class_\">PageBean</span>&lt;&gt;();</span><br><span class=\"line\">       pageBean.setRows(rows);</span><br><span class=\"line\">       pageBean.setTotalCount(totalCount);</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"comment\">//8. 释放资源</span></span><br><span class=\"line\">       sqlSession.close();</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"keyword\">return</span> pageBean;</span><br><span class=\"line\">   </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><mark>注意：brandName 和 companyName 属性值到时候需要进行模糊查询，所以前后需要拼接上  <code>%</code> </mark>。</p>\n</blockquote>\n<h4 id=\"813-servlet实现\"><a class=\"markdownIt-Anchor\" href=\"#813-servlet实现\">#</a> 8.1.3  servlet 实现</h4>\n<p>在  <code>BrandServlet</code>  类中定义  <code>selectByPageAndCondition()</code>   方法。而该方法的逻辑如下：</p>\n<ul>\n<li>\n<p>获取页面提交的  <code>当前页码</code>  和  <code>每页显示条目数</code>  两个数据。这两个参数是在 url 后进行拼接的，格式是   <code>url?currentPage=1&amp;pageSize=5</code> 。获取这样的参数需要使用  <code>requet.getparameter()</code>  方法获取。</p>\n</li>\n<li>\n<p>获取页面提交的  <code>条件数据</code>  ，并将数据封装到一个 Brand 对象中。由于这部分数据到时候是需要以 json 格式进行提交的，所以我们需要通过流获取数据，具体代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取查询条件对象</span></span><br><span class=\"line\"><span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> request.getReader();</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">params</span> <span class=\"operator\">=</span> br.readLine();<span class=\"comment\">//json字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//转为 Brand</span></span><br><span class=\"line\"><span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> JSON.parseObject(params, Brand.class);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>调用 service 的  <code>selectByPageAndCondition()</code>  方法进行分页查询的业务逻辑处理</p>\n</li>\n<li>\n<p>将查询到的数据转换为 json 格式的数据</p>\n</li>\n<li>\n<p>响应 json 数据</p>\n</li>\n</ul>\n<p>servlet 中  <code>selectByPageAndCondition()</code>  方法代码实现如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 分页条件查询</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> request</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> response</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> ServletException</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> IOException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">selectByPageAndCondition</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1. 接收 当前页码 和 每页展示条数    url?currentPage=1&amp;pageSize=5</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">_currentPage</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;currentPage&quot;</span>);</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">_pageSize</span> <span class=\"operator\">=</span> request.getParameter(<span class=\"string\">&quot;pageSize&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">currentPage</span> <span class=\"operator\">=</span> Integer.parseInt(_currentPage);</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">pageSize</span> <span class=\"operator\">=</span> Integer.parseInt(_pageSize);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获取查询条件对象</span></span><br><span class=\"line\">    <span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> request.getReader();</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">params</span> <span class=\"operator\">=</span> br.readLine();<span class=\"comment\">//json字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//转为 Brand</span></span><br><span class=\"line\">    <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> JSON.parseObject(params, Brand.class);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2. 调用service查询</span></span><br><span class=\"line\">    PageBean&lt;Brand&gt; pageBean = brandService.selectByPageAndCondition(currentPage,pageSize,brand);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2. 转为JSON</span></span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">jsonString</span> <span class=\"operator\">=</span> JSON.toJSONString(pageBean);</span><br><span class=\"line\">    <span class=\"comment\">//3. 写数据</span></span><br><span class=\"line\">    response.setContentType(<span class=\"string\">&quot;text/json;charset=utf-8&quot;</span>);</span><br><span class=\"line\">    response.getWriter().write(jsonString);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"82-前端实现\"><a class=\"markdownIt-Anchor\" href=\"#82-前端实现\">#</a> 8.2  前端实现</h3>\n<p>前端代码我们从以下几方面实现：</p>\n<ol>\n<li>\n<p><strong>查询表单绑定查询条件对象模型</strong></p>\n<p>这一步在页面上已经实现了，页面代码如下：</p>\n<img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212151153943.png\" alt=\"image-20210828223817324\" style=\"zoom:70%;\" />\n</li>\n<li>\n<p><strong>点击查询按钮查询数据</strong></p>\n<img data-src=\"../../../../../网上借助资料/JavaWeb/ITheima--JAVAWEB/day14-综合案例/ppt/assets/image-20210828223952142.png\" alt=\"image-20210828223952142\" style=\"zoom:67%;\" />\n<p>从上面页面可以看到给  <code>查询</code>  按钮绑定了  <code>onSubmit()</code>  函数，而在  <code>onSubmit()</code>  函数中只需要调用  <code>selectAll()</code>  函数进行条件分页查询。</p>\n</li>\n<li>\n<p><strong>改进 selectAll () 函数</strong></p>\n<p>子页面加载完成后发送异步请求，需要携带当前页码、每页显示条数、查询条件对象。接下来先对携带的数据进行说明：</p>\n<ul>\n<li><code>当前页码</code>  和  <code>每页显示条数</code>  这两个参数我们会拼接到 URL 的后面</li>\n<li><code>查询条件对象</code>  这个参数需要以 json 格式提交给后端程序</li>\n</ul>\n<p>修改  <code>selectAll()</code>  函数逻辑为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/brand/selectByPageAndCondition?currentPage=&quot;</span>+<span class=\"variable language_\">this</span>.<span class=\"property\">currentPage</span>+<span class=\"string\">&quot;&amp;pageSize=&quot;</span>+<span class=\"variable language_\">this</span>.<span class=\"property\">pageSize</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>:<span class=\"variable language_\">this</span>.<span class=\"property\">brand</span></span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//设置表格数据</span></span><br><span class=\"line\">    _this.<span class=\"property\">tableData</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">rows</span>; <span class=\"comment\">// &#123;rows:[],totalCount:100&#125;</span></span><br><span class=\"line\">    <span class=\"comment\">//设置总记录数</span></span><br><span class=\"line\">    _this.<span class=\"property\">totalCount</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">totalCount</span>;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"9前端代码优化\"><a class=\"markdownIt-Anchor\" href=\"#9前端代码优化\">#</a> 9，前端代码优化</h2>\n<p>咱们已经将所有的功能实现完毕。而针对前端代码中的发送异步请求的代码，如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/brand/selectByPageAndCondition?currentPage=&quot;</span>+<span class=\"variable language_\">this</span>.<span class=\"property\">currentPage</span>+<span class=\"string\">&quot;&amp;pageSize=&quot;</span>+<span class=\"variable language_\">this</span>.<span class=\"property\">pageSize</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>:<span class=\"variable language_\">this</span>.<span class=\"property\">brand</span></span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//设置表格数据</span></span><br><span class=\"line\">    _this.<span class=\"property\">tableData</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">rows</span>; <span class=\"comment\">// &#123;rows:[],totalCount:100&#125;</span></span><br><span class=\"line\">    <span class=\"comment\">//设置总记录数</span></span><br><span class=\"line\">    _this.<span class=\"property\">totalCount</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">totalCount</span>;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>需要在成功的回调函数（也就是 <code>then</code>  函数中的匿名函数）中使用 this，都需要在外边使用  <code>_this</code>  记录一下  <code>this</code>  所指向的对象；因为在外边的  <code>this</code>  表示的是 Vue 对象，而回调函数中的  <code>this</code>  表示的不是 vue 对象。这里我们可以使用  <code>ECMAScript6</code>  中的新语法（箭头函数）来简化这部分代码，如上面的代码可以简化为:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/brand/selectByPageAndCondition?currentPage=&quot;</span>+<span class=\"variable language_\">this</span>.<span class=\"property\">currentPage</span>+<span class=\"string\">&quot;&amp;pageSize=&quot;</span>+<span class=\"variable language_\">this</span>.<span class=\"property\">pageSize</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>:<span class=\"variable language_\">this</span>.<span class=\"property\">brand</span></span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">resp</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//设置表格数据</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">tableData</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">rows</span>; <span class=\"comment\">// &#123;rows:[],totalCount:100&#125;</span></span><br><span class=\"line\">    <span class=\"comment\">//设置总记录数</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">totalCount</span> = resp.<span class=\"property\">data</span>.<span class=\"property\">totalCount</span>;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>箭头函数语法：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(参数) =&gt; &#123;</span><br><span class=\"line\">\t逻辑代码</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>箭头函数的作用：</strong></p>\n<p>替换（简化）匿名函数。</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/computer-science/java/course-1/%E7%AC%AC%E4%B8%80%E5%91%A8%E8%AE%A1%E7%AE%97/",
            "url": "http://example.com/computer-science/java/course-1/%E7%AC%AC%E4%B8%80%E5%91%A8%E8%AE%A1%E7%AE%97/",
            "title": "SpringBoot",
            "date_published": "2022-12-15T03:41:56.000Z",
            "content_html": "<h1 align=\"center\">SpringBoot</h1>\n<p>点解要学</p>\n<ul>\n<li>\n<p>Spring 技术是 JavaEE 开发的必备技能，企业开发技术选型命中率 &gt; 90%</p>\n</li>\n<li>\n<p>专业角度</p>\n</li>\n</ul>\n<p>用来简化开发，降低企业级开发的复杂性</p>\n<p>框架整合，高效整合其他技术，以提高企业级应用程序开发与运行效率</p>\n<ul>\n<li>简化开发</li>\n</ul>\n<p>IOC</p>\n<p>AOP</p>\n<ul>\n<li>​\t\t\t事务处理</li>\n</ul>\n<p>框架整合</p>\n<ul>\n<li>MyBaties</li>\n<li>mybatis-plus</li>\n<li>Struts</li>\n<li>Struts2</li>\n<li>Hibernate</li>\n</ul>\n<p>怎么学习</p>\n<ul>\n<li>学习 spring 框架的设计思想</li>\n<li>学习基础操作，思考操作与思想之间的联系</li>\n<li>学习案例，熟练应用操作的同时，体验思想</li>\n</ul>\n<p>初识 spring</p>\n<p>了解 spring 家族 (Spring 全家桶)</p>\n<p>发展史 (Spring 5.0)</p>\n<h1 id=\"spring-framework系统架构\"><a class=\"markdownIt-Anchor\" href=\"#spring-framework系统架构\">#</a> spring framework 系统架构</h1>\n<ul>\n<li>Spring Framework 是 spring 生态圈中最基础的项目，是其他项目的根基。</li>\n</ul>\n<p>(1) 核心层</p>\n<ul>\n<li>Core Container：核心容器，这个模块是 spring 最核心的模块，其他的都需要依赖该模块。</li>\n</ul>\n<p>(2) AOP 层</p>\n<ul>\n<li>AOP：面向切面编程，它依赖的是核心层容器，目的是 == 在不改变原有代码的前提下对其进行功能的增加。</li>\n</ul>\n<p>(3) Aspects:AOP 是思想，Aspects 是对其 AOP 思想的具体实现</p>\n<p>(3) 数据层</p>\n<ul>\n<li>Data Access: 数据访问层，Spring 全家桶中有对数据访问的具体实现技术</li>\n<li>Data Integration: 数据集成，Spring 支持整合其他的数据层解决方案，比如 Mybatis</li>\n<li>Transaction: 事务，spring 中事务管理是 spring AOP 的一个具体实现，是一个重点。</li>\n</ul>\n<p>(4) Web 层</p>\n<ul>\n<li>这一层的内容将在 springMVC 框架中具体学习</li>\n</ul>\n<p>(5) Test 层</p>\n<ul>\n<li>Spring 主要整合了 Junit 来完成单元测试和集成测试</li>\n</ul>\n<p>Spirng 核心概念内容中主要包含 IOC/DI、IOC 容器和 Bean。</p>\n<p>(1) 业务层需要调用数据层的方法，就需要在业务层 new 数据层的对象</p>\n<p>(2) 如果数据层的实现类发生变化，那么业务层的代码也需要跟着改变，发生变更后，都需要进行编译打包和重部署</p>\n<p>(3) 所以代码在编写的过程中存在的问题是：<mark>耦合度偏高</mark></p>\n<p>如何解决呢</p>\n<p><img data-src=\"java-SSM.assets/1629724206002.png\" alt=\"1629724206002\"></p>\n<p>所以现在的问题就是，业务层不想 new 对象，运行的时候又需要这个对象，该咋办呢</p>\n<p>针对这个问题，Spring 就提出了一个解决方案:</p>\n<ul>\n<li>就是在适用对象的时候，在程序中不要主动使用 new 产生对象，转换为由外部提供对象</li>\n</ul>\n<p>这种实现的思想就是 spring 的一个核心的概念</p>\n<h2 id=\"1-ioc-ioc容器-bran-di\"><a class=\"markdownIt-Anchor\" href=\"#1-ioc-ioc容器-bran-di\">#</a> 1 IOC、IOC 容器、Bran、DI</h2>\n<ol>\n<li>IOD (Inversion of Control) 控制反转</li>\n</ol>\n<p>(1) 什么是控制反转？</p>\n<ul>\n<li>使用对象的时候，由主动 new 产生对象转换为由外部提供了对象，此过程就是对象创建控制权由程序转移到外部，这个思想就是控制反转。</li>\n</ul>\n<p>(2) Spring 和 IOC 之间的关系是啥？</p>\n<ul>\n<li>Spring 技术对 IOC 思想进行了实现</li>\n<li>spring 提供了一个容器，称为 IOC 容器，用来充当 IOC 思想中的 “外部”</li>\n<li>IOC 思想中的别人 [外部] 指的就是 spring 中的 IOC 容器</li>\n</ul>\n<p>(3) IOC 容器的作用以及内部存放的是什么？</p>\n<ul>\n<li>IOC 容器负责的就是对象的创建、初始化等一系列工作，其中就包含了数据层业务层的对象。</li>\n<li>别创建或被管理的对象在 IOC 容器中统称为 Bean</li>\n<li>IOC 容器中放的就是一个个的 Bean 对象</li>\n</ul>\n<p>(4) 当 IOC 容器中创建好 service 和 dao 对象之后，程序能正确执行吗？</p>\n<ul>\n<li>不行，因为 service 运行徐娅以来 dao 对象</li>\n<li>IOC 容器中虽然 service 和 dao 对象没有任何关系</li>\n<li>需要把 dao 对象交给 service，也就是说要绑定 service 和 dao 对象之间的关系</li>\n</ul>\n<p>像这种在容器中建立对像与对象之间的绑定关系就要用到 DI：</p>\n<ol start=\"2\">\n<li>DI 依赖注入</li>\n</ol>\n<p>(1) 什么是依赖注入呢？</p>\n<ul>\n<li>在容器中建立 bean 与 bean 之间的依赖关系的整个过程，称为依赖注入</li>\n</ul>\n<p>业务层要用到数据层的类对象，以前都是自己 new 的</p>\n<p>现在要靠别人 [外部指的就是 IOC 容器] 来注入进来</p>\n<p>(2) IOC 容器中哪一些 bean 之间需要建立依赖关系呢？</p>\n<ul>\n<li>这个需要程序员根据业务需求提前建立好关系，如业务层需要依赖数据层，service 就要和 dao 建立依赖关系</li>\n</ul>\n<h3 id=\"ioc入门案例的实现\"><a class=\"markdownIt-Anchor\" href=\"#ioc入门案例的实现\">#</a> IOC 入门案例的实现</h3>\n<p><strong>添加案例中需要的类：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao save ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BookService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">BookDao</span> <span class=\"variable\">bookDao</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BookDaoImpl</span>();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book service save ...&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 resource 下添加 spring 配置文件 applicationContext.xml，并完成 bean 的配置</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span><br><span class=\"line\">&lt;beans xmlns=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class=\"line\">       xmlns:xsi=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class=\"line\">       xsi:schemaLocation=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">    &lt;!--bean标签标示配置bean</span><br><span class=\"line\">    \tid属性标示给bean起名字</span><br><span class=\"line\">    \tclass属性表示给bean定义类型</span><br><span class=\"line\">\t--&gt;</span><br><span class=\"line\">\t&lt;bean id=<span class=\"string\">&quot;bookDao&quot;</span> class=<span class=\"string\">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span>/&gt;</span><br><span class=\"line\">    &lt;bean id=<span class=\"string\">&quot;bookService&quot;</span> class=<span class=\"string\">&quot;com.itheima.service.impl.BookServiceImpl&quot;</span>/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/beans&gt;</span><br></pre></td></tr></table></figure>\n<p>获取 IOC 容器🚿</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">App</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取IOC容器</span></span><br><span class=\"line\">        ApplicationContext context=<span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext.xml&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"type\">BookDao</span> <span class=\"variable\">bookDao</span> <span class=\"operator\">=</span> (BookDao) context.getBean(<span class=\"string\">&quot;bookDao&quot;</span>);</span><br><span class=\"line\">        BookService bookService= (BookService) context.getBean(<span class=\"string\">&quot;bookService&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">        bookService.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>DI 入门案例</p>\n<blockquote>\n<p>需求：基于 IOC 入门案例，在 BookServiceImpl 类中删除 new 对象的方式，使用 Spring 的 DI 完成 Dao 层的注入</p>\n<p>1. 删除业务层中使用 new 的方式创建的 dao 对象</p>\n<p>2. 在业务层提供 BookDao 的 setter 方法</p>\n<p>3. 在配置文件中添加依赖注入的配置 (property)</p>\n<p>4. 运行程序调用方法</p>\n</blockquote>\n<h3 id=\"ioc相关的内容\"><a class=\"markdownIt-Anchor\" href=\"#ioc相关的内容\">#</a> IOC 相关的内容</h3>\n<p>bean 基础配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>bean 的 name 属性</p>\n<p>配置别名</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span>    以空格or,or;分隔开来，作用效果跟id一样</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-bean作用范围scope配置\"><a class=\"markdownIt-Anchor\" href=\"#2-bean作用范围scope配置\">#</a> 2 bean 作用范围 scope 配置</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope=&quot;prototype&quot;  这个就是非单例的</span><br><span class=\"line\">scope=&quot;singleton&quot;  这个就是单例的</span><br></pre></td></tr></table></figure>\n<p>在默认的情况之下，spring 创建的 bean 对象都是单例的</p>\n<h3 id=\"scope使用的感受\"><a class=\"markdownIt-Anchor\" href=\"#scope使用的感受\">#</a> scope 使用的感受</h3>\n<p>为什么 bean 默认的情况之下都是为单例的呢？</p>\n<ul>\n<li>\n<p>bean 为单例的意思就是说在 spring 的 IOC 容器中只会有该类的一个对象</p>\n</li>\n<li>\n<p>bean 对象只有一个就避免了对象的频繁创建跟销毁，达到了 bean 对象的复用，性能高。</p>\n</li>\n</ul>\n<p>bean 在容器中是单例的话，会不会产生线程安全问题？</p>\n<ul>\n<li>如果对象是有状态的对象，即该对象中有成员变量用来存储数据的。因为所有的请求共用一个 bean 对象，所以会存在线程安全问题。</li>\n<li>如果对象是无状态的，即该对象没有成员变量没有进行数据存储的，因为方法中的局部变量在方法调用之后会被销毁，所以不会存在线程安全问题</li>\n</ul>\n<p>哪些 bean 对象适合交给容器来进行管理</p>\n<ul>\n<li>表现层对象</li>\n<li>业务层对象</li>\n<li>数据层对象</li>\n<li>工具对象</li>\n</ul>\n<p>哪些 bean 对象不适合交给容器来进行管理</p>\n<ul>\n<li>封装是里的域对象，因为会引发线程安全问题，所以不适合。</li>\n</ul>\n<p>bean 基础配置的小结</p>\n<p>关于 bean 的基础配置中</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bean的唯一标识&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">class</span>=<span class=\"string\">&quot;bean的类全名&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">scope</span>=<span class=\"string\">&quot;bean的作用范围,有singleton(默认)和propertype&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">name</span>=<span class=\"string\">&quot;为wean取得别名&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&quot;&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-bean的实例化\"><a class=\"markdownIt-Anchor\" href=\"#3-bean的实例化\">#</a> 3 bean 的实例化</h2>\n<p>实例化的三种方法，构造方法，静态方法和实例工厂</p>\n<p>bean 本质上就是对象，对象在 new 的时候会使用构造方法完成，那么创建 bean 也是使用构造方法来完成的。</p>\n<p>将 BookDaoImpl 中的构造方法设置为 private</p>\n<p>并且在里面打印一句话来测试</p>\n<p>能执行成功，说明内部走的依旧是构造函数，能够访问类中的私有构造方法，显而易见 spring 底层用的就是反射。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title function_\">BookDaoImpl</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao constructor is running ....&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao save ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;\t</span><br></pre></td></tr></table></figure>\n<p>构造函数中添加一个参数测试</p>\n<p>程序会报错，说明 spring 底层使用的是类的无参构造方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title function_\">BookDaoImpl</span><span class=\"params\">(<span class=\"type\">int</span> i)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao constructor is running ....&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao save ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>分析 spring 的错误信息</p>\n<p>spring 的报错信息来学一学如阅读。</p>\n<ul>\n<li>错误信息从下往上来查看，因为上面的错误大都是西面错误的一个包装，最核心错误是在最下面</li>\n</ul>\n<h3 id=\"静态工厂实例化\"><a class=\"markdownIt-Anchor\" href=\"#静态工厂实例化\">#</a> 静态工厂实例化</h3>\n<p>(1) 准备一个 OrderDao 和 OrderDaoImpl 类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">OrderDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">OrderDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;order dao save ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(2) 创建一个工厂类 OrderDaoFactory 并提供一个静态方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//静态工厂创建对象</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderDaoFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> OrderDao <span class=\"title function_\">getOrderDao</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">OrderDaoImpl</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(3) 编写 AppForInstanceOrder 运行类，在类中创建工厂来获取对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AppForInstanceOrder</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//通过静态工厂创建对象</span></span><br><span class=\"line\">        <span class=\"type\">OrderDao</span> <span class=\"variable\">orderDao</span> <span class=\"operator\">=</span> OrderDaoFactory.getOrderDao();</span><br><span class=\"line\">        orderDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(1) 交给 spring 来进行管理</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;orderDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.factory.OrderDaoFactory&quot;</span> <span class=\"attr\">factory-method</span>=<span class=\"string\">&quot;getOrderDao&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>(2) 在 AppForInstanceOrder 运行类，使用从 IOC 容器中获取 bean 的方法进行运行测试</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AppForInstanceOrder</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        ApplicationContext ctx=<span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathxmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext.xml&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"type\">ApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext.xml&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">OrderDao</span> <span class=\"variable\">orderDao</span> <span class=\"operator\">=</span> (OrderDao) ctx.getBean(<span class=\"string\">&quot;orderDao&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        orderDao.save();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>静态工厂的方式反而更加复杂</li>\n</ul>\n<p>主要的原因就是：</p>\n<ul>\n<li>在工厂的静态方法中，我们除了 new 对象之外还可以做其他的一些业务操作，这些操作必不可少，如：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderDaoFactory</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> OrderDao <span class=\"title function_\">getOrderDao</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;factory setup....&quot;</span>);<span class=\"comment\">//模拟必要的业务操作</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">OrderDaoImpl</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><mark>静态工厂以了解为主</mark></p>\n<p>实例化工厂与 FactoryBean</p>\n<p>前面的三个类擦不多都是一样的，只要把其中的静态方法改编成为普通的方法就行了</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AppForInstanceUser</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建实例工厂对象</span></span><br><span class=\"line\">        <span class=\"type\">UserDaoFactory</span> <span class=\"variable\">userDaoFactory</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserDaoFactory</span>();</span><br><span class=\"line\">        <span class=\"comment\">//通过实例工厂对象创建对象</span></span><br><span class=\"line\">        <span class=\"type\">UserDao</span> <span class=\"variable\">userDao</span> <span class=\"operator\">=</span> userDaoFactory.getUserDao();</span><br><span class=\"line\">        userDao.save();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接下来就是交给 spring 来管理</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userFactory&quot;</span> <span class=\"attr\">calss</span>=<span class=\"string\">&quot;com.ityueheng.foctory.UserDaoFactory&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userDao&quot;</span> <span class=\"attr\">factory-method</span>=<span class=\"string\">&quot;getUserDao&quot;</span> <span class=\"attr\">factory-bean</span>=<span class=\"string\">&quot;UserFactory&quot;</span>/&gt;</span> </span><br></pre></td></tr></table></figure>\n<p>实例化工厂运行的顺序就是：</p>\n<ul>\n<li>\n<p>创建实例化工厂对象，对应的第一行配置</p>\n</li>\n<li>\n<p>调用对象中的方法来创建 bean，对应的是第二行配置</p>\n</li>\n</ul>\n<p>factory-bean：工厂的实例化对象</p>\n<p>factory-method：工厂对象中的具体创建对象的方法名。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AppForInstanceUser</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> </span><br><span class=\"line\">            <span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext.xml&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">UserDao</span> <span class=\"variable\">userDao</span> <span class=\"operator\">=</span> (UserDao) ctx.getBean(<span class=\"string\">&quot;userDao&quot;</span>);</span><br><span class=\"line\">        userDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>FactoryBean 的使用</p>\n<p>具体的使用步骤为：</p>\n<p>1）创建一个 UserDaoFactoryBean 的类，实现 FactoryBean 接口，重写接口中的方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserDaoFactoryBean</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">FactoryBean</span>&lt;UserDao&gt; &#123;</span><br><span class=\"line\">    <span class=\"comment\">//代替原始实例工厂中创建对象的方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> UserDao <span class=\"title function_\">getObject</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserDaoImpl</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//返回所创建类的Class对象</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> UserDao.class;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"bean的生命周期\"><a class=\"markdownIt-Anchor\" href=\"#bean的生命周期\">#</a> bean 的生命周期</h3>\n<ul>\n<li>首先理解下什么是生命周期？\n<ul>\n<li>从创建到消亡的完整过程，例如人从出生到死亡的整个过程就是一个生命周期。</li>\n</ul>\n</li>\n<li>bean 生命周期是什么？\n<ul>\n<li>bean 对象从创建到销毁的整体过程。</li>\n</ul>\n</li>\n<li>bean 生命周期控制是什么？\n<ul>\n<li>在 bean 创建后到销毁前做一些事情。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"环境准备\"><a class=\"markdownIt-Anchor\" href=\"#环境准备\">#</a> 环境准备</h4>\n<ul>\n<li>创建一个 Maven 项目</li>\n<li>pom.xml 添加依赖</li>\n<li>resources 下添加 spring 的配置文件 applicationContext.xml</li>\n</ul>\n<p>(1) 项目中添加 BookDao、BookDaoImpl、BookService 和 BookServiceImpl 类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao save ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BookService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBookDao</span><span class=\"params\">(BookDao bookDao)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookDao = bookDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book service save ...&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>(2) resources 下提供 spring 的配置文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>(3) 编写 AppForLifeCycle 运行类，加载 Spring 的 IOC 容器，并从中获取对应的 bean 对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AppForLifeCycle</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">( String[] args )</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> </span><br><span class=\"line\">        \t<span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext.xml&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">BookDao</span> <span class=\"variable\">bookDao</span> <span class=\"operator\">=</span> (BookDao) ctx.getBean(<span class=\"string\">&quot;bookDao&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"生命周期设置\"><a class=\"markdownIt-Anchor\" href=\"#生命周期设置\">#</a> 生命周期设置</h4>\n<p>在上面这个环境中来为 BookDao 添加生命周期的控制方法，具体的控制有两个阶段:</p>\n<ul>\n<li>bean 创建之后，想要添加内容，比如用来初始化需要用到资源</li>\n<li>bean 销毁之前，想要添加内容，比如用来释放用到的资源</li>\n</ul>\n<h5 id=\"步骤1添加初始化和销毁方法\"><a class=\"markdownIt-Anchor\" href=\"#步骤1添加初始化和销毁方法\">#</a> 步骤 1: 添加初始化和销毁方法</h5>\n<p>针对这两个阶段，BooDaoImpl 类中分别添加两个方法，<mark>方法名任意</mark></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao save ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//表示bean初始化对应的操作</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">init</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;init...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//表示bean销毁前对应的操作</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">destory</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;destory...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤2配置生命周期\"><a class=\"markdownIt-Anchor\" href=\"#步骤2配置生命周期\">#</a> 步骤 2: 配置生命周期</h5>\n<p>在配置文件添加配置，如下:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span> <span class=\"attr\">init-method</span>=<span class=\"string\">&quot;init&quot;</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">&quot;destory&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤3运行程序\"><a class=\"markdownIt-Anchor\" href=\"#步骤3运行程序\">#</a> 步骤 3: 运行程序</h5>\n<p>运行 AppForLifeCycle 打印结果为:</p>\n<p>从结果中可以看出，init 方法执行了，但是 destroy 方法却未执行</p>\n<ul>\n<li>Spring 的 IOC 容器是运行在 JVM 中</li>\n<li>运行 main 方法后，JVM 启动，Spring 加载配置文件生成 IOC 容器，从容器获取 bean 对象，然后调方法执行</li>\n<li>main 方法执行完后，JVM 退出，这个时候 IOC 容器中的 bean 还没有来得及销毁就已经结束了</li>\n<li>所以没有调用对应的 destroy 方法</li>\n</ul>\n<h4 id=\"close关闭容器\"><a class=\"markdownIt-Anchor\" href=\"#close关闭容器\">#</a> close 关闭容器</h4>\n<ul>\n<li>\n<p>ApplicationContext 中没有 close 方法</p>\n</li>\n<li>\n<p>需要将 ApplicationContext 更换成 ClassPathXmlApplicationContext</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ClassPathXmlApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> </span><br><span class=\"line\">    <span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext.xml&quot;</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>调用 ctx 的 close () 方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.close();</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"注册钩子关闭容器\"><a class=\"markdownIt-Anchor\" href=\"#注册钩子关闭容器\">#</a> 注册钩子关闭容器</h4>\n<ul>\n<li>\n<p>在容器未关闭之前，提前设置好回调函数，让 JVM 在退出之前回调此函数来关闭容器</p>\n</li>\n<li>\n<p>调用 ctx 的 registerShutdownHook () 方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctx.registerShutdownHook();</span><br></pre></td></tr></table></figure>\n<p>** 注意:**registerShutdownHook 在 ApplicationContext 中也没有</p>\n</li>\n<li>\n<p>运行后，查询打印结果</p>\n</li>\n</ul>\n<p>相同点：这两种都能用来关闭容器</p>\n<p>不同点:close () 是在调用的时候关闭，registerShutdownHook () 是在 JVM 退出前调用关闭。</p>\n<p>分析上面的实现过程，会发现添加初始化和销毁方法，即需要编码也需要配置，实现起来步骤比较多也比较乱。</p>\n<p>Spring 提供了两个接口来完成生命周期的控制，好处是可以不用再进行配置 <code>init-method</code>  和 <code>destroy-method</code></p>\n<p>接下来在 BookServiceImpl 完成这两个接口的使用:</p>\n<p>修改 BookServiceImpl 类，添加两个接口 <code>InitializingBean</code> ，  <code>DisposableBean</code>  并实现接口中的两个方法 <code>afterPropertiesSet</code>  和 <code>destroy</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span>, InitializingBean, DisposableBean &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBookDao</span><span class=\"params\">(BookDao bookDao)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookDao = bookDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book service save ...&quot;</span>);</span><br><span class=\"line\">        bookDao.save(); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">destroy</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;service destroy&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">afterPropertiesSet</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;service init&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>小细节</strong></p>\n<ul>\n<li>\n<p>对于 InitializingBean 接口中的 afterPropertiesSet 方法，翻译过来为 <code>属性设置之后</code> 。</p>\n</li>\n<li>\n<p>对于 BookServiceImpl 来说，bookDao 是它的一个属性</p>\n</li>\n<li>\n<p>setBookDao 方法是 Spring 的 IOC 容器为其注入属性的方法</p>\n<ul>\n<li>\n<p>从方法名分析，猜想应该是 setBookDao 方法先执行</p>\n</li>\n<li>\n<p>验证思路，在 setBookDao 方法中添加一句话</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBookDao</span><span class=\"params\">(BookDao bookDao)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;set .....&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookDao = bookDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>重新运行 AppForLifeCycle，打印结果如下:</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"bean生命周期小结\"><a class=\"markdownIt-Anchor\" href=\"#bean生命周期小结\">#</a> bean 生命周期小结</h4>\n<p>(1) 关于 Spring 中对 bean 生命周期控制提供了两种方式:</p>\n<ul>\n<li>在配置文件中的 bean 标签中添加 <code>init-method</code>  和 <code>destroy-method</code>  属性</li>\n<li>类实现 <code>InitializingBean</code>  与 <code>DisposableBean</code>  接口</li>\n</ul>\n<p>(2) 对于 bean 的生命周期控制在 bean 的整个生命周期中所处的位置如下:</p>\n<ul>\n<li>初始化容器\n<ul>\n<li>1. 创建对象 (内存分配)</li>\n<li>2. 执行构造方法</li>\n<li>3. 执行属性注入 (set 操作)</li>\n<li><mark>4. 执行 bean 初始化方法</mark></li>\n</ul>\n</li>\n<li>使用 bean\n<ul>\n<li>1. 执行业务操作</li>\n</ul>\n</li>\n<li>关闭 / 销毁容器\n<ul>\n<li><mark>1. 执行 bean 销毁方法</mark></li>\n</ul>\n</li>\n</ul>\n<p>(3) 关闭容器的两种方式:</p>\n<ul>\n<li>ConfigurableApplicationContext 是 ApplicationContext 的子类\n<ul>\n<li>close () 方法</li>\n<li>registerShutdownHook () 方法</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-di相关内容\"><a class=\"markdownIt-Anchor\" href=\"#4-di相关内容\">#</a> 4 DI 相关内容</h2>\n<h3 id=\"setter注入\"><a class=\"markdownIt-Anchor\" href=\"#setter注入\">#</a> Setter 注入</h3>\n<p>在 bean 中定义引用类型属性，并提供可访问的 set 方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBookDao</span><span class=\"params\">(BookDao bookDao)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookDao = bookDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置中使用 property 标签 ref 属性注入引用类型对象</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookDao&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.imipl.BookDaoImpl&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao save ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;user dao save ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BookService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBookDao</span><span class=\"params\">(BookDao bookDao)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookDao = bookDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book service save ...&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>引用类型的注入</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookDao&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>setter 方式的注入</p>\n<p>对于引用数据类型的使用的是<property name=\"\" ref=\"\"/></p>\n<p>对于简单数据类型的使用就是<property name=\"\" value=\"\"/></p>\n<h2 id=\"5-构造器的注入\"><a class=\"markdownIt-Anchor\" href=\"#5-构造器的注入\">#</a> 5 构造器的注入</h2>\n<p>构造器注入也就是构造方法的注入</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> String databaseName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> connectionNum;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao save ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;user dao save ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BookService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBookDao</span><span class=\"params\">(BookDao bookDao)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookDao = bookDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book service save ...&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>构造器注入引用数据类型</p>\n<blockquote>\n<p>需求：将 BookServiceImpl 类中的 bookDao 修改成为使用构造器的方式注入</p>\n<ol>\n<li>将 bookDao 中的 setter 方法删除</li>\n<li>添加带有 bookDao 参数的构造方法</li>\n<li>在 applicationContext.xml 中进行配置</li>\n</ol>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">BookServiceImpl</span><span class=\"params\">(BookDao bookDao)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookDao = bookDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book service save ...&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.ityueheng.dao.impl.BookDaoImpl&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.ityueheng.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class=\"line\">       重点： <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookDao&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>标签<constructor-arg>中</p>\n<ul>\n<li>name 属性对应的值为构造函数中的方法形参的参数名，必须要保持一致</li>\n<li>ref 属性指向的是 spring 的 IOC 容器中的其他 bean 对象</li>\n</ul>\n<p>构造器中注入多个引用的数据类型</p>\n<blockquote>\n<p>需求：在 BookServiceImpl 使用构造函数注入多个引用数据类型，比如 userDao</p>\n<ol>\n<li>\n<p>声明 userDao 属性</p>\n</li>\n<li>\n<p>生成一个带有 bookDao 和 userDao 参数的构造函数</p>\n</li>\n<li>\n<p>在 applicationContext.xml 中配置注入</p>\n</li>\n</ol>\n</blockquote>\n<p>1.<strong> 提供多个属性的构造函数</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookService</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> BookDao bookDao;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserDao userDao;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">BookServiceImpl</span><span class=\"params\">(BookDao bookDao,UserDao userDao)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.bookDao = bookDao;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.userDao = userDao;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book service save ...&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">        userDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.impl.UserDaoImpl&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookDao&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;userDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;userDao&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"构造器注入多个简单数据类型\"><a class=\"markdownIt-Anchor\" href=\"#构造器注入多个简单数据类型\">#</a> 构造器注入多个简单数据类型</h4>\n<blockquote>\n<p>需求：在 BookDaoImpl 中，使用构造函数注入 databaseName 和 connectionNum 两个参数。</p>\n<p>参考引用数据类型的注入，我们可以推出具体的步骤为:</p>\n<p>1. 提供一个包含这两个参数的构造方法</p>\n<p>2. 在 applicationContext.xml 中进行注入配置</p>\n</blockquote>\n<h5 id=\"步骤1添加多个简单属性并提供构造方法\"><a class=\"markdownIt-Anchor\" href=\"#步骤1添加多个简单属性并提供构造方法\">#</a> 步骤 1: 添加多个简单属性并提供构造方法</h5>\n<p>修改 BookDaoImpl 类，添加构造方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String databaseName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> connectionNum;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">BookDaoImpl</span><span class=\"params\">(String databaseName, <span class=\"type\">int</span> connectionNum)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.databaseName = databaseName;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.connectionNum = connectionNum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao save ...&quot;</span>+databaseName+<span class=\"string\">&quot;,&quot;</span>+connectionNum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤2配置完成多个属性构造器注入\"><a class=\"markdownIt-Anchor\" href=\"#步骤2配置完成多个属性构造器注入\">#</a> 步骤 2: 配置完成多个属性构造器注入</h5>\n<p>在 applicationContext.xml 中进行注入配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;databaseName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;mysql&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;connectionNum&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;666&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.impl.UserDaoImpl&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookDao&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;userDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;userDao&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>** 说明:** 这两个 <code>&lt;contructor-arg&gt;</code>  的配置顺序可以任意</p>\n<h5 id=\"步骤3运行程序-2\"><a class=\"markdownIt-Anchor\" href=\"#步骤3运行程序-2\">#</a> 步骤 3: 运行程序</h5>\n<p>运行 AppForDIConstructor 类，查看结果</p>\n<p>上面已经完成了构造函数注入的基本使用，但是会存在一些问题:</p>\n<ul>\n<li>当构造函数中方法的参数名发生变化后，配置文件中的 name 属性也需要跟着变</li>\n<li>这两块存在紧耦合</li>\n</ul>\n<p>方式一：删除 name 属性，添加 type 属性，然后按照类型注入</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;int&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;10&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;java.lang.String&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;mysql&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>这种方式可以解决构造函数形参名发生变化带来的耦合性</li>\n<li>但是如果构造方法参数中有类型相同的参数，这种方式不太适合</li>\n</ul>\n<p>方式二：删除 type 属性，添加 index 属性，按照索引下标注入，下标是从零开始的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;bean id=&quot;bookDaO class=&quot;com.ityueheng.dao.impl.BookDaoImpl&quot;&gt;</span><br><span class=\"line\">  &lt;constructor-arg index=&quot;0&quot; value=&quot;100&quot;&gt;</span><br><span class=\"line\">  &lt;constructor-arg index=&quot;1&quot; value=&quot;mysql&quot;&gt;</span><br><span class=\"line\">  &lt;/bean&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>这种方式可以解决参数类型重复问题</li>\n<li>但是如果构造方法参数顺序发生改变之后，这种方式又带来了耦合问题</li>\n</ul>\n<p>该如何选择</p>\n<ol>\n<li>强制依赖使用构造器注入，使用 setter 注入有概率不进行注入导致 null 对象出现</li>\n</ol>\n<p>强制依赖指的是对象在创建的时候就必须要注入指定的对象</p>\n<ol start=\"2\">\n<li>可选依赖使用 setter 注入进行，灵活性比较强</li>\n</ol>\n<p>可选依赖指的是对象在创建过程中必须要注入指定的参数</p>\n<ol start=\"3\">\n<li>spring 框架倡导使用构造器，第三方框架内部大多数采用构造器注入的形式进行数据初始化，相对来说比较严谨</li>\n<li>如果有必要可以两者同时使用，使用构造器注入完成强制依赖的注入，使用 setter 注入完成可选依赖的注入</li>\n<li>实际开发过程中还要根据实际情况分析，如果受控对象没有提供 setter 方法就必须要使用构造器方法注入</li>\n<li>自己开发的模块中推荐使用的是 setter 注入</li>\n</ol>\n<p>setter 注入</p>\n<ul>\n<li>简单数据类型</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">...</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">prperty</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>引用数据类型</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">...</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>构造器注入</p>\n<ul>\n<li>简单数据类型</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">...</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>引用数据类型</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">...</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>依赖注入的方式选择上</p>\n<ul>\n<li>建议使用 setter 注入</li>\n<li>第三方技术根据情况选择</li>\n</ul>\n<h2 id=\"6-自动配置\"><a class=\"markdownIt-Anchor\" href=\"#6-自动配置\">#</a> 6 自动配置</h2>\n<p>什么是依赖自动装配？</p>\n<ul>\n<li>IOC 容器根据 bean 所依赖资源在容器中自动查找并注入到 bean 中的过程称为自动装配</li>\n</ul>\n<p>自动类型装配有哪些</p>\n<ul>\n<li>按照类型（常用）</li>\n<li>按照名称</li>\n<li>按照构造方法</li>\n<li>不启用自动装配</li>\n</ul>\n<h3 id=\"完成自动装配的配置\"><a class=\"markdownIt-Anchor\" href=\"#完成自动装配的配置\">#</a> 完成自动装配的配置</h3>\n<p>自动装配只需要修改 applicationContext.xml 配置文件即可；</p>\n<p>1）将<property>标签删除</p>\n<p>2）在<bean>标签中添加 autowire 属性</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--autowire属性：开启自动装配，通常使用按类型装配--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.service.impl.BookServiceImpl&quot;</span> <span class=\"attr\">autowire</span>=<span class=\"string\">&quot;byType&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意事项：</p>\n<ul>\n<li>需要注入属性的类中对应的属性的 setter 方法不能省略</li>\n<li>被注入的对象必须要被 spring 的 IOC 容器管理</li>\n<li>按照类型在 spring 的 IOC 容器中如果找到多个对象，会报 NoUniqueBeanDefinitionException</li>\n</ul>\n<p>一个类型在 IOC 中有多个对象，还想要注入成功，这个时候就必须要按照名称来进行注入，配置方式为：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--autowire属性：开启自动装配，通常使用按类型装配--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.service.impl.BookServiceImpl&quot;</span> <span class=\"attr\">autowire</span>=<span class=\"string\">&quot;byName&quot;</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意事项：</p>\n<ul>\n<li>按照名称注入中的名称指的是什么？</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/lin-yueheng/IMG_01/main/img/202212031846014.png\" alt=\"image-20221203184643869\"></p>\n<p>bookDao 是 private 修饰的，外部类无法进行访问</p>\n<p>对于外部类来说只能进行 set 方法访问</p>\n<p>对于外部来说，setBookDao 方法名称，set 后首字母小写之后就是其属性名称</p>\n<ul>\n<li>如果按照名称去找对应的 bean 对象，找不到则注入 null</li>\n<li>当某一种类型在 IOC 容器中有多个对象，按照名称注入只找其指定名称对应的 bean 对象，不然会报错</li>\n</ul>\n<p>用的更多的是按照类型注入</p>\n<ol>\n<li>自动装配用于引用类型依赖注入，不能对简单类型进行操作</li>\n<li>使用按类型装配时 (byType) 必须要保证容器中的相同类型的 bean 唯一，推荐使用</li>\n<li>使用按照名次装配时 (byName) 必须要保障容器中具有指定名称的 bean，因变量与配置耦合，不推荐使用</li>\n<li>自动装配优先级低于 setter 注入和构造器注入，同时出现时自动装配配置失效</li>\n</ol>\n<h2 id=\"7-集合注入\"><a class=\"markdownIt-Anchor\" href=\"#7-集合注入\">#</a> 7 集合注入</h2>\n<p>常见的集合类型有：</p>\n<ul>\n<li>数组</li>\n<li>List</li>\n<li>Set</li>\n<li>Map</li>\n<li>Properties</li>\n</ul>\n<p>1）public interface BookDao {<br>\npublic void save();<br>\n}</p>\n<p>public class BookDaoImpl implements BookDao {</p>\n<p>public class BookDaoImpl implements BookDao {</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">int</span>[] array;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> List&lt;String&gt; list;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> Set&lt;String&gt; set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> Map&lt;String,String&gt; map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> Properties properties;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;book dao save ...&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;遍历数组:&quot;</span> + Arrays.toString(array));</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;遍历List&quot;</span> + list);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;遍历Set&quot;</span> + set);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;遍历Map&quot;</span> + map);</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;遍历Properties&quot;</span> + properties);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//setter....方法省略，自己使用工具生成</span></span><br></pre></td></tr></table></figure>\n<p>}</p>\n<p>(2) resources 下提供 spring 的配置文件，applicationContext.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.itheima.dao.impl.BookDaoImpl&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>(3) 编写 AppForDICollection 运行类，加载 Spring 的 IOC 容器，并从中获取对应的 bean 对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AppForDICollection</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">( String[] args )</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext.xml&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">BookDao</span> <span class=\"variable\">bookDao</span> <span class=\"operator\">=</span> (BookDao) ctx.getBean(<span class=\"string\">&quot;bookDao&quot;</span>);</span><br><span class=\"line\">        bookDao.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"注入数组类型数据\"><a class=\"markdownIt-Anchor\" href=\"#注入数组类型数据\">#</a> 注入数组类型数据</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;array&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">array</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>  100  <span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>  100  <span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>  100  <span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">array</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"注入list类型数据\"><a class=\"markdownIt-Anchor\" href=\"#注入list类型数据\">#</a> 注入 List 类型数据</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;list&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>itcast<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>itheima<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>boxuegu<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>chuanzhihui<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">list</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h4>\n<h4 id=\"注入set类型数据\"><a class=\"markdownIt-Anchor\" href=\"#注入set类型数据\">#</a> 注入 Set 类型数据</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;set&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>itcast<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>itheima<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>boxuegu<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>boxuegu<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"-2\"><a class=\"markdownIt-Anchor\" href=\"#-2\">#</a> </h4>\n<h4 id=\"注入map类型数据\"><a class=\"markdownIt-Anchor\" href=\"#注入map类型数据\">#</a> 注入 Map 类型数据</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;map&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">map</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;country&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;china&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;province&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;henan&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">entry</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;city&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;kaifeng&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">map</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"-3\"><a class=\"markdownIt-Anchor\" href=\"#-3\">#</a> </h4>\n<h2 id=\"8-注入properties类型数据\"><a class=\"markdownIt-Anchor\" href=\"#8-注入properties类型数据\">#</a> 8 注入 Properties 类型数据</h2>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;properties&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">props</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;country&quot;</span>&gt;</span>china<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">prop</span> <span class=\"attr\">key</span>=<span class=\"string\">&quot;city&quot;</span>&gt;</span>beijing<span class=\"tag\">&lt;/<span class=\"name\">prop</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">props</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>说明；</p>\n<ul>\n<li>properties 标签中表示 setter 方式注入，构造方式 conStructor-arg 标签内部也可以写<array>。。。。</li>\n<li>List 的底层也是用数组实现的，所以<List>和<array>标签是可以混用的</li>\n<li>集合中要添加引用类型、只需要把<value>标签改成<ref>标签，这种方式使用的比较少</li>\n</ul>\n<h2 id=\"9-iocdi配置管理第三方bean\"><a class=\"markdownIt-Anchor\" href=\"#9-iocdi配置管理第三方bean\">#</a> 9 IOC/DI 配置管理第三方 bean</h2>\n<p>数据源对象管理</p>\n<blockquote>\n<p>需求：使用 Spring 的 IOC 容器来管理 Druid 连接池对象</p>\n<ol>\n<li>使用第三方的技术，需要在 pom.xml 添加依赖</li>\n<li>在配置文件中将【第三方的类】制作成一个 bean，让 IOC 容器来进行管理</li>\n<li>数据库连接池需要基础的四要素 驱动、连接、用户名、密码，【如何注入】到对应的 bean 中</li>\n<li>从 IOC 容器中获取对应的 bean 对象，将其打印到控制台中查看结果</li>\n</ol>\n</blockquote>\n<p>pom.xml 中添加依赖</p>\n<p>配置第三方的 bean</p>\n<p>在 applicationContext.xml 配置文件中添加 DruidDataSource 的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--管理DruidDataSource对象--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClassName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/spring_db&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置第三方bean\"><a class=\"markdownIt-Anchor\" href=\"#配置第三方bean\">#</a> 配置第三方 bean</h3>\n<p>在 applicationContext.xml 配置文件中添加 <code>DruidDataSource</code>  的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!--管理DruidDataSource对象--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClassName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/spring_db&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>说明:</strong></p>\n<ul>\n<li>driverClassName: 数据库驱动</li>\n<li>url: 数据库连接地址</li>\n<li>username: 数据库连接用户名</li>\n<li>password: 数据库连接密码</li>\n<li>数据库连接的四要素要和自己使用的数据库信息一致。</li>\n</ul>\n<h3 id=\"从ioc容器中获取对应的bean对象\"><a class=\"markdownIt-Anchor\" href=\"#从ioc容器中获取对应的bean对象\">#</a> 从 IOC 容器中获取对应的 bean 对象</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">App</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">       <span class=\"type\">ApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathXmlApplicationContext</span>(<span class=\"string\">&quot;applicationContext.xml&quot;</span>);</span><br><span class=\"line\">       <span class=\"type\">DataSource</span> <span class=\"variable\">dataSource</span> <span class=\"operator\">=</span> (DataSource) ctx.getBean(<span class=\"string\">&quot;dataSource&quot;</span>);</span><br><span class=\"line\">       System.out.println(dataSource);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"-4\"><a class=\"markdownIt-Anchor\" href=\"#-4\">#</a> </h5>\n<h3 id=\"实现c3p0管理\"><a class=\"markdownIt-Anchor\" href=\"#实现c3p0管理\">#</a> 实现 c3p0 管理</h3>\n<p>配置第三方 bean</p>\n<p>在 applicationContext.xml 配置文件中添加配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClass&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;jdbcUrl&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;jdbc:mysql://localhost:3306/spring_db&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;user&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;root&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;maxPoolSize&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1000&quot;</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>ComboPooleDataSource 的属性是通过 setter 方式注入</li>\n<li>想注入的属性就需要在 ComboPooleDataSource 类或者是上层类中提供属性对应的 setter 方法</li>\n<li>C3P0 的四个属性和 Druid 的四个属性是不一样的</li>\n</ul>\n<p>注意：</p>\n<ul>\n<li>数据连接池在配置属性的时候，除了可以注入数据库连接四个要素之外还可以配置很多其他的属性，具体都有哪些属性需要自己去查\n<ul>\n<li>Druid 和 C3P0 在没有导入 mysql 驱动包的前提之下，一个报错一个没报错，说明 Druid 在初始化的时候没有加载驱动，而 C3P0 刚好相反</li>\n<li>Druid 程序运行虽然没有报错，但是当调用 DruidDataSource 的 getConnection () 方法获取链接的时候，也会找不到驱动类的错误</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"加载properties配置文件\"><a class=\"markdownIt-Anchor\" href=\"#加载properties配置文件\">#</a> 加载 properties 配置文件</h3>\n<p>包含了一些问题</p>\n<ul>\n<li>\n<p>这两个数据源中都使用到了一些固定的常量如数据库连接四个要素，把这些值写在 Spring 的配置文件中不利于后期的维护</p>\n</li>\n<li>\n<p>需要将这些值提取到一个外部的 properties 配置文件中</p>\n</li>\n<li>\n<p>Spring 框架中如何从配置文件中读取属性值来配置就是接下来的问题</p>\n</li>\n</ul>\n<p>第三方 bean 属性优化</p>\n<h5 id=\"实现思路\"><a class=\"markdownIt-Anchor\" href=\"#实现思路\">#</a> 实现思路</h5>\n<blockquote>\n<p>需求：将数据库连接四要素提取到 properties 配置文件，spring 来加载配置信息并使用这些信息来完成属性注入。</p>\n<p>1. 在 resources 下创建一个 jdbc.properties (文件的名称可以任意)</p>\n<p>2. 将数据库连接四要素配置到配置文件中</p>\n<p>3. 在 Spring 的配置文件中加载 properties 文件</p>\n<p>4. 使用加载到的值实现属性注入</p>\n<p>其中第 3，4 步骤是重点关注的，具体是如何实现。</p>\n</blockquote>\n<h5 id=\"实现步骤\"><a class=\"markdownIt-Anchor\" href=\"#实现步骤\">#</a> 实现步骤</h5>\n<p>准备好 properties 配置文件</p>\n<p>resource 下创建一个 jdbc.properties 文件，并添加对应的属性键值对</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class=\"line\">jdbc.url=jdbc:mysql://127.0.0.1:3306/Database_name</span><br><span class=\"line\">jdbc.username=root</span><br><span class=\"line\">jdbc.password=root</span><br></pre></td></tr></table></figure>\n<p>在 applicationContext.xml 中开 context 命名空间</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span>         </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>使用 ${key} 来读取 properties 配置文件中的内容并完成属性注入</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClassName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"读取单个属性\"><a class=\"markdownIt-Anchor\" href=\"#读取单个属性\">#</a> <strong>读取单个属性</strong></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"tag\">            http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.ityueheng.dao.impl.BookDaoImpl&quot;</span>&gt;</span>    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userDao&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.ityueheng.User.impl.UserDaoImpl&quot;</span>&gt;</span>    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.ityueheng.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;bookDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;bookDao&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;userDao&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;userDao&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    直接对实体类Student中的属性赋值--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;stu&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.ityueheng.pojo.Student&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;28&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;202110098141&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;林常恒&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;dataSource&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;driverClassName&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;url&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    ***</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;bookDao1&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.ityueheng.dao.impl.BookDaoImpl&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意事项：</p>\n<ul>\n<li>问题一：键值对的 key 为 username 引发的问题</li>\n</ul>\n<ol>\n<li>在 properties 中配置键值对的时候，如果 key 设置为 username</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">username=root666</span><br></pre></td></tr></table></figure>\n<p>出现问题的原因是 <code>&lt;context:property-placeholder/&gt;</code>  标签会加载系统的环境变量，而且环境变量的值会被优先加载，如何查看系统的环境变量？</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception&#123;</span><br><span class=\"line\">    Map&lt;String, String&gt; env = System.getenv();</span><br><span class=\"line\">    System.out.println(env);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;context:property-placeholder location=&quot;jdbc.properties&quot; system-properties-mode=&quot;NEVER&quot;/&gt;</span><br></pre></td></tr></table></figure>\n<p>system-properties-mode：设置为 NEVER，表示不加载系统的属性，就可以解决上述问题</p>\n<p>最好的解决方法就是避免使用 username 作为属性的 key</p>\n<p>当有多个 properties 配置文件需要被加载，该如何配置？</p>\n<p>1. 调整下配置文件的内容，在 resources 下添加 <code>jdbc.properties</code> , <code>jdbc2.properties</code> , 内容如下:</p>\n<p>jdbc.properties</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">jdbc.driver</span>=<span class=\"string\">com.mysql.jdbc.Driver</span></span><br><span class=\"line\"><span class=\"attr\">jdbc.url</span>=<span class=\"string\">jdbc:mysql://127.0.0.1:3306/spring_db</span></span><br><span class=\"line\"><span class=\"attr\">jdbc.username</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">jdbc.password</span>=<span class=\"string\">root</span></span><br></pre></td></tr></table></figure>\n<p>jdbc2.properties</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">username</span>=<span class=\"string\">root666</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方式一：</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">&quot;jdbc.properties,jdbc2.properties&quot;</span> <span class=\"attr\">system-properties-mode</span>=<span class=\"string\">&quot;NEVER&quot;</span>&gt;</span></span><br><span class=\"line\">    方式二：</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">&quot;*.properties&quot;</span> <span class=\"attr\">system-properties-mode</span>=<span class=\"string\">&quot;NEVER&quot;</span>&gt;</span></span><br><span class=\"line\">        方式三：</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">&quot;classpath:*.properties&quot;</span> <span class=\"attr\">system-properties-mode</span>=<span class=\"string\">&quot;NEVER&quot;</span>&gt;</span></span><br><span class=\"line\">                方式四：</span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">&quot;classpath*:*.properties&quot;</span> <span class=\"attr\">system-properties-mode</span>=<span class=\"string\">&quot;NEVER&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>方式一：可以实现，如果配置文件多的话，每个都需要配置</li>\n<li>方式二：*.properties 代表的是所有</li>\n<li>方式三：标准写法，classpath：代表的是从根路径开始查找，但是只能查询到当前项目的路径</li>\n<li>方式四：不仅可以加载当前项目还可以加载当前项目所依赖的所有项目的根路径下的 properties 配置文件</li>\n</ul>\n<p><img data-src=\"java-SSM.assets/image-20221209091913181.png\" alt=\"image-20221209091913181\"></p>\n<p><img data-src=\"java-SSM.assets/image-20221209093248647.png\" alt=\"image-20221209093248647\"></p>\n<h1 id=\"aop简介\"><a class=\"markdownIt-Anchor\" href=\"#aop简介\">#</a> AOP 简介：</h1>\n<p>Aop 就是在不改变原有的代码的情况下，对其进行增强</p>\n<h2 id=\"什么是aop\"><a class=\"markdownIt-Anchor\" href=\"#什么是aop\">#</a> 什么是 AOP?</h2>\n<ul>\n<li>AOP (Aspect Oriented Programming) 面向切面编程，一种编程范式，指导开发者如何组织程序结构。\n<ul>\n<li>OOP (Object Oriented Programming) 面向对象编程</li>\n</ul>\n</li>\n</ul>\n<p>OOP 是一种编程思想，那么 AOP 也是一种编程思想，编程思想主要的内容就是指导程序员该如何编写程序，所以它们两个是不同的 <code>编程范式</code> 。</p>\n<h3 id=\"aop作用\"><a class=\"markdownIt-Anchor\" href=\"#aop作用\">#</a> AOP 作用</h3>\n<ul>\n<li>作用：在不惊动原始设计的基础上为其进行功能增强，前面咱们有技术就可以实现这样的功能即代理模式。</li>\n</ul>\n<p>前面咱们有技术就可以实现这样的功能即 <code>代理模式</code> 。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Repository</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//记录程序当前执行执行（开始时间）</span></span><br><span class=\"line\">        <span class=\"type\">Long</span> <span class=\"variable\">startTime</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">        <span class=\"comment\">//业务执行万次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;i&lt;<span class=\"number\">10000</span>;i++) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;book dao save ...&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//记录程序当前执行时间（结束时间）</span></span><br><span class=\"line\">        <span class=\"type\">Long</span> <span class=\"variable\">endTime</span> <span class=\"operator\">=</span> System.currentTimeMillis();</span><br><span class=\"line\">        <span class=\"comment\">//计算时间差</span></span><br><span class=\"line\">        <span class=\"type\">Long</span> <span class=\"variable\">totalTime</span> <span class=\"operator\">=</span> endTime-startTime;</span><br><span class=\"line\">        <span class=\"comment\">//输出信息</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;执行万次消耗时间：&quot;</span> + totalTime + <span class=\"string\">&quot;ms&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">update</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao update ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">delete</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao delete ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">select</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;book dao select ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"java-SSM.assets/image-20221210162709917.png\" alt=\"image-20221210162709917\"></p>\n<p>这段代码的其他方法 (update ()，delete ()，select ()) 也能够增加跟 save () 方法一样的功能。</p>\n<p>在不惊动 (改动) 原有设计 (代码) 的前提下，想给谁添加功能就给谁添加。这个也就是 Spring 的理念：</p>\n<ul>\n<li>无入侵式 / 无侵入式</li>\n</ul>\n<p><img data-src=\"java-SSM.assets/image-20221210162641272.png\" alt=\"image-20221210162641272\"></p>\n<ul>\n<li>连接点 (JoinPoint)：程序执行过程中的任意位置，粒度为执行方法、抛出异常、设置变量等\n<ul>\n<li>在 SpringAOP 中，理解为方法的执行</li>\n</ul>\n</li>\n<li>切入点 (Pointcut): 匹配连接点的式子\n<ul>\n<li>在 SpringAOP 中，一个切入点可以描述一个具体方法，也可也匹配多个方法\n<ul>\n<li>一个具体的方法：如 com.itheima.dao 包下的 BookDao 接口中的无形参无返回值的 save 方法</li>\n<li>匹配多个方法：所有的 save 方法，所有的 get 开头的方法，所有以 Dao 结尾的接口中的任意方法，所有带有一个参数的方法</li>\n</ul>\n</li>\n<li>连接点范围要比切入点范围大，是切入点的方法也一定是连接点，但是是连接点的方法就不一定要被增强，所以可能不是切入点。</li>\n</ul>\n</li>\n<li>通知 (Advice): 在切入点处执行的操作，也就是共性功能\n<ul>\n<li>在 SpringAOP 中，功能最终以方法的形式呈现</li>\n</ul>\n</li>\n<li>通知类：定义通知的类</li>\n<li>切面 (Aspect): 描述通知与切入点的对应关系。</li>\n</ul>\n<h3 id=\"aop入门案例\"><a class=\"markdownIt-Anchor\" href=\"#aop入门案例\">#</a> AOP 入门案例</h3>\n<p>设定：在方法执行前输出当前系统时间。</p>\n<p>采用注解完成 AOP 的开发。</p>\n<blockquote>\n<p>1. 导入坐标 (pom.xml)</p>\n<p>2. 制作连接点 (原始操作，Dao 接口与实现类)</p>\n<p>3. 制作共性功能 (通知类与通知)</p>\n<p>4. 定义切入点</p>\n<p>5. 绑定切入点与通知关系 (切面)</p>\n</blockquote>\n<h3 id=\"24-aop实现步骤\"><a class=\"markdownIt-Anchor\" href=\"#24-aop实现步骤\">#</a> 2.4 AOP 实现步骤</h3>\n<h4 id=\"步骤1添加依赖\"><a class=\"markdownIt-Anchor\" href=\"#步骤1添加依赖\">#</a> 步骤 1: 添加依赖</h4>\n<p>pom.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.aspectj<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>aspectjweaver<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.9.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"java-SSM.assets/1630146885493.png\" alt=\"1630146885493\"></p>\n<ul>\n<li>因为 <code>spring-context</code>  中已经导入了 <code>spring-aop</code> , 所以不需要再单独导入 <code>spring-aop</code></li>\n<li>导入 AspectJ 的 jar 包，AspectJ 是 AOP 思想的一个具体实现，Spring 有自己的 AOP 实现，但是相比于 AspectJ 来说比较麻烦，所以我们直接采用 Spring 整合 ApsectJ 的方式进行 AOP 开发。</li>\n</ul>\n<h4 id=\"步骤2定义接口与实现类\"><a class=\"markdownIt-Anchor\" href=\"#步骤2定义接口与实现类\">#</a> 步骤 2: 定义接口与实现类</h4>\n<h4 id=\"步骤3定义通知类和通知\"><a class=\"markdownIt-Anchor\" href=\"#步骤3定义通知类和通知\">#</a> 步骤 3: 定义通知类和通知</h4>\n<p>通知就是将共性功能抽取出来后形成的方法，共性功能指的就是当前系统时间的打印。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(System.currentTimeMillis());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"步骤4定义切入点\"><a class=\"markdownIt-Anchor\" href=\"#步骤4定义切入点\">#</a> 步骤 4: 定义切入点</h4>\n<p>BookDaoImpl 中有两个方法，分别是 save 和 update，我们要增强的是 update 方法，该如何定义呢？</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(void com.itheima.dao.BookDao.update())&quot;)</span>   <span class=\"comment\">//定义通式子</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"meta\">@Before(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(System.currentTimeMillis());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>绑定切入点与通知关系，并指定通知添加到原始连接点的具体执行<mark>位置</mark></p>\n<p><img data-src=\"java-SSM.assets/1630148447689.png\" alt=\"1630148447689\"></p>\n<p><strong>说明:</strong>@Before 翻译过来是之前，也就是说通知会在切入点方法执行之前执行</p>\n<h4 id=\"步骤6将通知类配给容器并标识其为切面类\"><a class=\"markdownIt-Anchor\" href=\"#步骤6将通知类配给容器并标识其为切面类\">#</a> 步骤 6: 将通知类配给容器并标识其为切面类</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(void com.itheima.dao.BookDao.update())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Before(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(System.currentTimeMillis());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"步骤7开启注解格式aop功能\"><a class=\"markdownIt-Anchor\" href=\"#步骤7开启注解格式aop功能\">#</a> 步骤 7: 开启注解格式 AOP 功能</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan(&quot;com.itheima&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAspectJAutoProxy</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringConfig</span> &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"知识点1enableaspectjautoproxy\"><a class=\"markdownIt-Anchor\" href=\"#知识点1enableaspectjautoproxy\">#</a> 知识点 1：@EnableAspectJAutoProxy</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>@EnableAspectJAutoProxy</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>类型</td>\n<td>配置类注解</td>\n</tr>\n<tr>\n<td>位置</td>\n<td>配置类定义上方</td>\n</tr>\n<tr>\n<td>作用</td>\n<td>开启注解格式 AOP 功能</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"知识点2aspect\"><a class=\"markdownIt-Anchor\" href=\"#知识点2aspect\">#</a> 知识点 2：@Aspect</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>@Aspect</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>类型</td>\n<td>类注解</td>\n</tr>\n<tr>\n<td>位置</td>\n<td>切面类定义上方</td>\n</tr>\n<tr>\n<td>作用</td>\n<td>设置当前类为 AOP 切面类</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"知识点3pointcut\"><a class=\"markdownIt-Anchor\" href=\"#知识点3pointcut\">#</a> 知识点 3：@Pointcut</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>@Pointcut</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>类型</td>\n<td>方法注解</td>\n</tr>\n<tr>\n<td>位置</td>\n<td>切入点方法定义上方</td>\n</tr>\n<tr>\n<td>作用</td>\n<td>设置切入点方法</td>\n</tr>\n<tr>\n<td>属性</td>\n<td>value（默认）：切入点表达式</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"知识点4before\"><a class=\"markdownIt-Anchor\" href=\"#知识点4before\">#</a> 知识点 4：@Before</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>@Before</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>类型</td>\n<td>方法注解</td>\n</tr>\n<tr>\n<td>位置</td>\n<td>通知方法定义上方</td>\n</tr>\n<tr>\n<td>作用</td>\n<td>设置当前通知方法与切入点之间的绑定关系，当前通知方法在原始切入点方法前运行</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"aop工作流程\"><a class=\"markdownIt-Anchor\" href=\"#aop工作流程\">#</a> AOP 工作流程</h3>\n<p>由于 AOP 是基于 Spring 容器管理的 bean 做的增强，所以整个工作过程需要从 Spring 加载 bean 说起:</p>\n<h4 id=\"流程1spring容器启动\"><a class=\"markdownIt-Anchor\" href=\"#流程1spring容器启动\">#</a> 流程 1:Spring 容器启动</h4>\n<ul>\n<li>容器启动就需要去加载 bean, 哪些类需要被加载呢？</li>\n<li>需要被增强的类，如：BookServiceImpl</li>\n<li>通知类，如：MyAdvice</li>\n<li>注意此时 bean 对象还没有创建成功</li>\n</ul>\n<h4 id=\"流程2读取所有切面配置中的切入点\"><a class=\"markdownIt-Anchor\" href=\"#流程2读取所有切面配置中的切入点\">#</a> 流程 2: 读取所有切面配置中的切入点</h4>\n<p><img data-src=\"java-SSM.assets/1630151682428.png\" alt=\"1630151682428\"></p>\n<ul>\n<li>上面这个例子中有两个切入点的配置，但是第一个 <code>ptx()</code>  并没有被使用，所以不会被读取。</li>\n</ul>\n<h4 id=\"流程3初始化bean\"><a class=\"markdownIt-Anchor\" href=\"#流程3初始化bean\">#</a> 流程 3: 初始化 bean，</h4>\n<p>判定 bean 对应的类中的方法是否匹配到任意切入点</p>\n<ul>\n<li>\n<p>注意第 1 步在容器启动的时候，bean 对象还没有被创建成功。</p>\n</li>\n<li>\n<p>要被实例化 bean 对象的类中的方法和切入点进行匹配</p>\n<p><img data-src=\"java-SSM.assets/1630152538083.png\" alt=\"1630152538083\"></p>\n<ul>\n<li>匹配失败，创建原始对象，如 <code>UserDao</code>\n<ul>\n<li>匹配失败说明不需要增强，直接调用原始对象的方法即可。</li>\n</ul>\n</li>\n<li>匹配成功，创建原始对象（<mark>目标对象</mark>）的<mark>代理</mark>对象，如: <code>BookDao</code>\n<ul>\n<li>匹配成功说明需要对其进行增强</li>\n<li>对哪个类做增强，这个类对应的对象就叫做目标对象</li>\n<li>因为要对目标对象进行功能增强，而采用的技术是动态代理，所以会为其创建一个代理对象</li>\n<li>最终运行的是代理对象的方法，在该方法中会对原始方法进行功能增强</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"流程4获取bean执行方法\"><a class=\"markdownIt-Anchor\" href=\"#流程4获取bean执行方法\">#</a> 流程 4: 获取 bean 执行方法</h4>\n<ul>\n<li>获取的 bean 是原始对象时，调用方法并执行，完成操作</li>\n<li>获取的 bean 是代理对象时，根据代理对象的运行模式运行原始方法与增强的内容，完成操作</li>\n</ul>\n<h4 id=\"验证容器中是否为代理对象\"><a class=\"markdownIt-Anchor\" href=\"#验证容器中是否为代理对象\">#</a> 验证容器中是否为代理对象</h4>\n<p>为了验证 IOC 容器中创建的对象和我们刚才所说的结论是否一致，首先先把结论理出来:</p>\n<ul>\n<li>如果目标对象中的方法会被增强，那么容器中将存入的是目标对象的代理对象</li>\n<li>如果目标对象中的方法不被增强，那么容器中将存入的是目标对象本身。</li>\n</ul>\n<h5 id=\"步骤1修改app类获取类的类型\"><a class=\"markdownIt-Anchor\" href=\"#步骤1修改app类获取类的类型\">#</a> 步骤 1: 修改 App 类，获取类的类型</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">App</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ApplicationContext</span> <span class=\"variable\">ctx</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">AnnotationConfigApplicationContext</span>(SpringConfig.class);</span><br><span class=\"line\">        <span class=\"type\">BookDao</span> <span class=\"variable\">bookDao</span> <span class=\"operator\">=</span> ctx.getBean(BookDao.class);</span><br><span class=\"line\">        System.out.println(bookDao);</span><br><span class=\"line\">        System.out.println(bookDao.getClass());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤2修改myadvice类不增强\"><a class=\"markdownIt-Anchor\" href=\"#步骤2修改myadvice类不增强\">#</a> 步骤 2: 修改 MyAdvice 类，不增强</h5>\n<p>因为定义的切入点中，被修改成 <code>update1</code> , 所以 BookDao 中的 update 方法在执行的时候，就不会被增强，</p>\n<p>所以容器中的对象应该是目标对象本身。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(void com.itheima.dao.BookDao.update1())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Before(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(System.currentTimeMillis());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤3运行程序-3\"><a class=\"markdownIt-Anchor\" href=\"#步骤3运行程序-3\">#</a> 步骤 3: 运行程序</h5>\n<p><img data-src=\"java-SSM.assets/1630154495165.png\" alt=\"1630154495165\"></p>\n<h5 id=\"步骤4修改myadvice类增强\"><a class=\"markdownIt-Anchor\" href=\"#步骤4修改myadvice类增强\">#</a> 步骤 4: 修改 MyAdvice 类，增强</h5>\n<p>因为定义的切入点中，被修改成 <code>update</code> , 所以 BookDao 中的 update 方法在执行的时候，就会被增强，</p>\n<p>所以容器中的对象应该是目标对象的代理对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(void com.itheima.dao.BookDao.update())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Before(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">method</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(System.currentTimeMillis());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤5运行程序\"><a class=\"markdownIt-Anchor\" href=\"#步骤5运行程序\">#</a> 步骤 5: 运行程序</h5>\n<p><img data-src=\"java-SSM.assets/1630154625564.png\" alt=\"1630154625564\"></p>\n<p>描述方式一：执行 com.itheima.dao 包下的 BookDao 接口中的无参数 update 方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">execution(<span class=\"keyword\">void</span> com.itheima.dao.BookDao.update())</span><br></pre></td></tr></table></figure>\n<p>描述方式二：执行 com.itheima.dao.impl 包下的 BookDaoImpl 类中的无参数 update 方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">execution(void com.itheima.dao.impl.BookDaoImpl.update())</span><br></pre></td></tr></table></figure>\n<p>对于切入点表达式的语法为:</p>\n<ul>\n<li>切入点表达式标准格式：动作关键字 (访问修饰符  返回值  包名。类 / 接口名。方法名 (参数) 异常名）</li>\n</ul>\n<p>对于这个格式，不需要硬记，通过一个例子，理解它:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">execution(public User com.itheima.service.UserService.findById(int))</span><br></pre></td></tr></table></figure>\n<ul>\n<li>execution：动作关键字，描述切入点的行为动作，例如 execution 表示执行到指定切入点</li>\n<li>public: 访问修饰符，还可以是 public，private 等，可以省略</li>\n<li>User：返回值，写返回值类型</li>\n<li>com.itheima.service：包名，多级包使用点连接</li>\n<li>UserService: 类 / 接口名称</li>\n<li>findById：方法名</li>\n<li>int: 参数，直接写参数的类型，多个类型用逗号隔开</li>\n<li>异常名：方法定义中抛出指定异常，可以省略</li>\n</ul>\n<p>切入点表达式就是要找到需要增强的方法</p>\n<h3 id=\"语法格式和通配符号\"><a class=\"markdownIt-Anchor\" href=\"#语法格式和通配符号\">#</a> 语法格式和通配符号</h3>\n<ul>\n<li>\n<p><code>*</code> : 单个独立的任意符号，可以独立出现，也可以作为前缀或者后缀的匹配符出现</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">execution（public * com.itheima.*.UserService.find*(*))</span><br></pre></td></tr></table></figure>\n<p>匹配 com.itheima 包下的任意包中的 UserService 类或接口中所有 find 开头的带有一个参数的方法</p>\n</li>\n<li>\n<p><code>..</code> ：多个连续的任意符号，可以独立出现，常用于简化包名与参数的书写</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">execution（public User com..UserService.findById(..))</span><br></pre></td></tr></table></figure>\n<p>匹配 com 包下的任意包中的 UserService 类或接口中所有名称为 findById 的方法</p>\n</li>\n<li>\n<p><code>+</code> ：专用于匹配子类类型</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">execution(* *..*Service+.*(..))</span><br></pre></td></tr></table></figure>\n<p>这个使用率较低，描述子类的，继承机会就一次，使用都很慎重，所以很少用它。*Service+，表示所有以 Service 结尾的接口的子类。</p>\n</li>\n</ul>\n<p><img data-src=\"java-SSM.assets/1630163744963.png\" alt=\"1630163744963\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">execution(<span class=\"keyword\">void</span> com.itheima.dao.BookDao.update())</span><br><span class=\"line\">匹配接口，能匹配到</span><br><span class=\"line\">execution(<span class=\"keyword\">void</span> com.itheima.dao.impl.BookDaoImpl.update())</span><br><span class=\"line\">匹配实现类，能匹配到</span><br><span class=\"line\">execution(* com.itheima.dao.impl.BookDaoImpl.update())</span><br><span class=\"line\">返回值任意，能匹配到</span><br><span class=\"line\">execution(* com.itheima.dao.impl.BookDaoImpl.update(*))</span><br><span class=\"line\">返回值任意，但是update方法必须要有一个参数，无法匹配，要想匹配需要在update接口和实现类添加参数</span><br><span class=\"line\">execution(<span class=\"keyword\">void</span> com.*.*.*.*.update())</span><br><span class=\"line\">返回值为<span class=\"keyword\">void</span>,com包下的任意包三层包下的任意类的update方法，匹配到的是实现类，能匹配</span><br><span class=\"line\">execution(<span class=\"keyword\">void</span> com.*.*.*.update())</span><br><span class=\"line\">返回值为<span class=\"keyword\">void</span>,com包下的任意两层包下的任意类的update方法，匹配到的是接口，能匹配</span><br><span class=\"line\">execution(<span class=\"keyword\">void</span> *..update())</span><br><span class=\"line\">返回值为<span class=\"keyword\">void</span>，方法名是update的任意包下的任意类，能匹配</span><br><span class=\"line\">execution(* *..*(..))</span><br><span class=\"line\">匹配项目中任意类的任意方法，能匹配，但是不建议使用这种方式，影响范围广</span><br><span class=\"line\">execution(* *..u*(..))</span><br><span class=\"line\">匹配项目中任意包任意类下只要以u开头的方法，update方法能满足，能匹配</span><br><span class=\"line\">execution(* *..*e(..))</span><br><span class=\"line\">匹配项目中任意包任意类下只要以e结尾的方法，update和save方法能满足，能匹配</span><br><span class=\"line\">execution(<span class=\"keyword\">void</span> com..*())</span><br><span class=\"line\">返回值为<span class=\"keyword\">void</span>，com包下的任意包任意类任意方法，能匹配，*代表的是方法</span><br><span class=\"line\">execution(* com.itheima.*.*Service.find*(..))</span><br><span class=\"line\">将项目中所有业务层方法的以find开头的方法匹配</span><br><span class=\"line\">execution(* com.itheima.*.*Service.save*(..))</span><br><span class=\"line\">将项目中所有业务层方法的以save开头的方法匹配</span><br></pre></td></tr></table></figure>\n<p>后面两种更符合我们平常切入点表达式的编写规则</p>\n<h4 id=\"书写技巧\"><a class=\"markdownIt-Anchor\" href=\"#书写技巧\">#</a> 书写技巧</h4>\n<p>对于切入点表达式的编写其实是很灵活的，那么在编写的时候，有没有什么好的技巧让我们用用:</p>\n<ul>\n<li>所有代码按照标准规范开发，否则以下技巧全部失效</li>\n<li>描述切入点通 **<mark> 常描述接口</mark> **，而不描述实现类，如果描述到实现类，就出现紧耦合了</li>\n<li>访问控制修饰符针对接口开发均采用 public 描述（<strong><mark>可省略访问控制修饰符描述</mark></strong>）</li>\n<li>返回值类型对于增删改类使用精准类型加速匹配，对于查询类使用 * 通配快速描述</li>\n<li><strong><mark>包名</mark><strong>书写</strong><mark>尽量不使用… 匹配</mark></strong>，效率过低，常用 * 做单个包描述匹配，或精准匹配</li>\n<li><strong><mark>接口名 / 类名</mark><strong>书写名称与模块相关的</strong><mark>采用 * 匹配</mark></strong>，例如 UserService 书写成 * Service，绑定业务层接口名</li>\n<li><strong><mark>方法名</mark><strong>书写以</strong><mark>动词</mark><strong>进行</strong><mark>精准匹配</mark></strong>，名词采用<em>匹配，例如 getById 书写成 getBy</em>,selectAll 书写成 selectAll</li>\n<li>参数规则较为复杂，根据业务方法灵活调整</li>\n<li>通常 **<mark> 不使用异常</mark><strong>作为</strong><mark>匹配</mark> ** 规则</li>\n</ul>\n<p>共提供了 5 种通知类型:</p>\n<ul>\n<li>前置通知</li>\n<li>后置通知</li>\n<li><strong><mark>环绕通知 (重点)</mark></strong></li>\n<li>返回后通知 (了解)</li>\n<li>抛出异常后通知 (了解)</li>\n</ul>\n<p><img data-src=\"java-SSM.assets/1630166147697.png\" alt=\"1630166147697\"></p>\n<p>(1) 前置通知，追加功能到方法执行前，类似于在代码 1 或者代码 2 添加内容</p>\n<p>(2) 后置通知，追加功能到方法执行后，不管方法执行的过程中有没有抛出异常都会执行，类似于在代码 5 添加内容</p>\n<p>(3) 返回后通知，追加功能到方法执行后，只有方法正常执行结束后才进行，类似于在代码 3 添加内容，如果方法执行抛出异常，返回后通知将不会被添加</p>\n<p>(4) 抛出异常后通知，追加功能到方法抛出异常后，只有方法执行出异常才进行，类似于在代码 4 添加内容，只有方法抛出异常后才会被添加</p>\n<p>(5) 环绕通知，环绕通知功能比较强大，它可以追加功能到方法执行的前后，这也是比较常用的方式，它可以实现其他四种通知类型的功能</p>\n<h5 id=\"前置通知\"><a class=\"markdownIt-Anchor\" href=\"#前置通知\">#</a> 前置通知</h5>\n<p>修改 MyAdvice, 在 before 方法上添加 <code>@Before注解</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(void com.itheima.dao.BookDao.update())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Before(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"comment\">//此处也可以写成 @Before(&quot;MyAdvice.pt()&quot;),不建议</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">before</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;before advice ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"后置通知\"><a class=\"markdownIt-Anchor\" href=\"#后置通知\">#</a> 后置通知</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(void com.itheima.dao.BookDao.update())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Before(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">before</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;before advice ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@After(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">after</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;after advice ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"环绕通知\"><a class=\"markdownIt-Anchor\" href=\"#环绕通知\">#</a> 环绕通知</h5>\n<h6 id=\"基本使用\"><a class=\"markdownIt-Anchor\" href=\"#基本使用\">#</a> 基本使用</h6>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(void com.itheima.dao.BookDao.update())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Around(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">around</span><span class=\"params\">(ProceedingJoinPoint pjp)</span> <span class=\"keyword\">throws</span> Throwable&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;around before advice ...&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//表示对原始操作的调用</span></span><br><span class=\"line\">        pjp.proceed();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;around after advice ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>标准格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(void com.itheima.dao.BookDao.update())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(int com.itheima.dao.BookDao.select())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt2</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Around(&quot;pt2()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">aroundSelect</span><span class=\"params\">(ProceedingJoinPoint pjp)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;around before advice ...&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//表示对原始操作的调用</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> pjp.proceed();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;around after advice ...&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>说明:</strong></p>\n<p>​\t为什么返回的是 Object 而不是 int 的主要原因是 Object 类型更通用。</p>\n<p>​\t在环绕通知中是可以对原始方法返回值就行修改的。</p>\n<h5 id=\"返回后通知\"><a class=\"markdownIt-Anchor\" href=\"#返回后通知\">#</a> 返回后通知</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(void com.itheima.dao.BookDao.update())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(int com.itheima.dao.BookDao.select())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt2</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@AfterReturning(&quot;pt2()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">afterReturning</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;afterReturning advice ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"异常后通知\"><a class=\"markdownIt-Anchor\" href=\"#异常后通知\">#</a> 异常后通知</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(void com.itheima.dao.BookDao.update())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(int com.itheima.dao.BookDao.select())&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt2</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@AfterReturning(&quot;pt2()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">afterThrowing</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;afterThrowing advice ...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>因为环绕通知是可以控制原始方法执行的，所以把增强的代码写在调用原始方法的不同位置就可以实现不同的通知类型的功能，如:</p>\n<p><img data-src=\"java-SSM.assets/1630170090945.png\" alt=\"1630170090945\"></p>\n<h5 id=\"-5\"><a class=\"markdownIt-Anchor\" href=\"#-5\">#</a> </h5>\n<h4 id=\"获取参数\"><a class=\"markdownIt-Anchor\" href=\"#获取参数\">#</a> 获取参数</h4>\n<h5 id=\"非环绕通知获取方式\"><a class=\"markdownIt-Anchor\" href=\"#非环绕通知获取方式\">#</a> 非环绕通知获取方式</h5>\n<p>在方法上添加 JoinPoint, 通过 JoinPoint 来获取参数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(* com.itheima.dao.BookDao.findName(..))&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Before(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">before</span><span class=\"params\">(JoinPoint jp)</span> </span><br><span class=\"line\">        Object[] args = jp.getArgs();</span><br><span class=\"line\">        System.out.println(Arrays.toString(args));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;before advice ...&quot;</span> );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"comment\">//...其他的略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"java-SSM.assets/1630233291929.png\" alt=\"1630233291929\"></p>\n<p>参数的个数是不固定的，所以使用数组更通配些。</p>\n<h5 id=\"环绕通知获取方式\"><a class=\"markdownIt-Anchor\" href=\"#环绕通知获取方式\">#</a> 环绕通知获取方式</h5>\n<p>环绕通知使用的是 ProceedingJoinPoint，因为 ProceedingJoinPoint 是 JoinPoint 类的子类，所以对于 ProceedingJoinPoint 类中应该也会有对应的 <code>getArgs()</code>  方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(* com.itheima.dao.BookDao.findName(..))&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Around(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">around</span><span class=\"params\">(ProceedingJoinPoint pjp)</span><span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">        Object[] args = pjp.getArgs();</span><br><span class=\"line\">        System.out.println(Arrays.toString(args));</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> pjp.proceed();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"comment\">//其他的略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行 App 后查看运行结果，说明 ProceedingJoinPoint 也是可以通过 getArgs () 获取参数</p>\n<p><img data-src=\"java-SSM.assets/1630233974310.png\" alt=\"1630233974310\"></p>\n<ul>\n<li>\n<p>pjp.proceed () 方法是有两个构造方法，分别是:</p>\n<p><img data-src=\"java-SSM.assets/1630234756123.png\" alt=\"1630234756123\"></p>\n<ul>\n<li>\n<p>调用无参数的 proceed，当原始方法有参数，会在调用的过程中自动传入参数</p>\n</li>\n<li>\n<p>所以调用这两个方法的任意一个都可以完成功能</p>\n</li>\n<li>\n<p>但是当需要修改原始方法的参数时，就只能采用带有参数的方法，如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(* com.itheima.dao.BookDao.findName(..))&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Around(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">around</span><span class=\"params\">(ProceedingJoinPoint pjp)</span> <span class=\"keyword\">throws</span> Throwable&#123;</span><br><span class=\"line\">        Object[] args = pjp.getArgs();</span><br><span class=\"line\">        System.out.println(Arrays.toString(args));</span><br><span class=\"line\">        args[<span class=\"number\">0</span>] = <span class=\"number\">666</span>;</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> pjp.proceed(args);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"comment\">//其他的略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>有了这个特性后，就可以在环绕通知中对原始方法的参数进行拦截过滤，避免由于参数的问题导致程序无法正确运行，保证代码的健壮性。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"获取返回值\"><a class=\"markdownIt-Anchor\" href=\"#获取返回值\">#</a> 获取返回值</h4>\n<p>对于返回值，只有返回后 <code>AfterReturing</code>  和环绕 <code>Around</code>  这两个通知类型可以获取，具体如何获取？</p>\n<h5 id=\"环绕通知获取返回值\"><a class=\"markdownIt-Anchor\" href=\"#环绕通知获取返回值\">#</a> 环绕通知获取返回值</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(* com.itheima.dao.BookDao.findName(..))&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Around(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">around</span><span class=\"params\">(ProceedingJoinPoint pjp)</span> <span class=\"keyword\">throws</span> Throwable&#123;</span><br><span class=\"line\">        Object[] args = pjp.getArgs();</span><br><span class=\"line\">        System.out.println(Arrays.toString(args));</span><br><span class=\"line\">        args[<span class=\"number\">0</span>] = <span class=\"number\">666</span>;</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> pjp.proceed(args);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"comment\">//其他的略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上述代码中， <code>ret</code>  就是方法的返回值，我们是可以直接获取，不但可以获取，如果需要还可以进行修改。</p>\n<h5 id=\"返回后通知获取返回值\"><a class=\"markdownIt-Anchor\" href=\"#返回后通知获取返回值\">#</a> 返回后通知获取返回值</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(* com.itheima.dao.BookDao.findName(..))&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@AfterReturning(value = &quot;pt()&quot;,returning = &quot;ret&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">afterReturning</span><span class=\"params\">(Object ret)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;afterReturning advice ...&quot;</span>+ret);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"comment\">//其他的略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><mark>注意:</mark></p>\n<p>(1) 参数名的问题</p>\n<p><img data-src=\"java-SSM.assets/1630237320870.png\" alt=\"1630237320870\"></p>\n<p>(2) afterReturning 方法参数类型的问题</p>\n<p>参数类型可以写成 String，但是为了能匹配更多的参数类型，最好写成 Object 类型</p>\n<p>(3) afterReturning 方法参数的顺序问题</p>\n<p><img data-src=\"java-SSM.assets/1630237586682.png\" alt=\"1630237586682\"></p>\n<p>运行 App 后查看运行结果，说明返回值已经被获取到</p>\n<p><img data-src=\"java-SSM.assets/1630237372286.png\" alt=\"1630237372286\"></p>\n<h4 id=\"-6\"><a class=\"markdownIt-Anchor\" href=\"#-6\">#</a> </h4>\n<h4 id=\"获取异常\"><a class=\"markdownIt-Anchor\" href=\"#获取异常\">#</a> 获取异常</h4>\n<p>对于获取抛出的异常，只有抛出异常后 <code>AfterThrowing</code>  和环绕 <code>Around</code>  这两个通知类型可以获取</p>\n<h5 id=\"环绕通知获取异常\"><a class=\"markdownIt-Anchor\" href=\"#环绕通知获取异常\">#</a> 环绕通知获取异常</h5>\n<p>只需要将异常捕获，就可以获取到原始方法的异常信息</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(* com.itheima.dao.BookDao.findName(..))&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Around(&quot;pt()&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">around</span><span class=\"params\">(ProceedingJoinPoint pjp)</span>&#123;</span><br><span class=\"line\">        Object[] args = pjp.getArgs();</span><br><span class=\"line\">        System.out.println(Arrays.toString(args));</span><br><span class=\"line\">        args[<span class=\"number\">0</span>] = <span class=\"number\">666</span>;</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            ret = pjp.proceed(args);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(Throwable throwable)&#123;</span><br><span class=\"line\">            t.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"comment\">//其他的略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 catch 方法中就可以获取到异常</p>\n<h5 id=\"抛出异常后通知获取异常\"><a class=\"markdownIt-Anchor\" href=\"#抛出异常后通知获取异常\">#</a> 抛出异常后通知获取异常</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(* com.itheima.dao.BookDao.findName(..))&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">pt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@AfterThrowing(value = &quot;pt()&quot;,throwing = &quot;t&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">afterThrowing</span><span class=\"params\">(Throwable t)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;afterThrowing advice ...&quot;</span>+t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t<span class=\"comment\">//其他的略</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>让原始方法抛出异常</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Repository</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BookDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BookDao</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">findName</span><span class=\"params\">(<span class=\"type\">int</span> id,String password)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;id:&quot;</span>+id);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;itcast&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><mark>注意:</mark></p>\n<p><img data-src=\"java-SSM.assets/1630239939043.png\" alt=\"1630239939043\"></p>\n<p>异常信息</p>\n<p><img data-src=\"java-SSM.assets/1630239997560.png\" alt=\"1630239997560\"></p>\n<h2 id=\"百度网盘密码数据兼容处理\"><a class=\"markdownIt-Anchor\" href=\"#百度网盘密码数据兼容处理\">#</a> 百度网盘密码数据兼容处理</h2>\n<h4 id=\"需求分析\"><a class=\"markdownIt-Anchor\" href=\"#需求分析\">#</a> 需求分析</h4>\n<p>需求：对百度网盘分享链接输入密码时尾部多输入的空格做兼容处理。</p>\n<p><img data-src=\"java-SSM.assets/1630240203033.png\" alt=\"1630240203033\"></p>\n<p>问题描述:</p>\n<ul>\n<li>\n<p>点击链接，会提示，请输入提取码</p>\n<p><img data-src=\"java-SSM.assets/1630240528228.png\" alt=\"1630240528228\"></p>\n</li>\n</ul>\n<h4 id=\"具体实现\"><a class=\"markdownIt-Anchor\" href=\"#具体实现\">#</a> 具体实现</h4>\n<h5 id=\"步骤1开启springaop的注解功能\"><a class=\"markdownIt-Anchor\" href=\"#步骤1开启springaop的注解功能\">#</a> 步骤 1: 开启 SpringAOP 的注解功能</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan(&quot;com.ityueheng&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAspectJAutoProxy</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SpringConfig</span> &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤2编写通知类\"><a class=\"markdownIt-Anchor\" href=\"#步骤2编写通知类\">#</a> 步骤 2: 编写通知类</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DataAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(boolean com.ityueheng.service.*Service.*(*,*))&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">servicePt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤3添加环绕通知\"><a class=\"markdownIt-Anchor\" href=\"#步骤3添加环绕通知\">#</a> 步骤 3: 添加环绕通知</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DataAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(boolean com.ityueheng.service.*Service.*(*,*))&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">servicePt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Around(&quot;DataAdvice.servicePt()&quot;)</span></span><br><span class=\"line\">    <span class=\"comment\">// @Around(&quot;servicePt()&quot;)这两种写法都对</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">trimStr</span><span class=\"params\">(ProceedingJoinPoint pjp)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> pjp.proceed();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤4完成核心业务处理参数中的空格\"><a class=\"markdownIt-Anchor\" href=\"#步骤4完成核心业务处理参数中的空格\">#</a> 步骤 4: 完成核心业务，处理参数中的空格</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DataAdvice</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Pointcut(&quot;execution(boolean com.ityueheng.service.*Service.*(*,*))&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">servicePt</span><span class=\"params\">()</span>&#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Around(&quot;DataAdvice.servicePt()&quot;)</span></span><br><span class=\"line\">    <span class=\"comment\">// @Around(&quot;servicePt()&quot;)这两种写法都对</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">trimStr</span><span class=\"params\">(ProceedingJoinPoint pjp)</span> <span class=\"keyword\">throws</span> Throwable &#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取原始方法的参数</span></span><br><span class=\"line\">        Object[] args = pjp.getArgs();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; args.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断参数是不是字符串</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(args[i].getClass().equals(String.class))&#123;</span><br><span class=\"line\">                args[i] = args[i].toString().trim();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//将修改后的参数传入到原始方法的执行中</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">ret</span> <span class=\"operator\">=</span> pjp.proceed(args);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"步骤5运行程序-2\"><a class=\"markdownIt-Anchor\" href=\"#步骤5运行程序-2\">#</a> 步骤 5: 运行程序</h5>\n<p>不管密码 <code>root</code>  前后是否加空格，最终控制台打印的都是 true</p>\n<h5 id=\"步骤6优化测试\"><a class=\"markdownIt-Anchor\" href=\"#步骤6优化测试\">#</a> 步骤 6: 优化测试</h5>\n<p>为了能更好的看出 AOP 已经生效，我们可以修改 ResourcesImpl 类，在方法中将密码的长度进行打印</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Repository</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ResourcesDaoImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ResourcesDao</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">readResources</span><span class=\"params\">(String url, String password)</span> &#123;</span><br><span class=\"line\">        System.out.println(password.length());</span><br><span class=\"line\">        <span class=\"comment\">//模拟校验</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> password.equals(<span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再次运行成功，就可以根据最终打印的长度来看看，字符串的空格有没有被去除掉。</p>\n<p><strong>注意：</strong></p>\n<p><img data-src=\"java-SSM.assets/1630242491831.png\" alt=\"1630242491831\"></p>\n<h2 id=\"-7\"><a class=\"markdownIt-Anchor\" href=\"#-7\">#</a> </h2>\n<h2 id=\"aop总结\"><a class=\"markdownIt-Anchor\" href=\"#aop总结\">#</a> AOP 总结</h2>\n<h3 id=\"aop的核心概念\"><a class=\"markdownIt-Anchor\" href=\"#aop的核心概念\">#</a> AOP 的核心概念：</h3>\n<p>概念：AOP (Aspect Oriented Programming) 面向切面编程，一种编程范式</p>\n<p>作用：就是在不惊动原始代码的情况下为方法增加功能</p>\n<p>核心概念</p>\n<ul>\n<li>代理（proxy）:SpringAOP 的核心本质就是采用代理模式来实现的</li>\n<li>连接点 (JoinPoint)：在 springAOP 中，理解为任意方法的执行</li>\n<li>切入点 (Poincut)：匹配连接点的式子，也是具有共性功能的方法描述</li>\n<li>通知 (Advice)：若干个方法的共性功能，在切入点执行，最终体现为一个方法</li>\n<li>切面 (Aspect): 描述切入点和通知的对应关系</li>\n<li>目标对象 (Target)：被代理的原始对象成为目标对象</li>\n</ul>\n<h3 id=\"切入点表达式\"><a class=\"markdownIt-Anchor\" href=\"#切入点表达式\">#</a> 切入点表达式</h3>\n<ul>\n<li>切入点标准表达式格式：动作关键字 (访问修饰符 返回值类型 包名。类 / 接口名。方法名（参数）异常名)</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">execution(* com.itheima.service.*service.*(..))</span><br></pre></td></tr></table></figure>\n<p>切入点表达式描述通配符：</p>\n<ul>\n<li>作用：用于快速描述，范围描述</li>\n<li>*: 匹配任意的符号（常用）</li>\n<li>…：匹配多个连续的任意符号 (常用)</li>\n<li>+: 匹配子类类型</li>\n</ul>\n<p>切入点表达是书写技巧</p>\n<ol>\n<li>按照标准的规范开发</li>\n<li>查询操作的返回值建议使用 * 匹配</li>\n<li>减少适用… 的形式描述包</li>\n<li>对接口进行描述，使用表示模块名称，例如 UserService 的匹配描述为 * Service</li>\n<li>方法名书写保留动词，例如 get，使用<em>表示名词，例如 getById 匹配描述为 getBy</em></li>\n<li>参数根据实际情况灵活进行调整</li>\n</ol>\n<h3 id=\"五种通知类型\"><a class=\"markdownIt-Anchor\" href=\"#五种通知类型\">#</a> 五种通知类型</h3>\n<ul>\n<li>前置通知</li>\n<li>后置通知</li>\n<li>环绕通知 (重点)\n<ul>\n<li>环绕通知依赖形参 ProceedingJoinPoint 才能实现对原始方法的调用</li>\n<li>环绕通知可以隔离原始方法的调用执行</li>\n<li>环绕通知返回值设置为 Object 类型</li>\n<li>环绕通知中可以对原始方法调用过程中出现的异常进行处理</li>\n</ul>\n</li>\n<li>返回后通知</li>\n<li>抛出异常后通知</li>\n</ul>\n<h3 id=\"通知中获取参数\"><a class=\"markdownIt-Anchor\" href=\"#通知中获取参数\">#</a> 通知中获取参数</h3>\n<ul>\n<li>获取切入点方法的参数，所有的通知类型都可以获取参数</li>\n</ul>\n<p>JoinPoint: 适用于前置、后置、返回后、抛出异常后通知</p>\n<p>proceedingJoinPoint：适用于环绕通知</p>\n<ul>\n<li>获取切入点方法返回值，前置和抛出异常后通知是没有返回值，后置通知可有可无，所以不做研究\n<ul>\n<li>返回后通知</li>\n<li>环绕通知</li>\n</ul>\n</li>\n<li>获取切入点方法运行异常信息，前置和返回后通知是不会有，后置通知可有可无，所以不做研究\n<ul>\n<li>抛出异常后通知</li>\n<li>环绕通知</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"-8\"><a class=\"markdownIt-Anchor\" href=\"#-8\">#</a> </h2>\n<h2 id=\"aop事务管理\"><a class=\"markdownIt-Anchor\" href=\"#aop事务管理\">#</a> AOP 事务管理</h2>\n",
            "tags": []
        },
        {
            "id": "http://example.com/photos/",
            "url": "http://example.com/photos/",
            "title": "photos",
            "date_published": "2022-01-20T12:52:28.000Z",
            "content_html": "<h1 align=\"center\">谷阿玛尼的photos</h1>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-41-22.png\" style=\"zoom:33%;\" />\n<h2 align=\"center\">以下照片存储腾讯云cos中</h2>\n<p class=\"gallery\" data-height=\"250\" data-width=\"250\"><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-15-15.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-17-51.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-18-16.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-18-43.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-18-53.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-20-48.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-21-13.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-21-46.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-21-58.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-22-32.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-24-49.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-25-02.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-25-43.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-25-52.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-26-03.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-26-08.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-26-20.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-26-33.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-27-41.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-27-55.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-28-01.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-28-08.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-28-16.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-28-23.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-28-29.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-28-35.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-28-43.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-28-48.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-28-55.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-29-08.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-30-02.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-30-07.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-30-19.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-30-47.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-31-17.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-31-26.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-31-39.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-32-19.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-32-34.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-32-46.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-32-56.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-33-26.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-33-37.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-33-54.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-34-24.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-34-36.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-34-54.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-35-04.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-35-19.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-35-36.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-35-48.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-35-58.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-36-45.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-37-08.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-38-19.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-39-32.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-39-51.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-40-15.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-40-29.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-40-39.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-40-57.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-41-56.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-42-10.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-42-24.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-42-47.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-43-26.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-43-37.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-43-50.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-44-13.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-44-27.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-44-41.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-44-51.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-45-02.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-47-02.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-48-01.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-48-25.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-48-37.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-50-06.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-50-24.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-50-44.png\" alt=\"\"><br>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/Snipaste_2023-01-20_14-50-59.png\" alt=\"\"></p>\n",
            "tags": [
                "“个人所好”"
            ]
        },
        {
            "id": "http://example.com/VUE&Element/",
            "url": "http://example.com/VUE&Element/",
            "title": "VUE&Element",
            "date_published": "2022-01-20T03:52:14.000Z",
            "content_html": "<h2 id=\"vueelement\"><a class=\"markdownIt-Anchor\" href=\"#vueelement\">#</a> VUE&amp;Element</h2>\n<p><strong>今日目标：</strong></p>\n<blockquote>\n<ul>\n<li>能够使用 VUE 中常用指令和插值表达式</li>\n<li>能够使用 VUE 生命周期函数 mounted</li>\n<li>能够进行简单的 Element 页面修改</li>\n<li>能够完成查询所有功能</li>\n<li>能够完成添加功能</li>\n</ul>\n</blockquote>\n<h2 id=\"1vue\"><a class=\"markdownIt-Anchor\" href=\"#1vue\">#</a> 1，VUE</h2>\n<h3 id=\"11-概述\"><a class=\"markdownIt-Anchor\" href=\"#11-概述\">#</a> 1.1  概述</h3>\n<p>接下来我们学习一款前端的框架，就是 VUE。</p>\n<p><mark>Vue 是一套前端框架，免除原生 JavaScript 中的 DOM 操作，简化书写。</mark></p>\n<p>我们之前也学习过后端的框架  <code>Mybatis</code>  ， <code>Mybatis</code>  是用来简化  <code>jdbc</code>  代码编写的；而  <code>VUE</code>  是前端的框架，是用来简化  <code>JavaScript</code>  代码编写的。前一天我们做了一个综合性的案例，里面进行了大量的 DOM 操作，如下</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831112115508.png\" alt=\"image-20210831112115508\" style=\"zoom:70%;\" />\n<p>学习了  <code>VUE</code>  后，这部分代码我们就不需要再写了。那么  <code>VUE</code>  是如何简化 DOM 书写呢？</p>\n<p>== 基于 MVVM (Model-View-ViewModel) 思想，实现数据的双向绑定，将编程的关注点放在数据上。== 之前我们是将关注点放在了 DOM 操作上；而要了解  <code>MVVM</code>  思想，必须先聊聊  <code>MVC</code>  思想，如下图就是  <code>MVC</code>  思想图解</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831113940588.png\" alt=\"image-20210831113940588\" style=\"zoom:70%;\" />\n<p>C 就是咱们 js 代码，M 就是数据，而 V 是页面上展示的内容，如下图是我们之前写的代码</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831114227585.png\" alt=\"image-20210831114227585\" style=\"zoom:70%;\" />\n<p><code>MVC</code>  思想是没法进行双向绑定的。双向绑定是指当数据模型数据发生变化时，页面展示的会随之发生变化，而如果表单数据发生变化，绑定的模型数据也随之发生变化。接下来我们聊聊  <code>MVVM</code>  思想，如下图是三个组件图解</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831114805052.png\" alt=\"image-20210831114805052\" style=\"zoom:80%;\" />\n<p>图中的  <code>Model</code>  就是我们的数据， <code>View</code>  是视图，也就是页面标签，用户可以通过浏览器看到的内容； <code>Model</code>  和  <code>View</code>  是通过  <code>ViewModel</code>  对象进行双向绑定的，而  <code>ViewModel</code>  对象是  <code>Vue</code>  提供的。接下来让大家看一下双向绑定的效果，下图是提前准备的代码，输入框绑定了  <code>username</code>  模型数据，而在页面上也使用  <code>&#123;&#123;&#125;&#125;</code>  绑定了  <code>username</code>  模型数据</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831115645528.png\" alt=\"image-20210831115645528\" style=\"zoom:70%;\" />\n<p>通过浏览器打开该页面可以看到如下页面</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831115902537.png\" alt=\"image-20210831115902537\" style=\"zoom:80%;\" />\n<p>当我们在输入框中输入内容，而输入框后面随之实时的展示我们输入的内容，这就是双向绑定的效果。</p>\n<h3 id=\"12-快速入门\"><a class=\"markdownIt-Anchor\" href=\"#12-快速入门\">#</a> 1.2  快速入门</h3>\n<p>Vue 使用起来是比较简单的，总共分为如下三步：</p>\n<ol>\n<li>\n<p><strong>新建 HTML 页面，引入 Vue.js 文件</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>在 JS 代码区域，创建 Vue 核心对象，进行数据绑定</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">&quot;#app&quot;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">username</span>: <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>创建 Vue 对象时，需要传递一个 js 对象，而该对象中需要如下属性：</p>\n<ul>\n<li><code>el</code>  ： 用来指定哪儿些标签受 Vue 管理。 该属性取值  <code>#app</code>  中的  <code>app</code>  需要是受管理的标签的 id 属性值</li>\n<li><code>data</code>  ：用来定义数据模型</li>\n<li><code>methods</code>  ：用来定义函数。这个我们在后面就会用到</li>\n</ul>\n</li>\n<li>\n<p><strong>编写视图</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;username&quot;</span> &gt;</span></span><br><span class=\"line\">    &#123;&#123;username&#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>&#123;&#123;&#125;&#125;</code>  是 Vue 中定义的  <code>插值表达式</code>  ，在里面写数据模型，到时候会将该模型的数据值展示在这个位置。</p>\n</li>\n</ol>\n<p><strong>整体代码如下：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--插值表达式--&gt;</span></span><br><span class=\"line\">    &#123;&#123;username&#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1. 创建Vue核心对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;  <span class=\"comment\">// data() 是 ECMAScript 6 版本的新的写法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">username</span>:<span class=\"string\">&quot;&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">/*data: function () &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            return &#123;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">                username:&quot;&quot;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">            &#125;</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">        &#125;*/</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"13-vue-指令\"><a class=\"markdownIt-Anchor\" href=\"#13-vue-指令\">#</a> 1.3  Vue 指令</h3>\n<p>** 指令：**HTML 标签上带有 v- 前缀的特殊属性，不同指令具有不同含义。例如：v-if，v-for…</p>\n<p>常用的指令有：</p>\n<table>\n<thead>\n<tr>\n<th><strong>指令</strong></th>\n<th><strong>作用</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>v-bind</td>\n<td>为 HTML 标签绑定属性值，如设置  href , css 样式等</td>\n</tr>\n<tr>\n<td>v-model</td>\n<td>在表单元素上创建双向数据绑定</td>\n</tr>\n<tr>\n<td>v-on</td>\n<td>为 HTML 标签绑定事件</td>\n</tr>\n<tr>\n<td>v-if</td>\n<td>条件性的渲染某元素，判定为 true 时渲染，否则不渲染</td>\n</tr>\n<tr>\n<td>v-else</td>\n<td></td>\n</tr>\n<tr>\n<td>v-else-if</td>\n<td></td>\n</tr>\n<tr>\n<td>v-show</td>\n<td>根据条件展示某元素，区别在于切换的是 display 属性的值</td>\n</tr>\n<tr>\n<td>v-for</td>\n<td>列表渲染，遍历容器的元素或者对象的属性</td>\n</tr>\n</tbody>\n</table>\n<p>接下来我们挨个学习这些指令</p>\n<h4 id=\"131-v-bind-v-model-指令\"><a class=\"markdownIt-Anchor\" href=\"#131-v-bind-v-model-指令\">#</a> 1.3.1  v-bind &amp; v-model 指令</h4>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831150101736.png\" alt=\"image-20210831150101736\" style=\"zoom:70%;\" />\n<ul>\n<li>\n<p><strong>v-bind</strong></p>\n<p>该指令可以给标签原有属性绑定模型数据。这样模型数据发生变化，标签属性值也随之发生变化</p>\n<p>例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span>百度一下<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面的  <code>v-bind:&quot;</code>   可以简化写成  <code>:</code>   ，如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">\tv-bind 可以省略</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span>百度一下<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>v-model</strong></p>\n<p>该指令可以给表单项标签绑定模型数据。这样就能实现双向绑定效果。例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>代码演示：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span>点击一下<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">:href</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span>点击一下<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;url&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1. 创建Vue核心对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">username</span>:<span class=\"string\">&quot;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">url</span>:<span class=\"string\">&quot;https://www.baidu.com&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>通过浏览器打开上面页面，并且使用检查查看超链接的路径，该路径会根据输入框输入的路径变化而变化，这是因为超链接和输入框绑定的是同一个模型数据</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831150945931.png\" alt=\"image-20210831150945931\" style=\"zoom:80%;\" />\n<h4 id=\"132-v-on-指令\"><a class=\"markdownIt-Anchor\" href=\"#132-v-on-指令\">#</a> 1.3.2  v-on 指令</h4>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831151231955.png\" alt=\"image-20210831151231955\" style=\"zoom:70%;\" />\n<p>我们在页面定义一个按钮，并给该按钮使用  <code>v-on</code>  指令绑定单击事件，html 代码如下</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;一个按钮&quot;</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;show()&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>而使用  <code>v-on</code>  时还可以使用简化的写法，将  <code>v-on:</code>  替换成  <code>@</code> ，html 代码如下</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;一个按钮&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;show()&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面代码绑定的  <code>show()</code>  需要在 Vue 对象中的  <code>methods</code>  属性中定义出来</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">&quot;#app&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">        <span class=\"title function_\">show</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;我被点了&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><mark>注意： <code>v-on:</code>  后面的事件名称是之前原生事件属性名去掉 on。</mark></p>\n<p>例如：</p>\n<ul>\n<li>单击事件 ： 事件属性名是 onclick，而在 vue 中使用是  <code>v-on:click</code></li>\n<li>失去焦点事件：事件属性名是 onblur，而在 vue 中使用时  <code>v-on:blur</code></li>\n</ul>\n</blockquote>\n<p><strong>整体页面代码如下：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;一个按钮&quot;</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">&quot;show()&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;一个按钮&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;show()&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1. 创建Vue核心对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">username</span>:<span class=\"string\">&quot;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">methods</span>:&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">show</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;我被点了...&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"133-条件判断指令\"><a class=\"markdownIt-Anchor\" href=\"#133-条件判断指令\">#</a> 1.3.3  条件判断指令</h4>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831151904081.png\" alt=\"image-20210831151904081\" style=\"zoom:70%;\" />\n<p>接下来通过代码演示一下。在 Vue 中定义一个  <code>count</code>  的数据模型，如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 创建Vue核心对象</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">count</span>:<span class=\"number\">3</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>现在要实现，当  <code>count</code>  模型的数据是 3 时，在页面上展示  <code>div1</code>  内容；当  <code>count</code>  模型的数据是 4 时，在页面上展示  <code>div2</code>  内容； <code>count</code>  模型数据是其他值时，在页面上展示  <code>div3</code> 。这里为了动态改变模型数据  <code>count</code>  的值，再定义一个输入框绑定  <code>count</code>  模型数据。html 代码如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;count == 3&quot;</span>&gt;</span>div1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;count == 4&quot;</span>&gt;</span>div2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span>&gt;</span>div3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;count&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>整体页面代码如下：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;count == 3&quot;</span>&gt;</span>div1<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">&quot;count == 4&quot;</span>&gt;</span>div2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span>&gt;</span>div3<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;count&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1. 创建Vue核心对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">count</span>:<span class=\"number\">3</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>通过浏览器打开页面并在输入框输入不同的值，效果如下</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831154300325.png\" alt=\"image-20210831154300325\" style=\"zoom:80%;\" />\n<p>然后我们在看看  <code>v-show</code>  指令的效果，如果模型数据  <code>count </code>  的值是 3 时，展示  <code>div v-show</code>  内容，否则不展示，html 页面代码如下</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-show</span>=<span class=\"string\">&quot;count == 3&quot;</span>&gt;</span>div v-show<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;count&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>浏览器打开效果如下：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831154547780.png\" alt=\"image-20210831154547780\" style=\"zoom:80%;\" />\n<p>通过上面的演示，发现  <code>v-show</code>  和  <code>v-if</code>  效果一样，那它们到底有什么区别呢？我们根据浏览器的检查功能查看源代码</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831154759672.png\" alt=\"image-20210831154759672\" style=\"zoom:80%;\" />\n<p>通过上图可以看出  <code>v-show</code>  不展示的原理是给对应的标签添加  <code>display</code>  css 属性，并将该属性值设置为  <code>none</code>  ，这样就达到了隐藏的效果。而  <code>v-if</code>  指令是条件不满足时根本就不会渲染。</p>\n<h4 id=\"134-v-for-指令\"><a class=\"markdownIt-Anchor\" href=\"#134-v-for-指令\">#</a> 1.3.4  v-for 指令</h4>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831155204829.png\" alt=\"image-20210831155204829\" style=\"zoom:80%;\" />\n<p>这个指令看到名字就知道是用来遍历的，该指令使用的格式如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">标签</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;变量名 in 集合模型数据&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123;变量名&#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">标签</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><mark>注意：需要循环那个标签， <code>v-for</code>  指令就写在那个标签上。</mark></p>\n</blockquote>\n<p>如果在页面需要使用到集合模型数据的索引，就需要使用如下格式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">标签</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(变量名,索引变量) in 集合模型数据&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--索引变量是从0开始，所以要表示序号的话，需要手动的加1--&gt;</span></span><br><span class=\"line\">   &#123;&#123;索引变量 + 1&#125;&#125; &#123;&#123;变量名&#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">标签</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>代码演示：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;addr in addrs&quot;</span>&gt;</span></span><br><span class=\"line\">        &#123;&#123;addr&#125;&#125; <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(addr,i) in addrs&quot;</span>&gt;</span></span><br><span class=\"line\">        &#123;&#123;i+1&#125;&#125;--&#123;&#123;addr&#125;&#125; <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//1. 创建Vue核心对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">addrs</span>:[<span class=\"string\">&quot;北京&quot;</span>,<span class=\"string\">&quot;上海&quot;</span>,<span class=\"string\">&quot;西安&quot;</span>]</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>通过浏览器打开效果如下</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831155837801.png\" alt=\"image-20210831155837801\" style=\"zoom:80%;\" />\n<h3 id=\"14-生命周期\"><a class=\"markdownIt-Anchor\" href=\"#14-生命周期\">#</a> 1.4  生命周期</h3>\n<p>生命周期的八个阶段：每触发一个生命周期事件，会自动执行一个生命周期方法，这些生命周期方法也被称为钩子方法。</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831160239294.png\" alt=\"image-20210831160239294\" style=\"zoom:80%;\" />\n<p>下图是 Vue 官网提供的从创建 Vue 到效果 Vue 对象的整个过程及各个阶段对应的钩子函数</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831160335496.png\" alt=\"image-20210831160335496\" style=\"zoom:80%;\" />\n<p>看到上面的图，大家无需过多的关注这张图。这些钩子方法我们只关注  <code>mounted</code>  就行了。</p>\n<p><code>mounted</code> ：挂载完成，Vue 初始化成功，HTML 页面渲染成功。而以后我们会在该方法中<mark>发送异步请求，加载数据。</mark></p>\n<h3 id=\"15-案例\"><a class=\"markdownIt-Anchor\" href=\"#15-案例\">#</a> 1.5  案例</h3>\n<h4 id=\"151-需求\"><a class=\"markdownIt-Anchor\" href=\"#151-需求\">#</a> 1.5.1  需求</h4>\n<p>使用 Vue 简化我们在前一天 ajax 学完后做的品牌列表数据查询和添加功能</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831161040800.png\" alt=\"image-20210831161040800\" style=\"zoom:80%;\" />\n<p>此案例只是使用 Vue 对前端代码进行优化，后端代码无需修改。</p>\n<h4 id=\"152-查询所有功能\"><a class=\"markdownIt-Anchor\" href=\"#152-查询所有功能\">#</a> 1.5.2  查询所有功能</h4>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831161346678.png\" alt=\"image-20210831161346678\" style=\"zoom:80%;\" />\n<ol>\n<li>\n<p><strong>在 brand.html 页面引入 vue 的 js 文件</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>创建 Vue 对象</strong></p>\n<ul>\n<li>在 Vue 对象中定义模型数据</li>\n<li>在钩子函数中发送异步请求，并将响应的数据赋值给数据模型</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">&quot;#app&quot;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">            <span class=\"attr\">brands</span>:[]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">mounted</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 页面加载完成后，发送异步请求，查询数据</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">            <span class=\"attr\">method</span>:<span class=\"string\">&quot;get&quot;</span>,</span><br><span class=\"line\">            <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-demo/selectAllServlet&quot;</span></span><br><span class=\"line\">        &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">            _this.<span class=\"property\">brands</span> = resp.<span class=\"property\">data</span>;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>修改视图</strong></p>\n<ul>\n<li>\n<p>定义  <code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>  ，指定该  <code>div</code>  标签受 Vue 管理</p>\n</li>\n<li>\n<p>将  <code>body</code>  标签中所有的内容拷贝作为上面  <code>div</code>  标签中</p>\n</li>\n<li>\n<p>删除表格的多余数据行，只留下一个</p>\n</li>\n<li>\n<p>在表格中的数据行上使用  <code>v-for</code>  指令遍历</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(brand,i) in brands&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;i + 1&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;brand.brandName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;brand.companyName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;brand.ordered&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;brand.description&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;brand.statusStr&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>修改<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<p><strong>整体页面代码如下：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;addBrand.html&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;新增&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;brandTable&quot;</span> <span class=\"attr\">border</span>=<span class=\"string\">&quot;1&quot;</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;100%&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>序号<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>品牌名称<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>企业名称<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>排序<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>品牌介绍<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>状态<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>操作<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            使用v-for遍历tr</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">v-for</span>=<span class=\"string\">&quot;(brand,i) in brands&quot;</span> <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;i + 1&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;brand.brandName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;brand.companyName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;brand.ordered&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;brand.description&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&#123;&#123;brand.statusStr&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>修改<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;#&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/axios-0.18.0.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>: <span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">brands</span>:[]</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">mounted</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 页面加载完成后，发送异步请求，查询数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">axios</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">method</span>:<span class=\"string\">&quot;get&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-demo/selectAllServlet&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                _this.<span class=\"property\">brands</span> = resp.<span class=\"property\">data</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"153-添加功能\"><a class=\"markdownIt-Anchor\" href=\"#153-添加功能\">#</a> 1.5.3  添加功能</h4>\n<p>页面操作效果如下：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831163001830.png\" alt=\"image-20210831163001830\" style=\"zoom:80%;\" />\n<p>整体流程如下</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831163035298.png\" alt=\"image-20210831163035298\" style=\"zoom:70%;\" />\n<blockquote>\n<p><mark>注意：前端代码的关键点在于使用  <code>v-model</code>  指令给标签项绑定模型数据，利用双向绑定特性，在发送异步请求时提交数据。</mark></p>\n</blockquote>\n<ol>\n<li>\n<p><strong>在 addBrand.html 页面引入 vue 的 js 文件</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>创建 Vue 对象</strong></p>\n<ul>\n<li>在 Vue 对象中定义模型数据  <code>brand</code></li>\n<li>定义一个  <code>submitForm()</code>  函数，用于给  <code>提交</code>  按钮提供绑定的函数</li>\n<li>在  <code>submitForm()</code>  函数中发送 ajax 请求，并将模型数据  <code>brand</code>  作为参数进行传递</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>: <span class=\"string\">&quot;#app&quot;</span>,</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">brand</span>:&#123;&#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">        <span class=\"title function_\">submitForm</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 发送ajax请求，添加</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">            <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">                <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-demo/addServlet&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">data</span>:_this.<span class=\"property\">brand</span></span><br><span class=\"line\">            &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 判断响应数据是否为 success</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(resp.<span class=\"property\">data</span> == <span class=\"string\">&quot;success&quot;</span>)&#123;</span><br><span class=\"line\">                    location.<span class=\"property\">href</span> = <span class=\"string\">&quot;http://localhost:8080/brand-demo/brand.html&quot;</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>修改视图</strong></p>\n<ul>\n<li>\n<p>定义  <code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>  ，指定该  <code>div</code>  标签受 Vue 管理</p>\n</li>\n<li>\n<p>将  <code>body</code>  标签中所有的内容拷贝作为上面  <code>div</code>  标签中</p>\n</li>\n<li>\n<p>给每一个表单项标签绑定模型数据。最后这些数据要被封装到  <code>brand</code>  对象中</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>添加品牌<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">        品牌名称：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;brandName&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.brandName&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;brandName&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        企业名称：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;companyName&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.companyName&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;companyName&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        排序：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ordered&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.ordered&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ordered&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        描述信息：<span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">cols</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;description&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.description&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;description&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        状态：</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;status&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.status&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span>禁用</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;status&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.status&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span>启用<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;submitForm&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<p><strong>整体页面代码如下：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>添加品牌<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>添加品牌<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">        品牌名称：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;brandName&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.brandName&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;brandName&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        企业名称：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;companyName&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.companyName&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;companyName&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        排序：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;ordered&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.ordered&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ordered&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        描述信息：<span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;5&quot;</span> <span class=\"attr\">cols</span>=<span class=\"string\">&quot;20&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;description&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.description&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;description&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        状态：</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;status&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.status&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span>禁用</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;status&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.status&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span>启用<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;submitForm&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;提交&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/axios-0.18.0.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>: <span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">brand</span>:&#123;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">methods</span>:&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">submitForm</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 发送ajax请求，添加</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"title function_\">axios</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-demo/addServlet&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">data</span>:_this.<span class=\"property\">brand</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"comment\">// 判断响应数据是否为 success</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">if</span>(resp.<span class=\"property\">data</span> == <span class=\"string\">&quot;success&quot;</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                        location.<span class=\"property\">href</span> = <span class=\"string\">&quot;http://localhost:8080/brand-demo/brand.html&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>通过上面的优化，前端代码确实简化了不少。但是页面依旧是不怎么好看，那么接下来我们学习 Element，它可以美化页面。</p>\n<h2 id=\"2element\"><a class=\"markdownIt-Anchor\" href=\"#2element\">#</a> 2，Element</h2>\n<p>Element：是饿了么公司前端开发团队提供的一套基于 Vue 的网站组件库，用于快速构建网页。</p>\n<p>Element 提供了很多组件（组成网页的部件）供我们使用。例如 超链接、按钮、图片、表格等等～</p>\n<p>如下图左边的是我们编写页面看到的按钮，上图右边的是 Element 提供的页面效果，效果一目了然。</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831170943892.png\" alt=\"image-20210831170943892\" style=\"zoom:80%;\" />\n<p>我们学习 Element 其实就是学习怎么从官网拷贝组件到我们自己的页面并进行修改，官网网址是</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://element.eleme.cn/#/zh-CN</span><br></pre></td></tr></table></figure>\n<p>进入官网能看到如下页面</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831171456559.png\" alt=\"image-20210831171456559\"></p>\n<p>接下来直接点击  <code>组件</code>  ，页面如下</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831171552844.png\" alt=\"image-20210831171552844\"></p>\n<h3 id=\"21-快速入门\"><a class=\"markdownIt-Anchor\" href=\"#21-快速入门\">#</a> 2.1  快速入门</h3>\n<ol>\n<li>\n<p>将资源  <code>04-资料\\02-element</code>  下的  <code>element-ui</code>  文件夹直接拷贝到项目的  <code>webapp</code>  下。目录结构如下</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831171856768.png\" alt=\"image-20210831171856768\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>创建页面，并在页面引入 Element 的 css、js 文件 和 Vue.js</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;element-ui/lib/index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;element-ui/lib/theme-chalk/index.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>. 创建 Vue 核心对象</p>\n<p>Element 是基于 Vue 的，所以使用 Element 时必须要创建 Vue 对象</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>官网复制 Element 组件代码</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831180730287.png\" alt=\"image-20210831180730287\" style=\"zoom:70%;\" />\n<p>在左菜单栏找到  <code>Button 按钮</code>  ，然后找到自己喜欢的按钮样式，点击  <code>显示代码</code>  ，在下面就会展示出对应的代码，将这些代码拷贝到我们自己的页面即可。</p>\n</li>\n</ol>\n<p><strong>整体页面代码如下：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">     \t<span class=\"tag\">&lt;<span class=\"name\">el-button</span>&gt;</span>默认按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span>&gt;</span>主要按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;success&quot;</span>&gt;</span>成功按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span>信息按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;warning&quot;</span>&gt;</span>警告按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">plain</span>&gt;</span>朴素按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">plain</span>&gt;</span>主要按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;success&quot;</span> <span class=\"attr\">plain</span>&gt;</span>成功按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;info&quot;</span> <span class=\"attr\">plain</span>&gt;</span>信息按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;warning&quot;</span> <span class=\"attr\">plain</span>&gt;</span>警告按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span> <span class=\"attr\">plain</span>&gt;</span>危险按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">round</span>&gt;</span>圆角按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">round</span>&gt;</span>主要按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;success&quot;</span> <span class=\"attr\">round</span>&gt;</span>成功按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;info&quot;</span> <span class=\"attr\">round</span>&gt;</span>信息按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;warning&quot;</span> <span class=\"attr\">round</span>&gt;</span>警告按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span> <span class=\"attr\">round</span>&gt;</span>危险按钮<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-search&quot;</span> <span class=\"attr\">circle</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-edit&quot;</span> <span class=\"attr\">circle</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;success&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-check&quot;</span> <span class=\"attr\">circle</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;info&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-message&quot;</span> <span class=\"attr\">circle</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;warning&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-star-off&quot;</span> <span class=\"attr\">circle</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span> <span class=\"attr\">icon</span>=<span class=\"string\">&quot;el-icon-delete&quot;</span> <span class=\"attr\">circle</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;element-ui/lib/index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;element-ui/lib/theme-chalk/index.css&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"22-element-布局\"><a class=\"markdownIt-Anchor\" href=\"#22-element-布局\">#</a> 2.2  Element 布局</h3>\n<p>Element 提供了两种布局方式，分别是：</p>\n<ul>\n<li>Layout 布局</li>\n<li>Container 布局容器</li>\n</ul>\n<h4 id=\"221-layout-局部\"><a class=\"markdownIt-Anchor\" href=\"#221-layout-局部\">#</a> 2.2.1  Layout 局部</h4>\n<p>通过基础的 24 分栏，迅速简便地创建布局。也就是默认将一行分为 24 栏，根据页面要求给每一列设置所占的栏数。</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831182349672.png\" alt=\"image-20210831182349672\" style=\"zoom:70%;\" />\n<p>在左菜单栏找到  <code>Layout 布局</code>  ，然后找到自己喜欢的按钮样式，点击  <code>显示代码</code>  ，在下面就会展示出对应的代码，显示出的代码中有样式，有 html 标签。将样式拷贝我们自己页面的  <code>head</code>  标签内，将 html 标签拷贝到   <code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>  标签内。</p>\n<p><strong>整体页面代码如下：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.el-row</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.el-col</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.bg-purple-dark</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"number\">#99a9bf</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.bg-purple</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"number\">#d3dce6</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.bg-purple-light</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"number\">#e5e9f2</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.grid-content</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border-radius</span>: <span class=\"number\">4px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">min-height</span>: <span class=\"number\">36px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.row-bg</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#f9fafc</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;24&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-dark&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;12&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;12&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-light&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;8&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;8&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-light&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;8&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;6&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;6&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-light&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;6&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;6&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-light&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-light&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-light&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;4&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-light&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;element-ui/lib/index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;element-ui/lib/theme-chalk/index.css&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>现在需要添加一行，要求该行显示 8 个格子，通过计算每个格子占 3 栏，具体的 html 代码如下</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">添加一行，8个格子  24/8 = 3</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-light&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-light&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-light&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-col</span> <span class=\"attr\">:span</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;grid-content bg-purple-light&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-col</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"222-container-布局容器\"><a class=\"markdownIt-Anchor\" href=\"#222-container-布局容器\">#</a> 2.2.2  Container 布局容器</h4>\n<p>用于布局的容器组件，方便快速搭建页面的基本结构。如下图就是布局容器效果。</p>\n<p>如下图是官网提供的 Container 布局容器实例：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831183433892.png\" alt=\"image-20210831183433892\" style=\"zoom:70%;\" />\n<p>该效果代码中包含了样式、页面标签、模型数据。将里面的样式  <code>&lt;style&gt;</code>  拷贝到我们自己页面的  <code>head</code>  标签中；将 html 标签拷贝到  <code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>  标签中，再将数据模型拷贝到  <code>vue</code>  对象的  <code>data()</code>  中。</p>\n<p><strong>整体页面代码如下：</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.el-header</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background-color</span>: <span class=\"number\">#B3C0D1</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">line-height</span>: <span class=\"number\">60px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.el-aside</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-container</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;height: 500px; border: 1px solid #eee&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-aside</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;200px&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;background-color: rgb(238, 241, 246)&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-menu</span> <span class=\"attr\">:default-openeds</span>=<span class=\"string\">&quot;[&#x27;1&#x27;, &#x27;3&#x27;]&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-submenu</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-icon-message&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>导航一<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-menu-item-group</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span>分组一<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-menu-item</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;1-1&quot;</span>&gt;</span>选项1<span class=\"tag\">&lt;/<span class=\"name\">el-menu-item</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-menu-item</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;1-2&quot;</span>&gt;</span>选项2<span class=\"tag\">&lt;/<span class=\"name\">el-menu-item</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">el-menu-item-group</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-menu-item-group</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;分组2&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-menu-item</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;1-3&quot;</span>&gt;</span>选项3<span class=\"tag\">&lt;/<span class=\"name\">el-menu-item</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">el-menu-item-group</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-submenu</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;1-4&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span>选项4<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-menu-item</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;1-4-1&quot;</span>&gt;</span>选项4-1<span class=\"tag\">&lt;/<span class=\"name\">el-menu-item</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">el-submenu</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">el-submenu</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-submenu</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;2&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-icon-menu&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>导航二<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-submenu</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;2-1&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span>选项1<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-menu-item</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;2-1-1&quot;</span>&gt;</span>选项1-1<span class=\"tag\">&lt;/<span class=\"name\">el-menu-item</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">el-submenu</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">el-submenu</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-submenu</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;3&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-icon-setting&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span>导航三<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-menu-item-group</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span>分组一<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-menu-item</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;3-1&quot;</span>&gt;</span>选项1<span class=\"tag\">&lt;/<span class=\"name\">el-menu-item</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-menu-item</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;3-2&quot;</span>&gt;</span>选项2<span class=\"tag\">&lt;/<span class=\"name\">el-menu-item</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">el-menu-item-group</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-menu-item-group</span> <span class=\"attr\">title</span>=<span class=\"string\">&quot;分组2&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-menu-item</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;3-3&quot;</span>&gt;</span>选项3<span class=\"tag\">&lt;/<span class=\"name\">el-menu-item</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">el-menu-item-group</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-submenu</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;3-4&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span>选项4<span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-menu-item</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;3-4-1&quot;</span>&gt;</span>选项4-1<span class=\"tag\">&lt;/<span class=\"name\">el-menu-item</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">el-submenu</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">el-submenu</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-menu</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-aside</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-container</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-header</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;text-align: right; font-size: 12px&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-dropdown</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;el-icon-setting&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;margin-right: 15px&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-dropdown-menu</span> <span class=\"attr\">slot</span>=<span class=\"string\">&quot;dropdown&quot;</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-dropdown-item</span>&gt;</span>查看<span class=\"tag\">&lt;/<span class=\"name\">el-dropdown-item</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-dropdown-item</span>&gt;</span>新增<span class=\"tag\">&lt;/<span class=\"name\">el-dropdown-item</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">el-dropdown-item</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-dropdown-item</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">el-dropdown-menu</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">el-dropdown</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>王小虎<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-header</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-main</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-table</span> <span class=\"attr\">:data</span>=<span class=\"string\">&quot;tableData&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;date&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;日期&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;140&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;name&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;姓名&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;120&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span> <span class=\"attr\">prop</span>=<span class=\"string\">&quot;address&quot;</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;地址&quot;</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-main</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-container</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-container</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;element-ui/lib/index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;element-ui/lib/theme-chalk/index.css&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">const</span> item = &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">date</span>: <span class=\"string\">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">name</span>: <span class=\"string\">&#x27;王小虎&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">address</span>: <span class=\"string\">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">tableData</span>: <span class=\"title class_\">Array</span>(<span class=\"number\">20</span>).<span class=\"title function_\">fill</span>(item)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"23-案例\"><a class=\"markdownIt-Anchor\" href=\"#23-案例\">#</a> 2.3  案例</h3>\n<p>其他的组件我们通过完成一个页面来学习。</p>\n<p>我们要完成如下页面效果</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831185223141.png\" alt=\"image-20210831185223141\" style=\"zoom:80%;\" />\n<p>要完成该页面，我们需要先对这个页面进行分析，看页面由哪儿几部分组成，然后到官网进行拷贝并修改。页面总共有如下组成部分</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831185505106.png\" alt=\"image-20210831185505106\"></p>\n<p>还有一个是当我们点击  <code>新增</code>  按钮，会在页面正中间弹出一个对话框，如下</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831185612905.png\" alt=\"image-20210831185612905\" style=\"zoom:60%;\" />\n<h4 id=\"231-准备基本页面\"><a class=\"markdownIt-Anchor\" href=\"#231-准备基本页面\">#</a> 2.3.1  准备基本页面</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;element-ui/lib/index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;element-ui/lib/theme-chalk/index.css&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>: <span class=\"string\">&quot;#app&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"232-完成表格展示\"><a class=\"markdownIt-Anchor\" href=\"#232-完成表格展示\">#</a> 2.3.2  完成表格展示</h4>\n<p>使用 Element 整体的思路就是 <mark>拷贝 + 修改</mark>。</p>\n<h5 id=\"2321-拷贝\"><a class=\"markdownIt-Anchor\" href=\"#2321-拷贝\">#</a> 2.3.2.1  拷贝</h5>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831185937618.png\" alt=\"image-20210831185937618\"></p>\n<p>在左菜单栏找到  <code>Table 表格</code> 并点击，右边主体就会定位到表格这一块，找到我们需要的表格效果（如上图），点击  <code>显示代码</code>  就可以看到这个表格的代码了。</p>\n<p>将 html 标签拷贝到  <code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>  中，如下：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831190328825.png\" alt=\"image-20210831190328825\" style=\"zoom:80%;\" />\n<p>将 css 样式拷贝到我们页面的  <code>head</code>  标签中，如下</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831190419248.png\" alt=\"image-20210831190419248\" style=\"zoom:80%;\" />\n<p>将方法和模型数据拷贝到 Vue 对象指定的位置</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831190534720.png\" alt=\"image-20210831190534720\" style=\"zoom:80%;\" />\n<p>拷贝完成后通过浏览器打开可以看到表格的效果</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831191234876.png\" alt=\"image-20210831191234876\"></p>\n<p>表格效果出来了，但是显示的表头和数据并不是我们想要的，所以接下来就需要对页面代码进行修改了。</p>\n<h5 id=\"2322-修改\"><a class=\"markdownIt-Anchor\" href=\"#2322-修改\">#</a> 2.3.2.2  修改</h5>\n<ol>\n<li>\n<p><strong>修改表头和数据</strong></p>\n<p>下面是对表格代码进行分析的图解。根据下图说明修改自己的列数和列名</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831192032118.png\" alt=\"image-20210831192032118\" style=\"zoom:70%;\" />\n<p>修改完页面后，还需要对绑定的模型数据进行修改，下图是对模型数据进行分析的图解</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831192429806.png\" alt=\"image-20210831192429806\" style=\"zoom:70%;\" />\n</li>\n<li>\n<p><strong>给表格添加操作列</strong></p>\n<p>从之前的表格拷贝一列出来并对其进行修改。按钮是从官网的  <code>Button 按钮</code>  组件中拷贝并修改的</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831192809304.png\" alt=\"image-20210831192809304\" style=\"zoom:70%;\" />\n</li>\n<li>\n<p><strong>给表格添加复选框列和标号列</strong></p>\n<p>给表格添加复选框和标号列，效果如下</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831193216143.png\" alt=\"image-20210831193216143\"></p>\n<p>此效果也是从 Element 官网进行拷贝，先找到对应的表格效果，然后将其对应代码拷贝到我们的代码中，如下是复选框列官网效果图和代码</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831193601788.png\" alt=\"image-20210831193601788\"></p>\n<p>这里需要注意在  <code>&lt;el-table&gt;</code>  标签上有一个事件  <code>@selection-change=&quot;handleSelectionChange&quot;</code>  ，这里绑定的函数也需要从官网拷贝到我们自己的页面代码中，函数代码如下：</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831194013986.png\" alt=\"image-20210831194013986\"></p>\n<p>从该函数中又发现还需要一个模型数据  <code>multipleSelection </code>  ，所以还需要定义出该模型数据</p>\n</li>\n</ol>\n<p>标号列也用同样的方式进行拷贝并修改。</p>\n<h4 id=\"233-完成搜索表单展示\"><a class=\"markdownIt-Anchor\" href=\"#233-完成搜索表单展示\">#</a> 2.3.3  完成搜索表单展示</h4>\n<p>在 Element 官网找到横排的表单效果，然后拷贝代码并进行修改</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831194300357.png\" alt=\"image-20210831194300357\"></p>\n<p>点击上面的  <code>显示代码</code>  后，就会展示出对应的代码，下面是对这部分代码进行分析的图解</p>\n<p><img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831194835721.png\" alt=\"image-20210831194835721\"></p>\n<p>然后根据我们要的效果修改代码。</p>\n<h4 id=\"234-完成批量删除和新增按钮展示\"><a class=\"markdownIt-Anchor\" href=\"#234-完成批量删除和新增按钮展示\">#</a> 2.3.4  完成批量删除和新增按钮展示</h4>\n<p>从 Element 官网找具有着色效果的按钮，并将代码拷贝到我们自己的页面上</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831214602954.png\" alt=\"image-20210831214602954\" style=\"zoom:70%;\" />\n<h4 id=\"235-完成对话框展示\"><a class=\"markdownIt-Anchor\" href=\"#235-完成对话框展示\">#</a> 2.3.5  完成对话框展示</h4>\n<p>在 Element 官网找对话框，如下：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831214818516.png\" alt=\"image-20210831214818516\" style=\"zoom:70%;\" />\n<p>下面对官网提供的代码进行分析</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831215609729.png\" alt=\"image-20210831215609729\" style=\"zoom:80%;\" />\n<p>上图分析出来的模型数据需要在 Vue 对象中进行定义。</p>\n<h4 id=\"236-完成分页条展示\"><a class=\"markdownIt-Anchor\" href=\"#236-完成分页条展示\">#</a> 2.3.6  完成分页条展示</h4>\n<p>在 Element 官网找到  <code>Pagination 分页</code>  ，在页面主体部分找到我们需要的效果，如下</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831220034775.png\" alt=\"image-20210831220034775\" style=\"zoom:70%;\" />\n<p>点击  <code>显示代码</code>  ，找到  <code>完整功能</code>  对应的代码，接下来对该代码进行分析</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831220446390.png\" alt=\"image-20210831220446390\" style=\"zoom:80%;\" />\n<p>上面代码属性说明：</p>\n<ul>\n<li>\n<p><code>page-size</code>  ：每页显示的条目数</p>\n</li>\n<li>\n<p><code>page-sizes</code>  ： 每页显示个数选择器的选项设置。</p>\n<p><code>:page-sizes=&quot;[100,200,300,400]&quot;</code>   对应的页面效果如下：</p>\n<img data-src=\"https://images-1316609369.cos.ap-guangzhou.myqcloud.com/image-20210831220820557.png\" alt=\"image-20210831220820557\" style=\"zoom:70%;\" />\n</li>\n<li>\n<p><code>currentPage</code>  ：当前页码。我们点击那个页码，此属性值就是几。</p>\n</li>\n<li>\n<p><code>total</code>  ：总记录数。用来设置总的数据条目数，该属性设置后， Element 会自动计算出需分多少页并给我们展示对应的页码。</p>\n</li>\n</ul>\n<p>事件说明：</p>\n<ul>\n<li><code>size-change</code>  ：pageSize 改变时会触发。也就是当我们改变了每页显示的条目数后，该事件会触发。</li>\n<li><code>current-change</code>  ：currentPage 改变时会触发。也就是当我们点击了其他的页码后，该事件会触发。</li>\n</ul>\n<h4 id=\"237-完整页面代码\"><a class=\"markdownIt-Anchor\" href=\"#237-完整页面代码\">#</a> 2.3.7  完整页面代码</h4>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.el-table</span> <span class=\"selector-class\">.warning-row</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: oldlace;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-class\">.el-table</span> <span class=\"selector-class\">.success-row</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">background</span>: <span class=\"number\">#f0f9eb</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--搜索表单--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:inline</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;brand&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;demo-form-inline&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;当前状态&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-select</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.status&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;当前状态&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-option</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;启用&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-option</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;禁用&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-option</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-select</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;企业名称&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.companyName&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;企业名称&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;品牌名称&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.brandName&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;品牌名称&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;onSubmit&quot;</span>&gt;</span>查询<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--按钮--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span> <span class=\"attr\">plain</span>&gt;</span>批量删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> <span class=\"attr\">plain</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;dialogVisible = true&quot;</span>&gt;</span>新增<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">&lt;!--添加数据对话框表单--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-dialog</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">title</span>=<span class=\"string\">&quot;编辑品牌&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:visible.sync</span>=<span class=\"string\">&quot;dialogVisible&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">width</span>=<span class=\"string\">&quot;30%&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;form&quot;</span> <span class=\"attr\">:model</span>=<span class=\"string\">&quot;brand&quot;</span> <span class=\"attr\">label-width</span>=<span class=\"string\">&quot;80px&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;品牌名称&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.brandName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;企业名称&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.companyName&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;排序&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.ordered&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;备注&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;textarea&quot;</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.description&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">&quot;状态&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-switch</span> <span class=\"attr\">v-model</span>=<span class=\"string\">&quot;brand.status&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                           <span class=\"attr\">active-value</span>=<span class=\"string\">&quot;1&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                           <span class=\"attr\">inactive-value</span>=<span class=\"string\">&quot;0&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-switch</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;addBrand&quot;</span>&gt;</span>提交<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;dialogVisible = false&quot;</span>&gt;</span>取消<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-dialog</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--表格--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-table</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">:data</span>=<span class=\"string\">&quot;tableData&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">style</span>=<span class=\"string\">&quot;width: 100%&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">:row-class-name</span>=<span class=\"string\">&quot;tableRowClassName&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                @<span class=\"attr\">selection-change</span>=<span class=\"string\">&quot;handleSelectionChange&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">type</span>=<span class=\"string\">&quot;selection&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">width</span>=<span class=\"string\">&quot;55&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">type</span>=<span class=\"string\">&quot;index&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">width</span>=<span class=\"string\">&quot;50&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">prop</span>=<span class=\"string\">&quot;brandName&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">label</span>=<span class=\"string\">&quot;品牌名称&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">prop</span>=<span class=\"string\">&quot;companyName&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">label</span>=<span class=\"string\">&quot;企业名称&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">prop</span>=<span class=\"string\">&quot;ordered&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">label</span>=<span class=\"string\">&quot;排序&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">prop</span>=<span class=\"string\">&quot;status&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">label</span>=<span class=\"string\">&quot;当前状态&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">el-table-column</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">align</span>=<span class=\"string\">&quot;center&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">label</span>=<span class=\"string\">&quot;操作&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span>&gt;</span>修改<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;danger&quot;</span>&gt;</span>删除<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">el-row</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">el-table-column</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--分页工具条--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-pagination</span></span></span><br><span class=\"line\"><span class=\"tag\">            @<span class=\"attr\">size-change</span>=<span class=\"string\">&quot;handleSizeChange&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            @<span class=\"attr\">current-change</span>=<span class=\"string\">&quot;handleCurrentChange&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:current-page</span>=<span class=\"string\">&quot;currentPage&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:page-sizes</span>=<span class=\"string\">&quot;[5, 10, 15, 20]&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:page-size</span>=<span class=\"string\">&quot;5&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">layout</span>=<span class=\"string\">&quot;total, sizes, prev, pager, next, jumper&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">:total</span>=<span class=\"string\">&quot;400&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-pagination</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;js/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;element-ui/lib/index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;element-ui/lib/theme-chalk/index.css&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">el</span>: <span class=\"string\">&quot;#app&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">methods</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">tableRowClassName</span>(<span class=\"params\">&#123;row, rowIndex&#125;</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">if</span> (rowIndex === <span class=\"number\">1</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;warning-row&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (rowIndex === <span class=\"number\">3</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;success-row&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 复选框选中后执行的方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">handleSelectionChange</span>(<span class=\"params\">val</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">this</span>.<span class=\"property\">multipleSelection</span> = val;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">multipleSelection</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 查询方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">onSubmit</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">brand</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">// 添加数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">addBrand</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">brand</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"comment\">//分页</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">handleSizeChange</span>(<span class=\"params\">val</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`每页 <span class=\"subst\">$&#123;val&#125;</span> 条`</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"title function_\">handleCurrentChange</span>(<span class=\"params\">val</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`当前页: <span class=\"subst\">$&#123;val&#125;</span>`</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">data</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 当前页码</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">currentPage</span>: <span class=\"number\">4</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 添加数据对话框是否展示的标记</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">dialogVisible</span>: <span class=\"literal\">false</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 品牌模型数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">brand</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">status</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">brandName</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">companyName</span>: <span class=\"string\">&#x27;&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">id</span>:<span class=\"string\">&quot;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">ordered</span>:<span class=\"string\">&quot;&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">description</span>:<span class=\"string\">&quot;&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 复选框选中数据集合</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">multipleSelection</span>: [],</span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"comment\">// 表格数据</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                <span class=\"attr\">tableData</span>: [&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">brandName</span>: <span class=\"string\">&#x27;华为&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">companyName</span>: <span class=\"string\">&#x27;华为科技有限公司&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">ordered</span>: <span class=\"string\">&#x27;100&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">status</span>: <span class=\"string\">&quot;1&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">brandName</span>: <span class=\"string\">&#x27;华为&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">companyName</span>: <span class=\"string\">&#x27;华为科技有限公司&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">ordered</span>: <span class=\"string\">&#x27;100&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">status</span>: <span class=\"string\">&quot;1&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">brandName</span>: <span class=\"string\">&#x27;华为&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">companyName</span>: <span class=\"string\">&#x27;华为科技有限公司&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">ordered</span>: <span class=\"string\">&#x27;100&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">status</span>: <span class=\"string\">&quot;1&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">brandName</span>: <span class=\"string\">&#x27;华为&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">companyName</span>: <span class=\"string\">&#x27;华为科技有限公司&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">ordered</span>: <span class=\"string\">&#x27;100&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">                    <span class=\"attr\">status</span>: <span class=\"string\">&quot;1&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">                &#125;]</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3综合案例\"><a class=\"markdownIt-Anchor\" href=\"#3综合案例\">#</a> 3，综合案例</h2>\n<h3 id=\"31-功能介绍\"><a class=\"markdownIt-Anchor\" href=\"#31-功能介绍\">#</a> 3.1  功能介绍</h3>\n<p><img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825171411003.png\" alt=\"image-20210825171411003\"></p>\n<p>以上是我们在综合案例要实现的功能。对数据的除了对数据的增删改查功能外，还有一些复杂的功能，如  <code>批量删除</code> 、 <code>分页查询</code> 、 <code>条件查询</code>  等功能</p>\n<ul>\n<li><code>批量删除</code>  功能：每条数据前都有复选框，当我选中多条数据并点击  <code>批量删除</code>  按钮后，会发送请求到后端并删除数据库中指定的多条数据。</li>\n<li><code>分页查询</code>  功能：当数据库中有很多数据时，我们不可能将所有的数据展示在一页里，这个时候就需要分页展示数据。</li>\n<li><code>条件查询</code>  功能：数据库量大的时候，我们就需要精确的查询一些想看到的数据，这个时候就需要通过条件查询。</li>\n</ul>\n<p>这里的  <code>修改品牌</code>  和  <code>删除品牌</code>  功能在课程上不做讲解，留作同学来下的练习。</p>\n<h3 id=\"32-环境准备\"><a class=\"markdownIt-Anchor\" href=\"#32-环境准备\">#</a> 3.2  环境准备</h3>\n<p>环境准备我们主要完成以下两件事即可</p>\n<ul>\n<li>将资料的 brand-case 模块导入到 idea 中</li>\n<li>执行资料中提供的 tb_brand.sql 脚本</li>\n</ul>\n<h4 id=\"321-工程准备\"><a class=\"markdownIt-Anchor\" href=\"#321-工程准备\">#</a> 3.2.1  工程准备</h4>\n<p>将  <code>04-资料\\01-初始工程</code>  中的  <code>brand-case</code>  工程导入到我们自己的 idea 中。工程结构如下：</p>\n<img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825195522904.png\" alt=\"image-20210825195522904\" style=\"zoom:80%;\" />\n<h4 id=\"322-创建表\"><a class=\"markdownIt-Anchor\" href=\"#322-创建表\">#</a> 3.2.2  创建表</h4>\n<p>下面是创建表的语句</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 删除tb_brand表</span></span><br><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> if <span class=\"keyword\">exists</span> tb_brand;</span><br><span class=\"line\"><span class=\"comment\">-- 创建tb_brand表</span></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> tb_brand (</span><br><span class=\"line\">    <span class=\"comment\">-- id 主键</span></span><br><span class=\"line\">    id           <span class=\"type\">int</span> <span class=\"keyword\">primary</span> key auto_increment,</span><br><span class=\"line\">    <span class=\"comment\">-- 品牌名称</span></span><br><span class=\"line\">    brand_name   <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 企业名称</span></span><br><span class=\"line\">    company_name <span class=\"type\">varchar</span>(<span class=\"number\">20</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 排序字段</span></span><br><span class=\"line\">    ordered      <span class=\"type\">int</span>,</span><br><span class=\"line\">    <span class=\"comment\">-- 描述信息</span></span><br><span class=\"line\">    description  <span class=\"type\">varchar</span>(<span class=\"number\">100</span>),</span><br><span class=\"line\">    <span class=\"comment\">-- 状态：0：禁用  1：启用</span></span><br><span class=\"line\">    status       <span class=\"type\">int</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">-- 添加数据</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> tb_brand (brand_name, company_name, ordered, description, status)</span><br><span class=\"line\"><span class=\"keyword\">values</span> </span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;三只松鼠&#x27;</span>, <span class=\"string\">&#x27;三只松鼠股份有限公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;好吃不上火&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;三只松鼠&#x27;</span>, <span class=\"string\">&#x27;三只松鼠股份有限公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;好吃不上火&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;三只松鼠&#x27;</span>, <span class=\"string\">&#x27;三只松鼠股份有限公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;好吃不上火&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;华为&#x27;</span>, <span class=\"string\">&#x27;华为技术有限公司&#x27;</span>, <span class=\"number\">100</span>, <span class=\"string\">&#x27;万物互联&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;小米&#x27;</span>, <span class=\"string\">&#x27;小米科技有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;are you ok&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;格力&#x27;</span>, <span class=\"string\">&#x27;格力电器股份有限公司&#x27;</span>, <span class=\"number\">30</span>, <span class=\"string\">&#x27;让世界爱上中国造&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;阿里巴巴&#x27;</span>, <span class=\"string\">&#x27;阿里巴巴集团控股有限公司&#x27;</span>, <span class=\"number\">10</span>, <span class=\"string\">&#x27;买买买&#x27;</span>, <span class=\"number\">1</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;腾讯&#x27;</span>, <span class=\"string\">&#x27;腾讯计算机系统有限公司&#x27;</span>, <span class=\"number\">50</span>, <span class=\"string\">&#x27;玩玩玩&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;百度&#x27;</span>, <span class=\"string\">&#x27;百度在线网络技术公司&#x27;</span>, <span class=\"number\">5</span>, <span class=\"string\">&#x27;搜搜搜&#x27;</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">       (<span class=\"string\">&#x27;京东&#x27;</span>, <span class=\"string\">&#x27;北京京东世纪贸易有限公司&#x27;</span>, <span class=\"number\">40</span>, <span class=\"string\">&#x27;就是快&#x27;</span>, <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"33-查询所有功能\"><a class=\"markdownIt-Anchor\" href=\"#33-查询所有功能\">#</a> 3.3  查询所有功能</h3>\n<p><img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825200138600.png\" alt=\"image-20210825200138600\"></p>\n<p>如上图所示是查询所有品牌数据在页面展示的效果。要实现这个功能，要先搞明白如下问题：</p>\n<ul>\n<li>\n<p>什么时候发送异步请求？</p>\n<p>页面加载完毕后就需要在页面上看到所有的品牌数据。所以在  <code>mounted()</code>  这个构造函数中写发送异步请求的代码。</p>\n</li>\n<li>\n<p>请求需要携带参数吗？</p>\n<p>查询所有功能不需要携带什么参数。</p>\n</li>\n<li>\n<p>响应的数据格式是什么样？</p>\n<p>后端是需要将  <code>List&lt;Brand&gt;</code>  对象转换为 JSON 格式的数据并响应回给浏览器。响应数据格式如下：</p>\n<p><img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825201634849.png\" alt=\"image-20210825201634849\"></p>\n</li>\n</ul>\n<p>整体流程如下</p>\n<p><img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825200332542.png\" alt=\"image-20210825200332542\"></p>\n<p>我们先实现后端程序，然后再实现前端程序。</p>\n<h4 id=\"331-后端实现\"><a class=\"markdownIt-Anchor\" href=\"#331-后端实现\">#</a> 3.3.1 后端实现</h4>\n<h5 id=\"3311-dao方法实现\"><a class=\"markdownIt-Anchor\" href=\"#3311-dao方法实现\">#</a> 3.3.1.1  dao 方法实现</h5>\n<p>在  <code>com.itheima.mapper.BrandMapper</code>  接口中定义抽象方法，并使用  <code>@Select</code>  注解编写 sql 语句</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询所有</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"meta\">@Select(&quot;select * from tb_brand&quot;)</span></span><br><span class=\"line\">List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure>\n<p>由于表中有些字段名和实体类中的属性名没有对应，所以需要在  <code>com/itheima/mapper/BrandMapper.xml</code>  映射配置文件中定义结果映射 ，使用 <code>resultMap</code>  标签。映射配置文件内容如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.itheima.mapper.BrandMapper&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;brandResultMap&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;brand&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;brandName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;brand_name&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;companyName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;company_name&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>定义完结果映射关系后，在接口  <code>selectAll()</code>  方法上引用该结构映射。使用  <code>@ResultMap(&quot;brandResultMap&quot;)</code>  注解</p>\n<p>完整接口的  <code>selectAll()</code>  方法如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询所有</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"meta\">@Select(&quot;select * from tb_brand&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ResultMap(&quot;brandResultMap&quot;)</span></span><br><span class=\"line\">List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span>;</span><br></pre></td></tr></table></figure>\n<h5 id=\"3312-service方法实现\"><a class=\"markdownIt-Anchor\" href=\"#3312-service方法实现\">#</a> 3.3.1.2  service 方法实现</h5>\n<p>在  <code>com.itheima.service</code>  包下创建  <code>BrandService</code>  接口，在该接口中定义查询所有的抽象方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">BrandService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 查询所有</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>并在  <code>com.itheima.service</code>  下再创建  <code>impl</code>  包； <code>impl</code>  表示是放 service 层接口的实现类的包。 在该包下创建名为  <code>BrandServiceImpl</code>  类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BrandServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BrandService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此处为什么要给 service 定义接口呢？因为 service 定义了接口后，在 servlet 中就可以使用多态的形式创建 Service 实现类的对象，如下：</p>\n<img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825203843142.png\" alt=\"image-20210825203843142\" style=\"zoom:80%;\" />\n<p>这里使用多态是因为方便我们后期解除  <code>Servlet</code>  和  <code>service</code>  的耦合。从上面的代码我们可以看到  <code>SelectAllServlet</code>  类和  <code>BrandServiceImpl</code>  类之间是耦合在一起的，如果后期  <code>BrandService</code>  有其它更好的实现类（例如叫  <code>BrandServiceImpl</code> ），那就需要修改  <code>SelectAllServlet</code>  类中的代码。后面我们学习了  <code>Spring</code>  框架后就可以解除  <code>SelectAllServlet</code>  类和红色框括起来的代码耦合。而现在咱们还做不到解除耦合，在这里只需要理解为什么定义接口即可。</p>\n<p><code>BrandServiceImpl</code>  类代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BrandServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">BrandService</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1. 创建SqlSessionFactory 工厂对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSessionFactory</span> <span class=\"variable\">factory</span> <span class=\"operator\">=</span> SqlSessionFactoryUtils.getSqlSessionFactory();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Brand&gt; <span class=\"title function_\">selectAll</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">        <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">        <span class=\"comment\">//3. 获取BrandMapper</span></span><br><span class=\"line\">        <span class=\"type\">BrandMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4. 调用方法</span></span><br><span class=\"line\">        List&lt;Brand&gt; brands = mapper.selectAll();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> brands;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"3313-servlet实现\"><a class=\"markdownIt-Anchor\" href=\"#3313-servlet实现\">#</a> 3.3.1.3  servlet 实现</h5>\n<p>在  <code>com.itheima.web.servlet</code>  包下定义名为  <code>SelectAllServlet</code>  的查询所有的  <code>servlet</code> 。该  <code>servlet</code>  逻辑如下：</p>\n<ul>\n<li>调用 service 的  <code>selectAll()</code>  方法查询所有的品牌数据，并接口返回结果</li>\n<li>将返回的结果转换为 json 数据</li>\n<li>响应 json 数据</li>\n</ul>\n<p>代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/selectAllServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SelectAllServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">BrandService</span> <span class=\"variable\">brandService</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BrandServiceImpl</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1. 调用service查询</span></span><br><span class=\"line\">        List&lt;Brand&gt; brands = brandService.selectAll();</span><br><span class=\"line\">        <span class=\"comment\">//2. 转为JSON</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">jsonString</span> <span class=\"operator\">=</span> JSON.toJSONString(brands);</span><br><span class=\"line\">        <span class=\"comment\">//3. 写数据</span></span><br><span class=\"line\">        response.setContentType(<span class=\"string\">&quot;text/json;charset=utf-8&quot;</span>); <span class=\"comment\">//告知浏览器响应的数据是什么， 告知浏览器使用什么字符集进行解码</span></span><br><span class=\"line\">        response.getWriter().write(jsonString);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"3314-测试后端程序\"><a class=\"markdownIt-Anchor\" href=\"#3314-测试后端程序\">#</a> 3.3.1.4  测试后端程序</h5>\n<p>在浏览器输入访问 servlet 的资源路径  <code>http://localhost:8080/brand-case/selectAllServlet</code>  ，如果没有报错，并能看到如下信息表明后端程序没有问题</p>\n<p><img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825205133752.png\" alt=\"image-20210825205133752\"></p>\n<h4 id=\"332-前端实现\"><a class=\"markdownIt-Anchor\" href=\"#332-前端实现\">#</a> 3.3.2  前端实现</h4>\n<p>前端需要在页面加载完毕后发送 ajax 请求，所以发送请求的逻辑应该放在  <code>mounted()</code>  钩子函数中。而响应回来的数据需要赋值给表格绑定的数据模型，从下图可以看出表格绑定的数据模型是  <code>tableData</code></p>\n<img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825220436889.png\" alt=\"image-20210825220436889\" style=\"zoom:70%;\" />\n<p>前端代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">mounted</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//当页面加载完成后，发送异步请求，获取数据</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>:<span class=\"string\">&quot;get&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/selectAllServlet&quot;</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">        _this.<span class=\"property\">tableData</span> = resp.<span class=\"property\">data</span>;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"34-添加功能\"><a class=\"markdownIt-Anchor\" href=\"#34-添加功能\">#</a> 3.4  添加功能</h3>\n<img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825221138245.png\" alt=\"image-20210825221138245\" style=\"zoom:70%;\" />\n<p>上图是添加数据的对话框，当点击  <code>提交</code>  按钮后就需要将数据提交到后端，并将数据保存到数据库中。下图是整体的流程：</p>\n<p><img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825221329231.png\" alt=\"image-20210825221329231\"></p>\n<p>页面发送请求时，需要将输入框输入的内容提交给后端程序，而这里是以 json 格式进行传递的。而具体的数据格式如下：</p>\n<p><img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210826185917510.png\" alt=\"image-20210826185917510\"></p>\n<blockquote>\n<p><mark>注意：由于是添加数据，所以上述 json 数据中 id 是没有值的。</mark></p>\n</blockquote>\n<h4 id=\"341-后端实现\"><a class=\"markdownIt-Anchor\" href=\"#341-后端实现\">#</a> 3.4.1  后端实现</h4>\n<h5 id=\"3411-dao方法实现\"><a class=\"markdownIt-Anchor\" href=\"#3411-dao方法实现\">#</a> 3.4.1.1  dao 方法实现</h5>\n<p>在  <code>BrandMapper</code>  接口中定义  <code>add()</code>  添加方法，并使用  <code>@Insert</code>  注解编写 sql 语句</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> brand</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"meta\">@Insert(&quot;insert into tb_brand values(null,#&#123;brandName&#125;,#&#123;companyName&#125;,#&#123;ordered&#125;,#&#123;description&#125;,#&#123;status&#125;)&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n<h5 id=\"3412-service方法实现\"><a class=\"markdownIt-Anchor\" href=\"#3412-service方法实现\">#</a> 3.4.1.2  service 方法实现</h5>\n<p>在  <code>BrandService</code>  接口中定义  <code>add()</code>  添加数据的业务逻辑方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加数据</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> brand</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(Brand brand)</span>;</span><br></pre></td></tr></table></figure>\n<p>在  <code>BrandServiceImpl</code>  类中重写  <code>add()</code>  方法，并进行业务逻辑实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(Brand brand)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//2. 获取SqlSession对象</span></span><br><span class=\"line\">    <span class=\"type\">SqlSession</span> <span class=\"variable\">sqlSession</span> <span class=\"operator\">=</span> factory.openSession();</span><br><span class=\"line\">    <span class=\"comment\">//3. 获取BrandMapper</span></span><br><span class=\"line\">    <span class=\"type\">BrandMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> sqlSession.getMapper(BrandMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4. 调用方法</span></span><br><span class=\"line\">    mapper.add(brand);</span><br><span class=\"line\">    sqlSession.commit();<span class=\"comment\">//提交事务</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5. 释放资源</span></span><br><span class=\"line\">    sqlSession.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><mark>注意：增删改操作一定要提交事务。</mark></p>\n</blockquote>\n<h5 id=\"3413-servlet实现\"><a class=\"markdownIt-Anchor\" href=\"#3413-servlet实现\">#</a> 3.4.1.3  servlet 实现</h5>\n<p>在  <code>com.itheima.web.servlet</code>  包写定义名为  <code>AddServlet</code>  的 Servlet。该 Servlet 的逻辑如下：</p>\n<ul>\n<li>接收页面提交的数据。页面到时候提交的数据是 json 格式的数据，所以此处需要使用输入流读取数据</li>\n<li>将接收到的数据转换为  <code>Brand</code>  对象</li>\n<li>调用 service 的  <code>add()</code>  方法进行添加的业务逻辑处理</li>\n<li>给浏览器响应添加成功的标识，这里直接给浏览器响应  <code>success</code>  字符串表示成功</li>\n</ul>\n<p>servlet 代码实现如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@WebServlet(&quot;/addServlet&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">AddServlet</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServlet</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">BrandService</span> <span class=\"variable\">brandService</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BrandServiceImpl</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1. 接收品牌数据</span></span><br><span class=\"line\">        <span class=\"type\">BufferedReader</span> <span class=\"variable\">br</span> <span class=\"operator\">=</span> request.getReader();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">params</span> <span class=\"operator\">=</span> br.readLine();<span class=\"comment\">//json字符串</span></span><br><span class=\"line\">        <span class=\"comment\">//转为Brand对象</span></span><br><span class=\"line\">        <span class=\"type\">Brand</span> <span class=\"variable\">brand</span> <span class=\"operator\">=</span> JSON.parseObject(params, Brand.class);</span><br><span class=\"line\">        <span class=\"comment\">//2. 调用service添加</span></span><br><span class=\"line\">        brandService.add(brand);</span><br><span class=\"line\">        <span class=\"comment\">//3. 响应成功的标识</span></span><br><span class=\"line\">        response.getWriter().write(<span class=\"string\">&quot;success&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.doGet(request, response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"342-前端实现\"><a class=\"markdownIt-Anchor\" href=\"#342-前端实现\">#</a> 3.4.2  前端实现</h4>\n<img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825223121993.png\" alt=\"image-20210825223121993\" style=\"zoom:60%;\" />\n<p>上图左边是页面效果，里面的  <code>提交</code>  按钮可以通过上图右边看出绑定了一个 单击事件，而该事件绑定的是  <code>addBrand</code>  函数，所以添加数据功能的逻辑代码应该写在  <code>addBrand()</code>   函数中。在此方法中需要发送异步请求并将表单中输入的数据作为参数进行传递。如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加数据</span></span><br><span class=\"line\"><span class=\"title function_\">addBrand</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 发送ajax请求，添加数据</span></span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/addServlet&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>:_this.<span class=\"property\">brand</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">       \t<span class=\"comment\">//响应数据的处理逻辑</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在  <code>then</code>  函数中的匿名函数是成功后的回调函数，而  <code>resp.data</code>  就可以获取到响应回来的数据，如果值是  <code>success</code>  表示数据添加成功。成功后我们需要做一下逻辑处理：</p>\n<ol>\n<li>\n<p><strong>关闭新增对话框窗口</strong></p>\n<p>如下图所示是添加数据的对话框代码，从代码中可以看到此对话框绑定了  <code>dialogVisible</code>  数据模型，只需要将该数据模型的值设置为 false，就可以关闭新增对话框窗口了。</p>\n<img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825223933953.png\" alt=\"image-20210825223933953\" style=\"zoom:70%;\" />\n</li>\n<li>\n<p><strong>重新查询数据</strong></p>\n<p>数据添加成功与否，用户只要能在页面上查看到数据说明添加成功。而此处需要重新发送异步请求获取所有的品牌数据，而这段代码在  <code>查询所有</code>  功能中已经实现，所以我们可以将此功能代码进行抽取，抽取到一个  <code>selectAll()</code>  函数中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 查询所有数据</span></span><br><span class=\"line\"><span class=\"title function_\">selectAll</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>:<span class=\"string\">&quot;get&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/selectAllServlet&quot;</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">        _this.<span class=\"property\">tableData</span> = resp.<span class=\"property\">data</span>;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么就需要将  <code>mounted()</code>  钩子函数中代码改进为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">mounted</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//当页面加载完成后，发送异步请求，获取数据</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">selectAll</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>同时在新增响应的回调中调用  <code>selectAll()</code>  进行数据的重新查询。</p>\n</li>\n<li>\n<p><strong>弹出消息给用户提示添加成功</strong></p>\n<p><img data-src=\"D:/notes/%25E4%25BC%25A0%25E6%2599%25BA%25E6%2592%25AD%25E5%25AE%25A2/2021%25E5%25B9%25B4/web%25E9%2598%25B6%25E6%25AE%25B5%25E6%2596%2587%25E6%25A1%25A3%25E7%25BC%2596%25E5%2586%2599/JavaWeb%25E8%25AF%25BE%25E7%25A8%258B%25E6%2596%2587%25E6%25A1%25A3/day14-%25E7%25BB%25BC%25E5%2590%2588%25E6%25A1%2588%25E4%25BE%258B/assets/image-20210825224958220.png\" alt=\"image-20210825224958220\"></p>\n<p>上图左边就是 elementUI 官网提供的成功提示代码，而上图右边是具体的效果。</p>\n<blockquote>\n<p><mark>注意：上面的 this 需要的是表示 VUE 对象的 this。</mark></p>\n</blockquote>\n</li>\n</ol>\n<p>综上所述，前端代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 添加数据</span></span><br><span class=\"line\"><span class=\"title function_\">addBrand</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _this = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 发送ajax请求，添加数据</span></span><br><span class=\"line\">    <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">method</span>:<span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">url</span>:<span class=\"string\">&quot;http://localhost:8080/brand-case/addServlet&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">data</span>:_this.<span class=\"property\">brand</span></span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"keyword\">function</span> (<span class=\"params\">resp</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(resp.<span class=\"property\">data</span> == <span class=\"string\">&quot;success&quot;</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//添加成功</span></span><br><span class=\"line\">            <span class=\"comment\">//关闭窗口</span></span><br><span class=\"line\">            _this.<span class=\"property\">dialogVisible</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 重新查询数据</span></span><br><span class=\"line\">            _this.<span class=\"title function_\">selectAll</span>();</span><br><span class=\"line\">            <span class=\"comment\">// 弹出消息提示</span></span><br><span class=\"line\">            _this.$message(&#123;</span><br><span class=\"line\">                <span class=\"attr\">message</span>: <span class=\"string\">&#x27;恭喜你，添加成功&#x27;</span>,</span><br><span class=\"line\">                <span class=\"attr\">type</span>: <span class=\"string\">&#x27;success&#x27;</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        }
    ]
}